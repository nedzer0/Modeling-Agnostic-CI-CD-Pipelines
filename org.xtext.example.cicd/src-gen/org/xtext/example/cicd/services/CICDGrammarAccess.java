/*
 * generated by Xtext 2.34.0
 */
package org.xtext.example.cicd.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class CICDGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class PipelineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.Pipeline");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPipelineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_2_1_0 = (RuleCall)cNameAssignment_2_1.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_2_2 = (RuleCall)cGroup_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cJobsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cJobsJobParserRuleCall_3_0_0 = (RuleCall)cJobsAssignment_3_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cPipeline_environmentAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cPipeline_environmentEnvironmentParserRuleCall_4_0_0 = (RuleCall)cPipeline_environmentAssignment_4_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cTriggersAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cTriggersScheduleTriggerParserRuleCall_5_0_0 = (RuleCall)cTriggersAssignment_5_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cAgentsAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cAgentsAgentParserRuleCall_6_0_0 = (RuleCall)cAgentsAssignment_6_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Assignment cInputsAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final RuleCall cInputsInputParserRuleCall_7_0_0 = (RuleCall)cInputsAssignment_7_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_7_1 = (RuleCall)cGroup_7.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Assignment cOutputAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final RuleCall cOutputOutputParserRuleCall_8_0_0 = (RuleCall)cOutputAssignment_8_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_8_1 = (RuleCall)cGroup_8.eContents().get(1);
		
		//Pipeline returns Pipeline:
		//    'Pipeline' NEWLINE?
		//    ('name' name=EString NEWLINE)?
		//    ((jobs+=Job)+ NEWLINE?)
		//    ((pipeline_environment+=Environment)+ NEWLINE?)?
		//    ((triggers+=ScheduleTrigger)+ NEWLINE?)?
		//    ((agents+=Agent)+ NEWLINE?)?
		//    ((inputs+=Input)+ NEWLINE?)?
		//    ((output+=Output)+ NEWLINE?)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Pipeline' NEWLINE?
		//('name' name=EString NEWLINE)?
		//((jobs+=Job)+ NEWLINE?)
		//((pipeline_environment+=Environment)+ NEWLINE?)?
		//((triggers+=ScheduleTrigger)+ NEWLINE?)?
		//((agents+=Agent)+ NEWLINE?)?
		//((inputs+=Input)+ NEWLINE?)?
		//((output+=Output)+ NEWLINE?)?
		public Group getGroup() { return cGroup; }
		
		//'Pipeline'
		public Keyword getPipelineKeyword_0() { return cPipelineKeyword_0; }
		
		//NEWLINE?
		public RuleCall getNEWLINETerminalRuleCall_1() { return cNEWLINETerminalRuleCall_1; }
		
		//('name' name=EString NEWLINE)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'name'
		public Keyword getNameKeyword_2_0() { return cNameKeyword_2_0; }
		
		//name=EString
		public Assignment getNameAssignment_2_1() { return cNameAssignment_2_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_1_0() { return cNameEStringParserRuleCall_2_1_0; }
		
		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_2_2() { return cNEWLINETerminalRuleCall_2_2; }
		
		//((jobs+=Job)+ NEWLINE?)
		public Group getGroup_3() { return cGroup_3; }
		
		//(jobs+=Job)+
		public Assignment getJobsAssignment_3_0() { return cJobsAssignment_3_0; }
		
		//Job
		public RuleCall getJobsJobParserRuleCall_3_0_0() { return cJobsJobParserRuleCall_3_0_0; }
		
		//NEWLINE?
		public RuleCall getNEWLINETerminalRuleCall_3_1() { return cNEWLINETerminalRuleCall_3_1; }
		
		//((pipeline_environment+=Environment)+ NEWLINE?)?
		public Group getGroup_4() { return cGroup_4; }
		
		//(pipeline_environment+=Environment)+
		public Assignment getPipeline_environmentAssignment_4_0() { return cPipeline_environmentAssignment_4_0; }
		
		//Environment
		public RuleCall getPipeline_environmentEnvironmentParserRuleCall_4_0_0() { return cPipeline_environmentEnvironmentParserRuleCall_4_0_0; }
		
		//NEWLINE?
		public RuleCall getNEWLINETerminalRuleCall_4_1() { return cNEWLINETerminalRuleCall_4_1; }
		
		//((triggers+=ScheduleTrigger)+ NEWLINE?)?
		public Group getGroup_5() { return cGroup_5; }
		
		//(triggers+=ScheduleTrigger)+
		public Assignment getTriggersAssignment_5_0() { return cTriggersAssignment_5_0; }
		
		//ScheduleTrigger
		public RuleCall getTriggersScheduleTriggerParserRuleCall_5_0_0() { return cTriggersScheduleTriggerParserRuleCall_5_0_0; }
		
		//NEWLINE?
		public RuleCall getNEWLINETerminalRuleCall_5_1() { return cNEWLINETerminalRuleCall_5_1; }
		
		//((agents+=Agent)+ NEWLINE?)?
		public Group getGroup_6() { return cGroup_6; }
		
		//(agents+=Agent)+
		public Assignment getAgentsAssignment_6_0() { return cAgentsAssignment_6_0; }
		
		//Agent
		public RuleCall getAgentsAgentParserRuleCall_6_0_0() { return cAgentsAgentParserRuleCall_6_0_0; }
		
		//NEWLINE?
		public RuleCall getNEWLINETerminalRuleCall_6_1() { return cNEWLINETerminalRuleCall_6_1; }
		
		//((inputs+=Input)+ NEWLINE?)?
		public Group getGroup_7() { return cGroup_7; }
		
		//(inputs+=Input)+
		public Assignment getInputsAssignment_7_0() { return cInputsAssignment_7_0; }
		
		//Input
		public RuleCall getInputsInputParserRuleCall_7_0_0() { return cInputsInputParserRuleCall_7_0_0; }
		
		//NEWLINE?
		public RuleCall getNEWLINETerminalRuleCall_7_1() { return cNEWLINETerminalRuleCall_7_1; }
		
		//((output+=Output)+ NEWLINE?)?
		public Group getGroup_8() { return cGroup_8; }
		
		//(output+=Output)+
		public Assignment getOutputAssignment_8_0() { return cOutputAssignment_8_0; }
		
		//Output
		public RuleCall getOutputOutputParserRuleCall_8_0_0() { return cOutputOutputParserRuleCall_8_0_0; }
		
		//NEWLINE?
		public RuleCall getNEWLINETerminalRuleCall_8_1() { return cNEWLINETerminalRuleCall_8_1; }
	}
	public class JobElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.Job");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJobKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cNameKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cNameAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_1_2_0 = (RuleCall)cNameAssignment_1_2.eContents().get(0);
		private final Assignment cAllowFaillureAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final Keyword cAllowFaillureAllowFaillureKeyword_1_3_0 = (Keyword)cAllowFaillureAssignment_1_3.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final Keyword cParallelKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Assignment cParallelAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cParallelEStringParserRuleCall_1_4_1_0 = (RuleCall)cParallelAssignment_1_4_1.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cGroup_1.eContents().get(5);
		private final Keyword cRequireJobsKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Assignment cRequireJobsAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final RuleCall cRequireJobsEStringParserRuleCall_1_5_1_0 = (RuleCall)cRequireJobsAssignment_1_5_1.eContents().get(0);
		private final Group cGroup_1_5_2 = (Group)cGroup_1_5.eContents().get(2);
		private final Keyword cCommaKeyword_1_5_2_0 = (Keyword)cGroup_1_5_2.eContents().get(0);
		private final Assignment cRequireJobsAssignment_1_5_2_1 = (Assignment)cGroup_1_5_2.eContents().get(1);
		private final RuleCall cRequireJobsEStringParserRuleCall_1_5_2_1_0 = (RuleCall)cRequireJobsAssignment_1_5_2_1.eContents().get(0);
		private final Assignment cStepsAssignment_1_6 = (Assignment)cGroup_1.eContents().get(6);
		private final RuleCall cStepsStepParserRuleCall_1_6_0 = (RuleCall)cStepsAssignment_1_6.eContents().get(0);
		private final Assignment cIfStepAssignment_1_7 = (Assignment)cGroup_1.eContents().get(7);
		private final RuleCall cIfStepIfStepParserRuleCall_1_7_0 = (RuleCall)cIfStepAssignment_1_7.eContents().get(0);
		private final Assignment cArtifactsAssignment_1_8 = (Assignment)cGroup_1.eContents().get(8);
		private final RuleCall cArtifactsArtifactParserRuleCall_1_8_0 = (RuleCall)cArtifactsAssignment_1_8.eContents().get(0);
		private final Assignment cEnvironmentsAssignment_1_9 = (Assignment)cGroup_1.eContents().get(9);
		private final RuleCall cEnvironmentsEnvironmentParserRuleCall_1_9_0 = (RuleCall)cEnvironmentsAssignment_1_9.eContents().get(0);
		private final Assignment cJobsAssignment_1_10 = (Assignment)cGroup_1.eContents().get(10);
		private final RuleCall cJobsJobParserRuleCall_1_10_0 = (RuleCall)cJobsAssignment_1_10.eContents().get(0);
		private final Assignment cMatrixAssignment_1_11 = (Assignment)cGroup_1.eContents().get(11);
		private final RuleCall cMatrixMatrixParserRuleCall_1_11_0 = (RuleCall)cMatrixAssignment_1_11.eContents().get(0);
		private final Assignment cAgentsAssignment_1_12 = (Assignment)cGroup_1.eContents().get(12);
		private final RuleCall cAgentsAgentParserRuleCall_1_12_0 = (RuleCall)cAgentsAssignment_1_12.eContents().get(0);
		private final Assignment cOutputAssignment_1_13 = (Assignment)cGroup_1.eContents().get(13);
		private final RuleCall cOutputOutputParserRuleCall_1_13_0 = (RuleCall)cOutputAssignment_1_13.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_14 = (RuleCall)cGroup_1.eContents().get(14);
		
		//Job returns Job:
		//    'Job'
		//    (BEGIN
		//        'name' name=EString
		//        (allowFaillure?='allowFaillure')?
		//        ('parallel' parallel=EString)?
		//        ('requireJobs' requireJobs+=EString (',' requireJobs+=EString)*)?
		//        (steps+=Step)*
		//        (IfStep+=IfStep)*
		//        (artifacts+=Artifact)*
		//        (environments+=Environment)*
		//        (jobs+=Job)*
		//        (matrix=Matrix)?
		//        (agents+=Agent)*
		//        (output+=Output)*
		//    END)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Job'
		//(BEGIN
		//    'name' name=EString
		//    (allowFaillure?='allowFaillure')?
		//    ('parallel' parallel=EString)?
		//    ('requireJobs' requireJobs+=EString (',' requireJobs+=EString)*)?
		//    (steps+=Step)*
		//    (IfStep+=IfStep)*
		//    (artifacts+=Artifact)*
		//    (environments+=Environment)*
		//    (jobs+=Job)*
		//    (matrix=Matrix)?
		//    (agents+=Agent)*
		//    (output+=Output)*
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Job'
		public Keyword getJobKeyword_0() { return cJobKeyword_0; }
		
		//(BEGIN
		//    'name' name=EString
		//    (allowFaillure?='allowFaillure')?
		//    ('parallel' parallel=EString)?
		//    ('requireJobs' requireJobs+=EString (',' requireJobs+=EString)*)?
		//    (steps+=Step)*
		//    (IfStep+=IfStep)*
		//    (artifacts+=Artifact)*
		//    (environments+=Environment)*
		//    (jobs+=Job)*
		//    (matrix=Matrix)?
		//    (agents+=Agent)*
		//    (output+=Output)*
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'name'
		public Keyword getNameKeyword_1_1() { return cNameKeyword_1_1; }
		
		//name=EString
		public Assignment getNameAssignment_1_2() { return cNameAssignment_1_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_2_0() { return cNameEStringParserRuleCall_1_2_0; }
		
		//(allowFaillure?='allowFaillure')?
		public Assignment getAllowFaillureAssignment_1_3() { return cAllowFaillureAssignment_1_3; }
		
		//'allowFaillure'
		public Keyword getAllowFaillureAllowFaillureKeyword_1_3_0() { return cAllowFaillureAllowFaillureKeyword_1_3_0; }
		
		//('parallel' parallel=EString)?
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'parallel'
		public Keyword getParallelKeyword_1_4_0() { return cParallelKeyword_1_4_0; }
		
		//parallel=EString
		public Assignment getParallelAssignment_1_4_1() { return cParallelAssignment_1_4_1; }
		
		//EString
		public RuleCall getParallelEStringParserRuleCall_1_4_1_0() { return cParallelEStringParserRuleCall_1_4_1_0; }
		
		//('requireJobs' requireJobs+=EString (',' requireJobs+=EString)*)?
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'requireJobs'
		public Keyword getRequireJobsKeyword_1_5_0() { return cRequireJobsKeyword_1_5_0; }
		
		//requireJobs+=EString
		public Assignment getRequireJobsAssignment_1_5_1() { return cRequireJobsAssignment_1_5_1; }
		
		//EString
		public RuleCall getRequireJobsEStringParserRuleCall_1_5_1_0() { return cRequireJobsEStringParserRuleCall_1_5_1_0; }
		
		//(',' requireJobs+=EString)*
		public Group getGroup_1_5_2() { return cGroup_1_5_2; }
		
		//','
		public Keyword getCommaKeyword_1_5_2_0() { return cCommaKeyword_1_5_2_0; }
		
		//requireJobs+=EString
		public Assignment getRequireJobsAssignment_1_5_2_1() { return cRequireJobsAssignment_1_5_2_1; }
		
		//EString
		public RuleCall getRequireJobsEStringParserRuleCall_1_5_2_1_0() { return cRequireJobsEStringParserRuleCall_1_5_2_1_0; }
		
		//(steps+=Step)*
		public Assignment getStepsAssignment_1_6() { return cStepsAssignment_1_6; }
		
		//Step
		public RuleCall getStepsStepParserRuleCall_1_6_0() { return cStepsStepParserRuleCall_1_6_0; }
		
		//(IfStep+=IfStep)*
		public Assignment getIfStepAssignment_1_7() { return cIfStepAssignment_1_7; }
		
		//IfStep
		public RuleCall getIfStepIfStepParserRuleCall_1_7_0() { return cIfStepIfStepParserRuleCall_1_7_0; }
		
		//(artifacts+=Artifact)*
		public Assignment getArtifactsAssignment_1_8() { return cArtifactsAssignment_1_8; }
		
		//Artifact
		public RuleCall getArtifactsArtifactParserRuleCall_1_8_0() { return cArtifactsArtifactParserRuleCall_1_8_0; }
		
		//(environments+=Environment)*
		public Assignment getEnvironmentsAssignment_1_9() { return cEnvironmentsAssignment_1_9; }
		
		//Environment
		public RuleCall getEnvironmentsEnvironmentParserRuleCall_1_9_0() { return cEnvironmentsEnvironmentParserRuleCall_1_9_0; }
		
		//(jobs+=Job)*
		public Assignment getJobsAssignment_1_10() { return cJobsAssignment_1_10; }
		
		//Job
		public RuleCall getJobsJobParserRuleCall_1_10_0() { return cJobsJobParserRuleCall_1_10_0; }
		
		//(matrix=Matrix)?
		public Assignment getMatrixAssignment_1_11() { return cMatrixAssignment_1_11; }
		
		//Matrix
		public RuleCall getMatrixMatrixParserRuleCall_1_11_0() { return cMatrixMatrixParserRuleCall_1_11_0; }
		
		//(agents+=Agent)*
		public Assignment getAgentsAssignment_1_12() { return cAgentsAssignment_1_12; }
		
		//Agent
		public RuleCall getAgentsAgentParserRuleCall_1_12_0() { return cAgentsAgentParserRuleCall_1_12_0; }
		
		//(output+=Output)*
		public Assignment getOutputAssignment_1_13() { return cOutputAssignment_1_13; }
		
		//Output
		public RuleCall getOutputOutputParserRuleCall_1_13_0() { return cOutputOutputParserRuleCall_1_13_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_14() { return cENDTerminalRuleCall_1_14; }
	}
	public class EnvironmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.Environment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnvironmentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cKeyKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cKeyAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cKeyEStringParserRuleCall_1_2_0 = (RuleCall)cKeyAssignment_1_2.eContents().get(0);
		private final Keyword cValueKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cValueAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cValueEStringParserRuleCall_1_4_0 = (RuleCall)cValueAssignment_1_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_5 = (RuleCall)cGroup_1.eContents().get(5);
		
		//Environment returns Environment:
		//    'Environment'
		//    (BEGIN
		//        'key' key=EString
		//        'value' value=EString
		//    END)
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'Environment'
		//(BEGIN
		//    'key' key=EString
		//    'value' value=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Environment'
		public Keyword getEnvironmentKeyword_0() { return cEnvironmentKeyword_0; }
		
		//(BEGIN
		//    'key' key=EString
		//    'value' value=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'key'
		public Keyword getKeyKeyword_1_1() { return cKeyKeyword_1_1; }
		
		//key=EString
		public Assignment getKeyAssignment_1_2() { return cKeyAssignment_1_2; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_1_2_0() { return cKeyEStringParserRuleCall_1_2_0; }
		
		//'value'
		public Keyword getValueKeyword_1_3() { return cValueKeyword_1_3; }
		
		//value=EString
		public Assignment getValueAssignment_1_4() { return cValueAssignment_1_4; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_1_4_0() { return cValueEStringParserRuleCall_1_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_5() { return cENDTerminalRuleCall_1_5; }
	}
	public class ScheduleTriggerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.ScheduleTrigger");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cScheduleTriggerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cTimerKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cTimerAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cTimerEStringParserRuleCall_1_2_0 = (RuleCall)cTimerAssignment_1_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		
		//ScheduleTrigger returns ScheduleTrigger:
		//    'ScheduleTrigger'
		//    (BEGIN
		//        'timer' timer=EString
		//    END)
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'ScheduleTrigger'
		//(BEGIN
		//    'timer' timer=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'ScheduleTrigger'
		public Keyword getScheduleTriggerKeyword_0() { return cScheduleTriggerKeyword_0; }
		
		//(BEGIN
		//    'timer' timer=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'timer'
		public Keyword getTimerKeyword_1_1() { return cTimerKeyword_1_1; }
		
		//timer=EString
		public Assignment getTimerAssignment_1_2() { return cTimerAssignment_1_2; }
		
		//EString
		public RuleCall getTimerEStringParserRuleCall_1_2_0() { return cTimerEStringParserRuleCall_1_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3() { return cENDTerminalRuleCall_1_3; }
	}
	public class AgentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.Agent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAgentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAgentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cLabelsKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cLabelsAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cLabelsEStringParserRuleCall_2_1_1_0 = (RuleCall)cLabelsAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_1_2 = (Group)cGroup_2_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Assignment cLabelsAssignment_2_1_2_1 = (Assignment)cGroup_2_1_2.eContents().get(1);
		private final RuleCall cLabelsEStringParserRuleCall_2_1_2_1_0 = (RuleCall)cLabelsAssignment_2_1_2_1.eContents().get(0);
		private final Assignment cContainerAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cContainerDockerContainerParserRuleCall_2_2_0 = (RuleCall)cContainerAssignment_2_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		
		//Agent returns Agent:
		//    {Agent}
		//    'Agent'
		//    (BEGIN
		//        ('labels' labels+=EString (',' labels+=EString)*)?
		//        (container=DockerContainer)?
		//    END)
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Agent}
		//'Agent'
		//(BEGIN
		//    ('labels' labels+=EString (',' labels+=EString)*)?
		//    (container=DockerContainer)?
		//END)
		public Group getGroup() { return cGroup; }
		
		//{Agent}
		public Action getAgentAction_0() { return cAgentAction_0; }
		
		//'Agent'
		public Keyword getAgentKeyword_1() { return cAgentKeyword_1; }
		
		//(BEGIN
		//    ('labels' labels+=EString (',' labels+=EString)*)?
		//    (container=DockerContainer)?
		//END)
		public Group getGroup_2() { return cGroup_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_0() { return cBEGINTerminalRuleCall_2_0; }
		
		//('labels' labels+=EString (',' labels+=EString)*)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'labels'
		public Keyword getLabelsKeyword_2_1_0() { return cLabelsKeyword_2_1_0; }
		
		//labels+=EString
		public Assignment getLabelsAssignment_2_1_1() { return cLabelsAssignment_2_1_1; }
		
		//EString
		public RuleCall getLabelsEStringParserRuleCall_2_1_1_0() { return cLabelsEStringParserRuleCall_2_1_1_0; }
		
		//(',' labels+=EString)*
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }
		
		//','
		public Keyword getCommaKeyword_2_1_2_0() { return cCommaKeyword_2_1_2_0; }
		
		//labels+=EString
		public Assignment getLabelsAssignment_2_1_2_1() { return cLabelsAssignment_2_1_2_1; }
		
		//EString
		public RuleCall getLabelsEStringParserRuleCall_2_1_2_1_0() { return cLabelsEStringParserRuleCall_2_1_2_1_0; }
		
		//(container=DockerContainer)?
		public Assignment getContainerAssignment_2_2() { return cContainerAssignment_2_2; }
		
		//DockerContainer
		public RuleCall getContainerDockerContainerParserRuleCall_2_2_0() { return cContainerDockerContainerParserRuleCall_2_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_3() { return cENDTerminalRuleCall_2_3; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class InputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.Input");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInputKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cNameKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_1_1_0 = (RuleCall)cNameAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cTypeKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cTypeAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cTypeINPUT_TYPEEnumRuleCall_1_2_1_0 = (RuleCall)cTypeAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cDefaultKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cDefaultAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cDefaultEStringParserRuleCall_1_3_1_0 = (RuleCall)cDefaultAssignment_1_3_1.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final Keyword cDescriptionKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_1_4_1_0 = (RuleCall)cDescriptionAssignment_1_4_1.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cGroup_1.eContents().get(5);
		private final Keyword cValuesKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Assignment cValuesAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final RuleCall cValuesEStringParserRuleCall_1_5_1_0 = (RuleCall)cValuesAssignment_1_5_1.eContents().get(0);
		private final Group cGroup_1_5_2 = (Group)cGroup_1_5.eContents().get(2);
		private final Keyword cCommaKeyword_1_5_2_0 = (Keyword)cGroup_1_5_2.eContents().get(0);
		private final Assignment cValuesAssignment_1_5_2_1 = (Assignment)cGroup_1_5_2.eContents().get(1);
		private final RuleCall cValuesEStringParserRuleCall_1_5_2_1_0 = (RuleCall)cValuesAssignment_1_5_2_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_6 = (RuleCall)cGroup_1.eContents().get(6);
		
		//Input returns Input:
		//    'Input'
		//    (BEGIN
		//        ('name' name=EString )
		//        ('type' type=INPUT_TYPE )
		//        (('default' default=EString) )?
		//        (('description' description=EString) )?
		//        ('values' values+=EString (',' values+=EString)* )?
		//    END)
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'Input'
		//(BEGIN
		//    ('name' name=EString )
		//    ('type' type=INPUT_TYPE )
		//    (('default' default=EString) )?
		//    (('description' description=EString) )?
		//    ('values' values+=EString (',' values+=EString)* )?
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Input'
		public Keyword getInputKeyword_0() { return cInputKeyword_0; }
		
		//(BEGIN
		//    ('name' name=EString )
		//    ('type' type=INPUT_TYPE )
		//    (('default' default=EString) )?
		//    (('description' description=EString) )?
		//    ('values' values+=EString (',' values+=EString)* )?
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//('name' name=EString )
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'name'
		public Keyword getNameKeyword_1_1_0() { return cNameKeyword_1_1_0; }
		
		//name=EString
		public Assignment getNameAssignment_1_1_1() { return cNameAssignment_1_1_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_1_1_0() { return cNameEStringParserRuleCall_1_1_1_0; }
		
		//('type' type=INPUT_TYPE )
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'type'
		public Keyword getTypeKeyword_1_2_0() { return cTypeKeyword_1_2_0; }
		
		//type=INPUT_TYPE
		public Assignment getTypeAssignment_1_2_1() { return cTypeAssignment_1_2_1; }
		
		//INPUT_TYPE
		public RuleCall getTypeINPUT_TYPEEnumRuleCall_1_2_1_0() { return cTypeINPUT_TYPEEnumRuleCall_1_2_1_0; }
		
		//(('default' default=EString) )?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'default'
		public Keyword getDefaultKeyword_1_3_0() { return cDefaultKeyword_1_3_0; }
		
		//default=EString
		public Assignment getDefaultAssignment_1_3_1() { return cDefaultAssignment_1_3_1; }
		
		//EString
		public RuleCall getDefaultEStringParserRuleCall_1_3_1_0() { return cDefaultEStringParserRuleCall_1_3_1_0; }
		
		//(('description' description=EString) )?
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'description'
		public Keyword getDescriptionKeyword_1_4_0() { return cDescriptionKeyword_1_4_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_1_4_1() { return cDescriptionAssignment_1_4_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_1_4_1_0() { return cDescriptionEStringParserRuleCall_1_4_1_0; }
		
		//('values' values+=EString (',' values+=EString)* )?
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'values'
		public Keyword getValuesKeyword_1_5_0() { return cValuesKeyword_1_5_0; }
		
		//values+=EString
		public Assignment getValuesAssignment_1_5_1() { return cValuesAssignment_1_5_1; }
		
		//EString
		public RuleCall getValuesEStringParserRuleCall_1_5_1_0() { return cValuesEStringParserRuleCall_1_5_1_0; }
		
		//(',' values+=EString)*
		public Group getGroup_1_5_2() { return cGroup_1_5_2; }
		
		//','
		public Keyword getCommaKeyword_1_5_2_0() { return cCommaKeyword_1_5_2_0; }
		
		//values+=EString
		public Assignment getValuesAssignment_1_5_2_1() { return cValuesAssignment_1_5_2_1; }
		
		//EString
		public RuleCall getValuesEStringParserRuleCall_1_5_2_1_0() { return cValuesEStringParserRuleCall_1_5_2_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_6() { return cENDTerminalRuleCall_1_6; }
	}
	public class OutputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.Output");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOutputKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cNameKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cNameAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_1_2_0 = (RuleCall)cNameAssignment_1_2.eContents().get(0);
		private final Keyword cValueKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cValueAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cValueEStringParserRuleCall_1_4_0 = (RuleCall)cValueAssignment_1_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_5 = (RuleCall)cGroup_1.eContents().get(5);
		
		//Output returns Output:
		//    'Output'
		//    (BEGIN
		//        'name' name=EString
		//        'value' value=EString
		//    END)
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'Output'
		//(BEGIN
		//    'name' name=EString
		//    'value' value=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Output'
		public Keyword getOutputKeyword_0() { return cOutputKeyword_0; }
		
		//(BEGIN
		//    'name' name=EString
		//    'value' value=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'name'
		public Keyword getNameKeyword_1_1() { return cNameKeyword_1_1; }
		
		//name=EString
		public Assignment getNameAssignment_1_2() { return cNameAssignment_1_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_2_0() { return cNameEStringParserRuleCall_1_2_0; }
		
		//'value'
		public Keyword getValueKeyword_1_3() { return cValueKeyword_1_3; }
		
		//value=EString
		public Assignment getValueAssignment_1_4() { return cValueAssignment_1_4; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_1_4_0() { return cValueEStringParserRuleCall_1_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_5() { return cENDTerminalRuleCall_1_5; }
	}
	public class StepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.Step");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStepKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cCacheAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cCacheCacheParserRuleCall_1_1_0 = (RuleCall)cCacheAssignment_1_1.eContents().get(0);
		private final Assignment cEnvironmentsAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cEnvironmentsEnvironmentParserRuleCall_1_2_0 = (RuleCall)cEnvironmentsAssignment_1_2.eContents().get(0);
		private final Assignment cIfStepAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cIfStepIfStepParserRuleCall_1_3_0 = (RuleCall)cIfStepAssignment_1_3.eContents().get(0);
		private final Assignment cCommandsAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cCommandsCommandParserRuleCall_1_4_0 = (RuleCall)cCommandsAssignment_1_4.eContents().get(0);
		private final Assignment cParametersAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cParametersParametersParserRuleCall_1_5_0 = (RuleCall)cParametersAssignment_1_5.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_6 = (RuleCall)cGroup_1.eContents().get(6);
		
		//Step returns Step:
		//    'Step'
		//    (BEGIN
		//        (cache+=Cache)*
		//        (environments+=Environment)*
		//        (IfStep=IfStep)?
		//        (commands+=Command)+
		//        (parameters+=Parameters)*
		//    END)
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'Step'
		//(BEGIN
		//    (cache+=Cache)*
		//    (environments+=Environment)*
		//    (IfStep=IfStep)?
		//    (commands+=Command)+
		//    (parameters+=Parameters)*
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Step'
		public Keyword getStepKeyword_0() { return cStepKeyword_0; }
		
		//(BEGIN
		//    (cache+=Cache)*
		//    (environments+=Environment)*
		//    (IfStep=IfStep)?
		//    (commands+=Command)+
		//    (parameters+=Parameters)*
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//(cache+=Cache)*
		public Assignment getCacheAssignment_1_1() { return cCacheAssignment_1_1; }
		
		//Cache
		public RuleCall getCacheCacheParserRuleCall_1_1_0() { return cCacheCacheParserRuleCall_1_1_0; }
		
		//(environments+=Environment)*
		public Assignment getEnvironmentsAssignment_1_2() { return cEnvironmentsAssignment_1_2; }
		
		//Environment
		public RuleCall getEnvironmentsEnvironmentParserRuleCall_1_2_0() { return cEnvironmentsEnvironmentParserRuleCall_1_2_0; }
		
		//(IfStep=IfStep)?
		public Assignment getIfStepAssignment_1_3() { return cIfStepAssignment_1_3; }
		
		//IfStep
		public RuleCall getIfStepIfStepParserRuleCall_1_3_0() { return cIfStepIfStepParserRuleCall_1_3_0; }
		
		//(commands+=Command)+
		public Assignment getCommandsAssignment_1_4() { return cCommandsAssignment_1_4; }
		
		//Command
		public RuleCall getCommandsCommandParserRuleCall_1_4_0() { return cCommandsCommandParserRuleCall_1_4_0; }
		
		//(parameters+=Parameters)*
		public Assignment getParametersAssignment_1_5() { return cParametersAssignment_1_5; }
		
		//Parameters
		public RuleCall getParametersParametersParserRuleCall_1_5_0() { return cParametersParametersParserRuleCall_1_5_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_6() { return cENDTerminalRuleCall_1_6; }
	}
	public class IfStepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.IfStep");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIfStepKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cConditionKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cConditionAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cConditionEStringParserRuleCall_1_2_0 = (RuleCall)cConditionAssignment_1_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cIf_stepsKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cIf_stepsAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cIf_stepsStepParserRuleCall_1_3_1_0 = (RuleCall)cIf_stepsAssignment_1_3_1.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final Keyword cElse_stepsKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Assignment cElse_stepsAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cElse_stepsStepParserRuleCall_1_4_1_0 = (RuleCall)cElse_stepsAssignment_1_4_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_5 = (RuleCall)cGroup_1.eContents().get(5);
		
		//IfStep returns IfStep:
		//    'IfStep'
		//    (BEGIN
		//        'condition' condition=EString
		//        ('if_steps' if_steps+=Step)*
		//        ('else_steps' else_steps+=Step)*
		//    END)
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'IfStep'
		//(BEGIN
		//    'condition' condition=EString
		//    ('if_steps' if_steps+=Step)*
		//    ('else_steps' else_steps+=Step)*
		//END)
		public Group getGroup() { return cGroup; }
		
		//'IfStep'
		public Keyword getIfStepKeyword_0() { return cIfStepKeyword_0; }
		
		//(BEGIN
		//    'condition' condition=EString
		//    ('if_steps' if_steps+=Step)*
		//    ('else_steps' else_steps+=Step)*
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'condition'
		public Keyword getConditionKeyword_1_1() { return cConditionKeyword_1_1; }
		
		//condition=EString
		public Assignment getConditionAssignment_1_2() { return cConditionAssignment_1_2; }
		
		//EString
		public RuleCall getConditionEStringParserRuleCall_1_2_0() { return cConditionEStringParserRuleCall_1_2_0; }
		
		//('if_steps' if_steps+=Step)*
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'if_steps'
		public Keyword getIf_stepsKeyword_1_3_0() { return cIf_stepsKeyword_1_3_0; }
		
		//if_steps+=Step
		public Assignment getIf_stepsAssignment_1_3_1() { return cIf_stepsAssignment_1_3_1; }
		
		//Step
		public RuleCall getIf_stepsStepParserRuleCall_1_3_1_0() { return cIf_stepsStepParserRuleCall_1_3_1_0; }
		
		//('else_steps' else_steps+=Step)*
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'else_steps'
		public Keyword getElse_stepsKeyword_1_4_0() { return cElse_stepsKeyword_1_4_0; }
		
		//else_steps+=Step
		public Assignment getElse_stepsAssignment_1_4_1() { return cElse_stepsAssignment_1_4_1; }
		
		//Step
		public RuleCall getElse_stepsStepParserRuleCall_1_4_1_0() { return cElse_stepsStepParserRuleCall_1_4_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_5() { return cENDTerminalRuleCall_1_5; }
	}
	public class ArtifactElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.Artifact");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cArtifactAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cArtifactKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cNameKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cNameAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_2_1_1_0 = (RuleCall)cNameAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cMessageKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cMessageAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cMessageEStringParserRuleCall_2_2_1_0 = (RuleCall)cMessageAssignment_2_2_1.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Keyword cPathKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cPathAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cPathEStringParserRuleCall_2_3_1_0 = (RuleCall)cPathAssignment_2_3_1.eContents().get(0);
		private final Group cGroup_2_3_2 = (Group)cGroup_2_3.eContents().get(2);
		private final Keyword cCommaKeyword_2_3_2_0 = (Keyword)cGroup_2_3_2.eContents().get(0);
		private final Assignment cPathAssignment_2_3_2_1 = (Assignment)cGroup_2_3_2.eContents().get(1);
		private final RuleCall cPathEStringParserRuleCall_2_3_2_1_0 = (RuleCall)cPathAssignment_2_3_2_1.eContents().get(0);
		private final Group cGroup_2_4 = (Group)cGroup_2.eContents().get(4);
		private final Keyword cTypeKeyword_2_4_0 = (Keyword)cGroup_2_4.eContents().get(0);
		private final Assignment cTypeAssignment_2_4_1 = (Assignment)cGroup_2_4.eContents().get(1);
		private final RuleCall cTypeARTIFACT_TYPEEnumRuleCall_2_4_1_0 = (RuleCall)cTypeAssignment_2_4_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_5 = (RuleCall)cGroup_2.eContents().get(5);
		
		//Artifact returns Artifact:
		//    {Artifact}
		//    'Artifact'
		//    (BEGIN
		//        ('name' name=EString)?
		//        ('message' message=EString )?
		//        ('path'  path+=EString (',' path+=EString)* )?
		//        ('type' type=ARTIFACT_TYPE)?
		//    END)
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Artifact}
		//'Artifact'
		//(BEGIN
		//    ('name' name=EString)?
		//    ('message' message=EString )?
		//    ('path'  path+=EString (',' path+=EString)* )?
		//    ('type' type=ARTIFACT_TYPE)?
		//END)
		public Group getGroup() { return cGroup; }
		
		//{Artifact}
		public Action getArtifactAction_0() { return cArtifactAction_0; }
		
		//'Artifact'
		public Keyword getArtifactKeyword_1() { return cArtifactKeyword_1; }
		
		//(BEGIN
		//    ('name' name=EString)?
		//    ('message' message=EString )?
		//    ('path'  path+=EString (',' path+=EString)* )?
		//    ('type' type=ARTIFACT_TYPE)?
		//END)
		public Group getGroup_2() { return cGroup_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_0() { return cBEGINTerminalRuleCall_2_0; }
		
		//('name' name=EString)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'name'
		public Keyword getNameKeyword_2_1_0() { return cNameKeyword_2_1_0; }
		
		//name=EString
		public Assignment getNameAssignment_2_1_1() { return cNameAssignment_2_1_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_1_1_0() { return cNameEStringParserRuleCall_2_1_1_0; }
		
		//('message' message=EString )?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'message'
		public Keyword getMessageKeyword_2_2_0() { return cMessageKeyword_2_2_0; }
		
		//message=EString
		public Assignment getMessageAssignment_2_2_1() { return cMessageAssignment_2_2_1; }
		
		//EString
		public RuleCall getMessageEStringParserRuleCall_2_2_1_0() { return cMessageEStringParserRuleCall_2_2_1_0; }
		
		//('path'  path+=EString (',' path+=EString)* )?
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//'path'
		public Keyword getPathKeyword_2_3_0() { return cPathKeyword_2_3_0; }
		
		//path+=EString
		public Assignment getPathAssignment_2_3_1() { return cPathAssignment_2_3_1; }
		
		//EString
		public RuleCall getPathEStringParserRuleCall_2_3_1_0() { return cPathEStringParserRuleCall_2_3_1_0; }
		
		//(',' path+=EString)*
		public Group getGroup_2_3_2() { return cGroup_2_3_2; }
		
		//','
		public Keyword getCommaKeyword_2_3_2_0() { return cCommaKeyword_2_3_2_0; }
		
		//path+=EString
		public Assignment getPathAssignment_2_3_2_1() { return cPathAssignment_2_3_2_1; }
		
		//EString
		public RuleCall getPathEStringParserRuleCall_2_3_2_1_0() { return cPathEStringParserRuleCall_2_3_2_1_0; }
		
		//('type' type=ARTIFACT_TYPE)?
		public Group getGroup_2_4() { return cGroup_2_4; }
		
		//'type'
		public Keyword getTypeKeyword_2_4_0() { return cTypeKeyword_2_4_0; }
		
		//type=ARTIFACT_TYPE
		public Assignment getTypeAssignment_2_4_1() { return cTypeAssignment_2_4_1; }
		
		//ARTIFACT_TYPE
		public RuleCall getTypeARTIFACT_TYPEEnumRuleCall_2_4_1_0() { return cTypeARTIFACT_TYPEEnumRuleCall_2_4_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_5() { return cENDTerminalRuleCall_2_5; }
	}
	public class MatrixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.Matrix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMatrixKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cNameKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_1_1_0 = (RuleCall)cNameAssignment_1_1_1.eContents().get(0);
		private final Assignment cStepsAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cStepsStepParserRuleCall_1_2_0 = (RuleCall)cStepsAssignment_1_2.eContents().get(0);
		private final Assignment cJobsAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cJobsJobParserRuleCall_1_3_0 = (RuleCall)cJobsAssignment_1_3.eContents().get(0);
		private final Assignment cConfigsAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cConfigsMatrixConfigParserRuleCall_1_4_0 = (RuleCall)cConfigsAssignment_1_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_5 = (RuleCall)cGroup_1.eContents().get(5);
		
		//Matrix returns Matrix:
		//    'Matrix'
		//    (BEGIN
		//        ('name' name=EString)?
		//        (steps+=Step)*
		//        (jobs+=Job)*
		//        (configs+=MatrixConfig)+
		//    END)
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'Matrix'
		//(BEGIN
		//    ('name' name=EString)?
		//    (steps+=Step)*
		//    (jobs+=Job)*
		//    (configs+=MatrixConfig)+
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Matrix'
		public Keyword getMatrixKeyword_0() { return cMatrixKeyword_0; }
		
		//(BEGIN
		//    ('name' name=EString)?
		//    (steps+=Step)*
		//    (jobs+=Job)*
		//    (configs+=MatrixConfig)+
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//('name' name=EString)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'name'
		public Keyword getNameKeyword_1_1_0() { return cNameKeyword_1_1_0; }
		
		//name=EString
		public Assignment getNameAssignment_1_1_1() { return cNameAssignment_1_1_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_1_1_0() { return cNameEStringParserRuleCall_1_1_1_0; }
		
		//(steps+=Step)*
		public Assignment getStepsAssignment_1_2() { return cStepsAssignment_1_2; }
		
		//Step
		public RuleCall getStepsStepParserRuleCall_1_2_0() { return cStepsStepParserRuleCall_1_2_0; }
		
		//(jobs+=Job)*
		public Assignment getJobsAssignment_1_3() { return cJobsAssignment_1_3; }
		
		//Job
		public RuleCall getJobsJobParserRuleCall_1_3_0() { return cJobsJobParserRuleCall_1_3_0; }
		
		//(configs+=MatrixConfig)+
		public Assignment getConfigsAssignment_1_4() { return cConfigsAssignment_1_4; }
		
		//MatrixConfig
		public RuleCall getConfigsMatrixConfigParserRuleCall_1_4_0() { return cConfigsMatrixConfigParserRuleCall_1_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_5() { return cENDTerminalRuleCall_1_5; }
	}
	public class EBooleanObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.EBooleanObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBooleanObject returns ecore::EBooleanObject:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class CommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.Command");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCommandAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCommandKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Keyword cNameKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cNameAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_2_0 = (RuleCall)cNameAssignment_2_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		
		//Command returns Command:
		//    {Command}
		//    'Command'
		//    (BEGIN
		//        'name' name=EString
		//    END)
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Command}
		//'Command'
		//(BEGIN
		//    'name' name=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//{Command}
		public Action getCommandAction_0() { return cCommandAction_0; }
		
		//'Command'
		public Keyword getCommandKeyword_1() { return cCommandKeyword_1; }
		
		//(BEGIN
		//    'name' name=EString
		//END)
		public Group getGroup_2() { return cGroup_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_0() { return cBEGINTerminalRuleCall_2_0; }
		
		//'name'
		public Keyword getNameKeyword_2_1() { return cNameKeyword_2_1; }
		
		//name=EString
		public Assignment getNameAssignment_2_2() { return cNameAssignment_2_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_2_0() { return cNameEStringParserRuleCall_2_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_3() { return cENDTerminalRuleCall_2_3; }
	}
	public class ParametersElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.Parameters");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParametersKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cParameterKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cParameterAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cParameterEStringParserRuleCall_1_2_0 = (RuleCall)cParameterAssignment_1_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		
		//Parameters returns Parameters:
		//    'Parameters'
		//    (BEGIN
		//        'parameter' parameter=EString
		//    END)
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'Parameters'
		//(BEGIN
		//    'parameter' parameter=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Parameters'
		public Keyword getParametersKeyword_0() { return cParametersKeyword_0; }
		
		//(BEGIN
		//    'parameter' parameter=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'parameter'
		public Keyword getParameterKeyword_1_1() { return cParameterKeyword_1_1; }
		
		//parameter=EString
		public Assignment getParameterAssignment_1_2() { return cParameterAssignment_1_2; }
		
		//EString
		public RuleCall getParameterEStringParserRuleCall_1_2_0() { return cParameterEStringParserRuleCall_1_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3() { return cENDTerminalRuleCall_1_3; }
	}
	public class CacheElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.Cache");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCacheKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cModeKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cModeAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cModeCACHE_MODEEnumRuleCall_1_2_0 = (RuleCall)cModeAssignment_1_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cPathsKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cPathsAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cPathsEStringParserRuleCall_1_3_1_0 = (RuleCall)cPathsAssignment_1_3_1.eContents().get(0);
		private final Group cGroup_1_3_2 = (Group)cGroup_1_3.eContents().get(2);
		private final Keyword cCommaKeyword_1_3_2_0 = (Keyword)cGroup_1_3_2.eContents().get(0);
		private final Assignment cPathsAssignment_1_3_2_1 = (Assignment)cGroup_1_3_2.eContents().get(1);
		private final RuleCall cPathsEStringParserRuleCall_1_3_2_1_0 = (RuleCall)cPathsAssignment_1_3_2_1.eContents().get(0);
		private final Keyword cKeyKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cKeyAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cKeyEStringParserRuleCall_1_5_0 = (RuleCall)cKeyAssignment_1_5.eContents().get(0);
		private final Group cGroup_1_6 = (Group)cGroup_1.eContents().get(6);
		private final Keyword cKeysKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final Assignment cKeysAssignment_1_6_1 = (Assignment)cGroup_1_6.eContents().get(1);
		private final RuleCall cKeysEStringParserRuleCall_1_6_1_0 = (RuleCall)cKeysAssignment_1_6_1.eContents().get(0);
		private final Group cGroup_1_6_2 = (Group)cGroup_1_6.eContents().get(2);
		private final Keyword cCommaKeyword_1_6_2_0 = (Keyword)cGroup_1_6_2.eContents().get(0);
		private final Assignment cKeysAssignment_1_6_2_1 = (Assignment)cGroup_1_6_2.eContents().get(1);
		private final RuleCall cKeysEStringParserRuleCall_1_6_2_1_0 = (RuleCall)cKeysAssignment_1_6_2_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_7 = (RuleCall)cGroup_1.eContents().get(7);
		
		//Cache returns Cache:
		//    'Cache'
		//    (BEGIN
		//        'mode' mode=CACHE_MODE
		//        ('paths' paths+=EString (',' paths+=EString)*)
		//        'key' key=EString
		//        ('keys' keys+=EString (',' keys+=EString)*)?
		//    END)
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'Cache'
		//(BEGIN
		//    'mode' mode=CACHE_MODE
		//    ('paths' paths+=EString (',' paths+=EString)*)
		//    'key' key=EString
		//    ('keys' keys+=EString (',' keys+=EString)*)?
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Cache'
		public Keyword getCacheKeyword_0() { return cCacheKeyword_0; }
		
		//(BEGIN
		//    'mode' mode=CACHE_MODE
		//    ('paths' paths+=EString (',' paths+=EString)*)
		//    'key' key=EString
		//    ('keys' keys+=EString (',' keys+=EString)*)?
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'mode'
		public Keyword getModeKeyword_1_1() { return cModeKeyword_1_1; }
		
		//mode=CACHE_MODE
		public Assignment getModeAssignment_1_2() { return cModeAssignment_1_2; }
		
		//CACHE_MODE
		public RuleCall getModeCACHE_MODEEnumRuleCall_1_2_0() { return cModeCACHE_MODEEnumRuleCall_1_2_0; }
		
		//('paths' paths+=EString (',' paths+=EString)*)
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'paths'
		public Keyword getPathsKeyword_1_3_0() { return cPathsKeyword_1_3_0; }
		
		//paths+=EString
		public Assignment getPathsAssignment_1_3_1() { return cPathsAssignment_1_3_1; }
		
		//EString
		public RuleCall getPathsEStringParserRuleCall_1_3_1_0() { return cPathsEStringParserRuleCall_1_3_1_0; }
		
		//(',' paths+=EString)*
		public Group getGroup_1_3_2() { return cGroup_1_3_2; }
		
		//','
		public Keyword getCommaKeyword_1_3_2_0() { return cCommaKeyword_1_3_2_0; }
		
		//paths+=EString
		public Assignment getPathsAssignment_1_3_2_1() { return cPathsAssignment_1_3_2_1; }
		
		//EString
		public RuleCall getPathsEStringParserRuleCall_1_3_2_1_0() { return cPathsEStringParserRuleCall_1_3_2_1_0; }
		
		//'key'
		public Keyword getKeyKeyword_1_4() { return cKeyKeyword_1_4; }
		
		//key=EString
		public Assignment getKeyAssignment_1_5() { return cKeyAssignment_1_5; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_1_5_0() { return cKeyEStringParserRuleCall_1_5_0; }
		
		//('keys' keys+=EString (',' keys+=EString)*)?
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//'keys'
		public Keyword getKeysKeyword_1_6_0() { return cKeysKeyword_1_6_0; }
		
		//keys+=EString
		public Assignment getKeysAssignment_1_6_1() { return cKeysAssignment_1_6_1; }
		
		//EString
		public RuleCall getKeysEStringParserRuleCall_1_6_1_0() { return cKeysEStringParserRuleCall_1_6_1_0; }
		
		//(',' keys+=EString)*
		public Group getGroup_1_6_2() { return cGroup_1_6_2; }
		
		//','
		public Keyword getCommaKeyword_1_6_2_0() { return cCommaKeyword_1_6_2_0; }
		
		//keys+=EString
		public Assignment getKeysAssignment_1_6_2_1() { return cKeysAssignment_1_6_2_1; }
		
		//EString
		public RuleCall getKeysEStringParserRuleCall_1_6_2_1_0() { return cKeysEStringParserRuleCall_1_6_2_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_7() { return cENDTerminalRuleCall_1_7; }
	}
	public class MatrixConfigElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.MatrixConfig");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMatrixConfigKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cNameKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cNameAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_1_2_0 = (RuleCall)cNameAssignment_1_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cValuesKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cValuesAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cValuesEStringParserRuleCall_1_3_1_0 = (RuleCall)cValuesAssignment_1_3_1.eContents().get(0);
		private final Group cGroup_1_3_2 = (Group)cGroup_1_3.eContents().get(2);
		private final Keyword cCommaKeyword_1_3_2_0 = (Keyword)cGroup_1_3_2.eContents().get(0);
		private final Assignment cValuesAssignment_1_3_2_1 = (Assignment)cGroup_1_3_2.eContents().get(1);
		private final RuleCall cValuesEStringParserRuleCall_1_3_2_1_0 = (RuleCall)cValuesAssignment_1_3_2_1.eContents().get(0);
		private final Keyword cTypeKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cTypeAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cTypeMATRIX_CONFIG_TYPEEnumRuleCall_1_5_0 = (RuleCall)cTypeAssignment_1_5.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_6 = (RuleCall)cGroup_1.eContents().get(6);
		
		//MatrixConfig returns MatrixConfig:
		//    'MatrixConfig'
		//    (BEGIN
		//        'name' name=EString
		//        ('values' (values+=EString) (',' values+=EString)*)
		//        'type' type=MATRIX_CONFIG_TYPE
		//    END)
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'MatrixConfig'
		//(BEGIN
		//    'name' name=EString
		//    ('values' (values+=EString) (',' values+=EString)*)
		//    'type' type=MATRIX_CONFIG_TYPE
		//END)
		public Group getGroup() { return cGroup; }
		
		//'MatrixConfig'
		public Keyword getMatrixConfigKeyword_0() { return cMatrixConfigKeyword_0; }
		
		//(BEGIN
		//    'name' name=EString
		//    ('values' (values+=EString) (',' values+=EString)*)
		//    'type' type=MATRIX_CONFIG_TYPE
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'name'
		public Keyword getNameKeyword_1_1() { return cNameKeyword_1_1; }
		
		//name=EString
		public Assignment getNameAssignment_1_2() { return cNameAssignment_1_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_2_0() { return cNameEStringParserRuleCall_1_2_0; }
		
		//('values' (values+=EString) (',' values+=EString)*)
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'values'
		public Keyword getValuesKeyword_1_3_0() { return cValuesKeyword_1_3_0; }
		
		//(values+=EString)
		public Assignment getValuesAssignment_1_3_1() { return cValuesAssignment_1_3_1; }
		
		//EString
		public RuleCall getValuesEStringParserRuleCall_1_3_1_0() { return cValuesEStringParserRuleCall_1_3_1_0; }
		
		//(',' values+=EString)*
		public Group getGroup_1_3_2() { return cGroup_1_3_2; }
		
		//','
		public Keyword getCommaKeyword_1_3_2_0() { return cCommaKeyword_1_3_2_0; }
		
		//values+=EString
		public Assignment getValuesAssignment_1_3_2_1() { return cValuesAssignment_1_3_2_1; }
		
		//EString
		public RuleCall getValuesEStringParserRuleCall_1_3_2_1_0() { return cValuesEStringParserRuleCall_1_3_2_1_0; }
		
		//'type'
		public Keyword getTypeKeyword_1_4() { return cTypeKeyword_1_4; }
		
		//type=MATRIX_CONFIG_TYPE
		public Assignment getTypeAssignment_1_5() { return cTypeAssignment_1_5; }
		
		//MATRIX_CONFIG_TYPE
		public RuleCall getTypeMATRIX_CONFIG_TYPEEnumRuleCall_1_5_0() { return cTypeMATRIX_CONFIG_TYPEEnumRuleCall_1_5_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_6() { return cENDTerminalRuleCall_1_6; }
	}
	public class DockerContainerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.DockerContainer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDockerContainerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cImageKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cImageAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cImageEStringParserRuleCall_1_2_0 = (RuleCall)cImageAssignment_1_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cUsernameKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cUsernameAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cUsernameEStringParserRuleCall_1_3_1_0 = (RuleCall)cUsernameAssignment_1_3_1.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final Keyword cPasswordKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Assignment cPasswordAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cPasswordEStringParserRuleCall_1_4_1_0 = (RuleCall)cPasswordAssignment_1_4_1.eContents().get(0);
		private final Assignment cEnvironmentsAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cEnvironmentsEnvironmentParserRuleCall_1_5_0 = (RuleCall)cEnvironmentsAssignment_1_5.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_6 = (RuleCall)cGroup_1.eContents().get(6);
		
		//DockerContainer returns DockerContainer:
		//    'DockerContainer'
		//    (BEGIN
		//        'image' image=EString
		//        ('username' username=EString )?
		//        ('password' password=EString )?
		//        (environments+=Environment)*
		//    END)
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'DockerContainer'
		//(BEGIN
		//    'image' image=EString
		//    ('username' username=EString )?
		//    ('password' password=EString )?
		//    (environments+=Environment)*
		//END)
		public Group getGroup() { return cGroup; }
		
		//'DockerContainer'
		public Keyword getDockerContainerKeyword_0() { return cDockerContainerKeyword_0; }
		
		//(BEGIN
		//    'image' image=EString
		//    ('username' username=EString )?
		//    ('password' password=EString )?
		//    (environments+=Environment)*
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'image'
		public Keyword getImageKeyword_1_1() { return cImageKeyword_1_1; }
		
		//image=EString
		public Assignment getImageAssignment_1_2() { return cImageAssignment_1_2; }
		
		//EString
		public RuleCall getImageEStringParserRuleCall_1_2_0() { return cImageEStringParserRuleCall_1_2_0; }
		
		//('username' username=EString )?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'username'
		public Keyword getUsernameKeyword_1_3_0() { return cUsernameKeyword_1_3_0; }
		
		//username=EString
		public Assignment getUsernameAssignment_1_3_1() { return cUsernameAssignment_1_3_1; }
		
		//EString
		public RuleCall getUsernameEStringParserRuleCall_1_3_1_0() { return cUsernameEStringParserRuleCall_1_3_1_0; }
		
		//('password' password=EString )?
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'password'
		public Keyword getPasswordKeyword_1_4_0() { return cPasswordKeyword_1_4_0; }
		
		//password=EString
		public Assignment getPasswordAssignment_1_4_1() { return cPasswordAssignment_1_4_1; }
		
		//EString
		public RuleCall getPasswordEStringParserRuleCall_1_4_1_0() { return cPasswordEStringParserRuleCall_1_4_1_0; }
		
		//(environments+=Environment)*
		public Assignment getEnvironmentsAssignment_1_5() { return cEnvironmentsAssignment_1_5; }
		
		//Environment
		public RuleCall getEnvironmentsEnvironmentParserRuleCall_1_5_0() { return cEnvironmentsEnvironmentParserRuleCall_1_5_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_6() { return cENDTerminalRuleCall_1_6; }
	}
	
	public class CACHE_MODEElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.CACHE_MODE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSTOREEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSTORESTOREKeyword_0_0 = (Keyword)cSTOREEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cLOADEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cLOADLOADKeyword_1_0 = (Keyword)cLOADEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBOTHEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBOTHBOTHKeyword_2_0 = (Keyword)cBOTHEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum CACHE_MODE returns CACHE_MODE:
		//                STORE = 'STORE' | LOAD = 'LOAD' | BOTH = 'BOTH';
		public EnumRule getRule() { return rule; }
		
		//STORE = 'STORE' | LOAD = 'LOAD' | BOTH = 'BOTH'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STORE = 'STORE'
		public EnumLiteralDeclaration getSTOREEnumLiteralDeclaration_0() { return cSTOREEnumLiteralDeclaration_0; }
		
		//'STORE'
		public Keyword getSTORESTOREKeyword_0_0() { return cSTORESTOREKeyword_0_0; }
		
		//LOAD = 'LOAD'
		public EnumLiteralDeclaration getLOADEnumLiteralDeclaration_1() { return cLOADEnumLiteralDeclaration_1; }
		
		//'LOAD'
		public Keyword getLOADLOADKeyword_1_0() { return cLOADLOADKeyword_1_0; }
		
		//BOTH = 'BOTH'
		public EnumLiteralDeclaration getBOTHEnumLiteralDeclaration_2() { return cBOTHEnumLiteralDeclaration_2; }
		
		//'BOTH'
		public Keyword getBOTHBOTHKeyword_2_0() { return cBOTHBOTHKeyword_2_0; }
	}
	public class ARTIFACT_TYPEElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.ARTIFACT_TYPE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cUPLOADEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cUPLOADUPLOADKeyword_0_0 = (Keyword)cUPLOADEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDOWNLOADEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDOWNLOADDOWNLOADKeyword_1_0 = (Keyword)cDOWNLOADEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum ARTIFACT_TYPE returns ARTIFACT_TYPE:
		//                UPLOAD = 'UPLOAD' | DOWNLOAD = 'DOWNLOAD';
		public EnumRule getRule() { return rule; }
		
		//UPLOAD = 'UPLOAD' | DOWNLOAD = 'DOWNLOAD'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//UPLOAD = 'UPLOAD'
		public EnumLiteralDeclaration getUPLOADEnumLiteralDeclaration_0() { return cUPLOADEnumLiteralDeclaration_0; }
		
		//'UPLOAD'
		public Keyword getUPLOADUPLOADKeyword_0_0() { return cUPLOADUPLOADKeyword_0_0; }
		
		//DOWNLOAD = 'DOWNLOAD'
		public EnumLiteralDeclaration getDOWNLOADEnumLiteralDeclaration_1() { return cDOWNLOADEnumLiteralDeclaration_1; }
		
		//'DOWNLOAD'
		public Keyword getDOWNLOADDOWNLOADKeyword_1_0() { return cDOWNLOADDOWNLOADKeyword_1_0; }
	}
	public class MATRIX_CONFIG_TYPEElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.MATRIX_CONFIG_TYPE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDEFAULTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDEFAULTDEFAULTKeyword_0_0 = (Keyword)cDEFAULTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cINCLUDEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cINCLUDEINCLUDEKeyword_1_0 = (Keyword)cINCLUDEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cEXCLUDEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cEXCLUDEEXCLUDEKeyword_2_0 = (Keyword)cEXCLUDEEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum MATRIX_CONFIG_TYPE returns MATRIX_CONFIG_TYPE:
		//                DEFAULT = 'DEFAULT' | INCLUDE = 'INCLUDE' | EXCLUDE = 'EXCLUDE';
		public EnumRule getRule() { return rule; }
		
		//DEFAULT = 'DEFAULT' | INCLUDE = 'INCLUDE' | EXCLUDE = 'EXCLUDE'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DEFAULT = 'DEFAULT'
		public EnumLiteralDeclaration getDEFAULTEnumLiteralDeclaration_0() { return cDEFAULTEnumLiteralDeclaration_0; }
		
		//'DEFAULT'
		public Keyword getDEFAULTDEFAULTKeyword_0_0() { return cDEFAULTDEFAULTKeyword_0_0; }
		
		//INCLUDE = 'INCLUDE'
		public EnumLiteralDeclaration getINCLUDEEnumLiteralDeclaration_1() { return cINCLUDEEnumLiteralDeclaration_1; }
		
		//'INCLUDE'
		public Keyword getINCLUDEINCLUDEKeyword_1_0() { return cINCLUDEINCLUDEKeyword_1_0; }
		
		//EXCLUDE = 'EXCLUDE'
		public EnumLiteralDeclaration getEXCLUDEEnumLiteralDeclaration_2() { return cEXCLUDEEnumLiteralDeclaration_2; }
		
		//'EXCLUDE'
		public Keyword getEXCLUDEEXCLUDEKeyword_2_0() { return cEXCLUDEEXCLUDEKeyword_2_0; }
	}
	public class INPUT_TYPEElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.INPUT_TYPE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSTRINGEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSTRINGSTRINGKeyword_0_0 = (Keyword)cSTRINGEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNUMBEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNUMBERNUMBERKeyword_1_0 = (Keyword)cNUMBEREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBOOLEANEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBOOLEANBOOLEANKeyword_2_0 = (Keyword)cBOOLEANEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cSECRETEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cSECRETSECRETKeyword_3_0 = (Keyword)cSECRETEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cCHOICEEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cCHOICECHOICEKeyword_4_0 = (Keyword)cCHOICEEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cPASSWORDEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cPASSWORDPASSWORDKeyword_5_0 = (Keyword)cPASSWORDEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cTEXTEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cTEXTTEXTKeyword_6_0 = (Keyword)cTEXTEnumLiteralDeclaration_6.eContents().get(0);
		
		//enum INPUT_TYPE returns INPUT_TYPE:
		//                STRING = 'STRING' | NUMBER = 'NUMBER' | BOOLEAN = 'BOOLEAN' | SECRET = 'SECRET' | CHOICE = 'CHOICE' | PASSWORD = 'PASSWORD' | TEXT = 'TEXT';
		public EnumRule getRule() { return rule; }
		
		//STRING = 'STRING' | NUMBER = 'NUMBER' | BOOLEAN = 'BOOLEAN' | SECRET = 'SECRET' | CHOICE = 'CHOICE' | PASSWORD = 'PASSWORD' | TEXT = 'TEXT'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING = 'STRING'
		public EnumLiteralDeclaration getSTRINGEnumLiteralDeclaration_0() { return cSTRINGEnumLiteralDeclaration_0; }
		
		//'STRING'
		public Keyword getSTRINGSTRINGKeyword_0_0() { return cSTRINGSTRINGKeyword_0_0; }
		
		//NUMBER = 'NUMBER'
		public EnumLiteralDeclaration getNUMBEREnumLiteralDeclaration_1() { return cNUMBEREnumLiteralDeclaration_1; }
		
		//'NUMBER'
		public Keyword getNUMBERNUMBERKeyword_1_0() { return cNUMBERNUMBERKeyword_1_0; }
		
		//BOOLEAN = 'BOOLEAN'
		public EnumLiteralDeclaration getBOOLEANEnumLiteralDeclaration_2() { return cBOOLEANEnumLiteralDeclaration_2; }
		
		//'BOOLEAN'
		public Keyword getBOOLEANBOOLEANKeyword_2_0() { return cBOOLEANBOOLEANKeyword_2_0; }
		
		//SECRET = 'SECRET'
		public EnumLiteralDeclaration getSECRETEnumLiteralDeclaration_3() { return cSECRETEnumLiteralDeclaration_3; }
		
		//'SECRET'
		public Keyword getSECRETSECRETKeyword_3_0() { return cSECRETSECRETKeyword_3_0; }
		
		//CHOICE = 'CHOICE'
		public EnumLiteralDeclaration getCHOICEEnumLiteralDeclaration_4() { return cCHOICEEnumLiteralDeclaration_4; }
		
		//'CHOICE'
		public Keyword getCHOICECHOICEKeyword_4_0() { return cCHOICECHOICEKeyword_4_0; }
		
		//PASSWORD = 'PASSWORD'
		public EnumLiteralDeclaration getPASSWORDEnumLiteralDeclaration_5() { return cPASSWORDEnumLiteralDeclaration_5; }
		
		//'PASSWORD'
		public Keyword getPASSWORDPASSWORDKeyword_5_0() { return cPASSWORDPASSWORDKeyword_5_0; }
		
		//TEXT = 'TEXT'
		public EnumLiteralDeclaration getTEXTEnumLiteralDeclaration_6() { return cTEXTEnumLiteralDeclaration_6; }
		
		//'TEXT'
		public Keyword getTEXTTEXTKeyword_6_0() { return cTEXTTEXTKeyword_6_0; }
	}
	
	private final PipelineElements pPipeline;
	private final JobElements pJob;
	private final EnvironmentElements pEnvironment;
	private final ScheduleTriggerElements pScheduleTrigger;
	private final AgentElements pAgent;
	private final EStringElements pEString;
	private final InputElements pInput;
	private final OutputElements pOutput;
	private final StepElements pStep;
	private final IfStepElements pIfStep;
	private final ArtifactElements pArtifact;
	private final MatrixElements pMatrix;
	private final EBooleanObjectElements pEBooleanObject;
	private final CommandElements pCommand;
	private final ParametersElements pParameters;
	private final CacheElements pCache;
	private final CACHE_MODEElements eCACHE_MODE;
	private final ARTIFACT_TYPEElements eARTIFACT_TYPE;
	private final MatrixConfigElements pMatrixConfig;
	private final MATRIX_CONFIG_TYPEElements eMATRIX_CONFIG_TYPE;
	private final DockerContainerElements pDockerContainer;
	private final INPUT_TYPEElements eINPUT_TYPE;
	private final TerminalRule tNEWLINE;
	private final TerminalRule tBEGIN;
	private final TerminalRule tEND;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public CICDGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pPipeline = new PipelineElements();
		this.pJob = new JobElements();
		this.pEnvironment = new EnvironmentElements();
		this.pScheduleTrigger = new ScheduleTriggerElements();
		this.pAgent = new AgentElements();
		this.pEString = new EStringElements();
		this.pInput = new InputElements();
		this.pOutput = new OutputElements();
		this.pStep = new StepElements();
		this.pIfStep = new IfStepElements();
		this.pArtifact = new ArtifactElements();
		this.pMatrix = new MatrixElements();
		this.pEBooleanObject = new EBooleanObjectElements();
		this.pCommand = new CommandElements();
		this.pParameters = new ParametersElements();
		this.pCache = new CacheElements();
		this.eCACHE_MODE = new CACHE_MODEElements();
		this.eARTIFACT_TYPE = new ARTIFACT_TYPEElements();
		this.pMatrixConfig = new MatrixConfigElements();
		this.eMATRIX_CONFIG_TYPE = new MATRIX_CONFIG_TYPEElements();
		this.pDockerContainer = new DockerContainerElements();
		this.eINPUT_TYPE = new INPUT_TYPEElements();
		this.tNEWLINE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.NEWLINE");
		this.tBEGIN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.BEGIN");
		this.tEND = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.cicd.CICD.END");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.cicd.CICD".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Pipeline returns Pipeline:
	//    'Pipeline' NEWLINE?
	//    ('name' name=EString NEWLINE)?
	//    ((jobs+=Job)+ NEWLINE?)
	//    ((pipeline_environment+=Environment)+ NEWLINE?)?
	//    ((triggers+=ScheduleTrigger)+ NEWLINE?)?
	//    ((agents+=Agent)+ NEWLINE?)?
	//    ((inputs+=Input)+ NEWLINE?)?
	//    ((output+=Output)+ NEWLINE?)?
	//;
	public PipelineElements getPipelineAccess() {
		return pPipeline;
	}
	
	public ParserRule getPipelineRule() {
		return getPipelineAccess().getRule();
	}
	
	//Job returns Job:
	//    'Job'
	//    (BEGIN
	//        'name' name=EString
	//        (allowFaillure?='allowFaillure')?
	//        ('parallel' parallel=EString)?
	//        ('requireJobs' requireJobs+=EString (',' requireJobs+=EString)*)?
	//        (steps+=Step)*
	//        (IfStep+=IfStep)*
	//        (artifacts+=Artifact)*
	//        (environments+=Environment)*
	//        (jobs+=Job)*
	//        (matrix=Matrix)?
	//        (agents+=Agent)*
	//        (output+=Output)*
	//    END)
	//;
	public JobElements getJobAccess() {
		return pJob;
	}
	
	public ParserRule getJobRule() {
		return getJobAccess().getRule();
	}
	
	//Environment returns Environment:
	//    'Environment'
	//    (BEGIN
	//        'key' key=EString
	//        'value' value=EString
	//    END)
	//    ;
	public EnvironmentElements getEnvironmentAccess() {
		return pEnvironment;
	}
	
	public ParserRule getEnvironmentRule() {
		return getEnvironmentAccess().getRule();
	}
	
	//ScheduleTrigger returns ScheduleTrigger:
	//    'ScheduleTrigger'
	//    (BEGIN
	//        'timer' timer=EString
	//    END)
	//    ;
	public ScheduleTriggerElements getScheduleTriggerAccess() {
		return pScheduleTrigger;
	}
	
	public ParserRule getScheduleTriggerRule() {
		return getScheduleTriggerAccess().getRule();
	}
	
	//Agent returns Agent:
	//    {Agent}
	//    'Agent'
	//    (BEGIN
	//        ('labels' labels+=EString (',' labels+=EString)*)?
	//        (container=DockerContainer)?
	//    END)
	//    ;
	public AgentElements getAgentAccess() {
		return pAgent;
	}
	
	public ParserRule getAgentRule() {
		return getAgentAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Input returns Input:
	//    'Input'
	//    (BEGIN
	//        ('name' name=EString )
	//        ('type' type=INPUT_TYPE )
	//        (('default' default=EString) )?
	//        (('description' description=EString) )?
	//        ('values' values+=EString (',' values+=EString)* )?
	//    END)
	//    ;
	public InputElements getInputAccess() {
		return pInput;
	}
	
	public ParserRule getInputRule() {
		return getInputAccess().getRule();
	}
	
	//Output returns Output:
	//    'Output'
	//    (BEGIN
	//        'name' name=EString
	//        'value' value=EString
	//    END)
	//    ;
	public OutputElements getOutputAccess() {
		return pOutput;
	}
	
	public ParserRule getOutputRule() {
		return getOutputAccess().getRule();
	}
	
	//Step returns Step:
	//    'Step'
	//    (BEGIN
	//        (cache+=Cache)*
	//        (environments+=Environment)*
	//        (IfStep=IfStep)?
	//        (commands+=Command)+
	//        (parameters+=Parameters)*
	//    END)
	//    ;
	public StepElements getStepAccess() {
		return pStep;
	}
	
	public ParserRule getStepRule() {
		return getStepAccess().getRule();
	}
	
	//IfStep returns IfStep:
	//    'IfStep'
	//    (BEGIN
	//        'condition' condition=EString
	//        ('if_steps' if_steps+=Step)*
	//        ('else_steps' else_steps+=Step)*
	//    END)
	//    ;
	public IfStepElements getIfStepAccess() {
		return pIfStep;
	}
	
	public ParserRule getIfStepRule() {
		return getIfStepAccess().getRule();
	}
	
	//Artifact returns Artifact:
	//    {Artifact}
	//    'Artifact'
	//    (BEGIN
	//        ('name' name=EString)?
	//        ('message' message=EString )?
	//        ('path'  path+=EString (',' path+=EString)* )?
	//        ('type' type=ARTIFACT_TYPE)?
	//    END)
	//    ;
	public ArtifactElements getArtifactAccess() {
		return pArtifact;
	}
	
	public ParserRule getArtifactRule() {
		return getArtifactAccess().getRule();
	}
	
	//Matrix returns Matrix:
	//    'Matrix'
	//    (BEGIN
	//        ('name' name=EString)?
	//        (steps+=Step)*
	//        (jobs+=Job)*
	//        (configs+=MatrixConfig)+
	//    END)
	//    ;
	public MatrixElements getMatrixAccess() {
		return pMatrix;
	}
	
	public ParserRule getMatrixRule() {
		return getMatrixAccess().getRule();
	}
	
	//EBooleanObject returns ecore::EBooleanObject:
	//    'true' | 'false';
	public EBooleanObjectElements getEBooleanObjectAccess() {
		return pEBooleanObject;
	}
	
	public ParserRule getEBooleanObjectRule() {
		return getEBooleanObjectAccess().getRule();
	}
	
	//Command returns Command:
	//    {Command}
	//    'Command'
	//    (BEGIN
	//        'name' name=EString
	//    END)
	//    ;
	public CommandElements getCommandAccess() {
		return pCommand;
	}
	
	public ParserRule getCommandRule() {
		return getCommandAccess().getRule();
	}
	
	//Parameters returns Parameters:
	//    'Parameters'
	//    (BEGIN
	//        'parameter' parameter=EString
	//    END)
	//    ;
	public ParametersElements getParametersAccess() {
		return pParameters;
	}
	
	public ParserRule getParametersRule() {
		return getParametersAccess().getRule();
	}
	
	//Cache returns Cache:
	//    'Cache'
	//    (BEGIN
	//        'mode' mode=CACHE_MODE
	//        ('paths' paths+=EString (',' paths+=EString)*)
	//        'key' key=EString
	//        ('keys' keys+=EString (',' keys+=EString)*)?
	//    END)
	//    ;
	public CacheElements getCacheAccess() {
		return pCache;
	}
	
	public ParserRule getCacheRule() {
		return getCacheAccess().getRule();
	}
	
	//enum CACHE_MODE returns CACHE_MODE:
	//                STORE = 'STORE' | LOAD = 'LOAD' | BOTH = 'BOTH';
	public CACHE_MODEElements getCACHE_MODEAccess() {
		return eCACHE_MODE;
	}
	
	public EnumRule getCACHE_MODERule() {
		return getCACHE_MODEAccess().getRule();
	}
	
	//enum ARTIFACT_TYPE returns ARTIFACT_TYPE:
	//                UPLOAD = 'UPLOAD' | DOWNLOAD = 'DOWNLOAD';
	public ARTIFACT_TYPEElements getARTIFACT_TYPEAccess() {
		return eARTIFACT_TYPE;
	}
	
	public EnumRule getARTIFACT_TYPERule() {
		return getARTIFACT_TYPEAccess().getRule();
	}
	
	//MatrixConfig returns MatrixConfig:
	//    'MatrixConfig'
	//    (BEGIN
	//        'name' name=EString
	//        ('values' (values+=EString) (',' values+=EString)*)
	//        'type' type=MATRIX_CONFIG_TYPE
	//    END)
	//    ;
	public MatrixConfigElements getMatrixConfigAccess() {
		return pMatrixConfig;
	}
	
	public ParserRule getMatrixConfigRule() {
		return getMatrixConfigAccess().getRule();
	}
	
	//enum MATRIX_CONFIG_TYPE returns MATRIX_CONFIG_TYPE:
	//                DEFAULT = 'DEFAULT' | INCLUDE = 'INCLUDE' | EXCLUDE = 'EXCLUDE';
	public MATRIX_CONFIG_TYPEElements getMATRIX_CONFIG_TYPEAccess() {
		return eMATRIX_CONFIG_TYPE;
	}
	
	public EnumRule getMATRIX_CONFIG_TYPERule() {
		return getMATRIX_CONFIG_TYPEAccess().getRule();
	}
	
	//DockerContainer returns DockerContainer:
	//    'DockerContainer'
	//    (BEGIN
	//        'image' image=EString
	//        ('username' username=EString )?
	//        ('password' password=EString )?
	//        (environments+=Environment)*
	//    END)
	//    ;
	public DockerContainerElements getDockerContainerAccess() {
		return pDockerContainer;
	}
	
	public ParserRule getDockerContainerRule() {
		return getDockerContainerAccess().getRule();
	}
	
	//enum INPUT_TYPE returns INPUT_TYPE:
	//                STRING = 'STRING' | NUMBER = 'NUMBER' | BOOLEAN = 'BOOLEAN' | SECRET = 'SECRET' | CHOICE = 'CHOICE' | PASSWORD = 'PASSWORD' | TEXT = 'TEXT';
	public INPUT_TYPEElements getINPUT_TYPEAccess() {
		return eINPUT_TYPE;
	}
	
	public EnumRule getINPUT_TYPERule() {
		return getINPUT_TYPEAccess().getRule();
	}
	
	//terminal NEWLINE:
	//// New line on DOS or Unix
	//    '\r'? '\n';
	public TerminalRule getNEWLINERule() {
		return tNEWLINE;
	}
	
	//terminal BEGIN: 'synthetic:BEGIN';
	public TerminalRule getBEGINRule() {
		return tBEGIN;
	}
	
	//  // increase indentation
	//terminal END: 'synthetic:END';
	public TerminalRule getENDRule() {
		return tEND;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
