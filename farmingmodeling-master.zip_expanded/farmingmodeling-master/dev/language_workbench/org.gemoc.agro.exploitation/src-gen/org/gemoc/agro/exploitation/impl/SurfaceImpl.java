/**
 */
package org.gemoc.agro.exploitation.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.gemoc.agro.exploitation.ExploitationPackage;
import org.gemoc.agro.exploitation.Surface;
import org.gemoc.agro.exploitation.WorkGroup;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Surface</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.gemoc.agro.exploitation.impl.SurfaceImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.gemoc.agro.exploitation.impl.SurfaceImpl#getTotal <em>Total</em>}</li>
 *   <li>{@link org.gemoc.agro.exploitation.impl.SurfaceImpl#getNbFields <em>Nb Fields</em>}</li>
 *   <li>{@link org.gemoc.agro.exploitation.impl.SurfaceImpl#getDedicatedto <em>Dedicatedto</em>}</li>
 *   <li>{@link org.gemoc.agro.exploitation.impl.SurfaceImpl#isWatered <em>Watered</em>}</li>
 *   <li>{@link org.gemoc.agro.exploitation.impl.SurfaceImpl#isFodder <em>Fodder</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class SurfaceImpl extends MinimalEObjectImpl.Container implements Surface {
	/**
	 * The default value of the '{@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
	protected static final String NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
	protected String name = NAME_EDEFAULT;

	/**
	 * The default value of the '{@link #getTotal() <em>Total</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getTotal()
	 * @generated
	 * @ordered
	 */
	protected static final int TOTAL_EDEFAULT = 0;

	/**
	 * The cached value of the '{@link #getTotal() <em>Total</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getTotal()
	 * @generated
	 * @ordered
	 */
	protected int total = TOTAL_EDEFAULT;

	/**
	 * The default value of the '{@link #getNbFields() <em>Nb Fields</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getNbFields()
	 * @generated
	 * @ordered
	 */
	protected static final int NB_FIELDS_EDEFAULT = 0;

	/**
	 * The cached value of the '{@link #getNbFields() <em>Nb Fields</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getNbFields()
	 * @generated
	 * @ordered
	 */
	protected int nbFields = NB_FIELDS_EDEFAULT;

	/**
	 * The cached value of the '{@link #getDedicatedto() <em>Dedicatedto</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getDedicatedto()
	 * @generated
	 * @ordered
	 */
	protected WorkGroup dedicatedto;

	/**
	 * The default value of the '{@link #isWatered() <em>Watered</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #isWatered()
	 * @generated
	 * @ordered
	 */
	protected static final boolean WATERED_EDEFAULT = false;

	/**
	 * The cached value of the '{@link #isWatered() <em>Watered</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #isWatered()
	 * @generated
	 * @ordered
	 */
	protected boolean watered = WATERED_EDEFAULT;

	/**
	 * The default value of the '{@link #isFodder() <em>Fodder</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #isFodder()
	 * @generated
	 * @ordered
	 */
	protected static final boolean FODDER_EDEFAULT = false;

	/**
	 * The cached value of the '{@link #isFodder() <em>Fodder</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #isFodder()
	 * @generated
	 * @ordered
	 */
	protected boolean fodder = FODDER_EDEFAULT;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SurfaceImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return ExploitationPackage.Literals.SURFACE;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getName() {
		return name;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setName(String newName) {
		String oldName = name;
		name = newName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ExploitationPackage.SURFACE__NAME, oldName, name));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public int getTotal() {
		return total;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setTotal(int newTotal) {
		int oldTotal = total;
		total = newTotal;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ExploitationPackage.SURFACE__TOTAL, oldTotal, total));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public int getNbFields() {
		return nbFields;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setNbFields(int newNbFields) {
		int oldNbFields = nbFields;
		nbFields = newNbFields;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ExploitationPackage.SURFACE__NB_FIELDS, oldNbFields, nbFields));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public WorkGroup getDedicatedto() {
		if (dedicatedto != null && dedicatedto.eIsProxy()) {
			InternalEObject oldDedicatedto = (InternalEObject)dedicatedto;
			dedicatedto = (WorkGroup)eResolveProxy(oldDedicatedto);
			if (dedicatedto != oldDedicatedto) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, ExploitationPackage.SURFACE__DEDICATEDTO, oldDedicatedto, dedicatedto));
			}
		}
		return dedicatedto;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public WorkGroup basicGetDedicatedto() {
		return dedicatedto;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setDedicatedto(WorkGroup newDedicatedto) {
		WorkGroup oldDedicatedto = dedicatedto;
		dedicatedto = newDedicatedto;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ExploitationPackage.SURFACE__DEDICATEDTO, oldDedicatedto, dedicatedto));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean isWatered() {
		return watered;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setWatered(boolean newWatered) {
		boolean oldWatered = watered;
		watered = newWatered;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ExploitationPackage.SURFACE__WATERED, oldWatered, watered));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean isFodder() {
		return fodder;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setFodder(boolean newFodder) {
		boolean oldFodder = fodder;
		fodder = newFodder;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ExploitationPackage.SURFACE__FODDER, oldFodder, fodder));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case ExploitationPackage.SURFACE__NAME:
				return getName();
			case ExploitationPackage.SURFACE__TOTAL:
				return getTotal();
			case ExploitationPackage.SURFACE__NB_FIELDS:
				return getNbFields();
			case ExploitationPackage.SURFACE__DEDICATEDTO:
				if (resolve) return getDedicatedto();
				return basicGetDedicatedto();
			case ExploitationPackage.SURFACE__WATERED:
				return isWatered();
			case ExploitationPackage.SURFACE__FODDER:
				return isFodder();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case ExploitationPackage.SURFACE__NAME:
				setName((String)newValue);
				return;
			case ExploitationPackage.SURFACE__TOTAL:
				setTotal((Integer)newValue);
				return;
			case ExploitationPackage.SURFACE__NB_FIELDS:
				setNbFields((Integer)newValue);
				return;
			case ExploitationPackage.SURFACE__DEDICATEDTO:
				setDedicatedto((WorkGroup)newValue);
				return;
			case ExploitationPackage.SURFACE__WATERED:
				setWatered((Boolean)newValue);
				return;
			case ExploitationPackage.SURFACE__FODDER:
				setFodder((Boolean)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case ExploitationPackage.SURFACE__NAME:
				setName(NAME_EDEFAULT);
				return;
			case ExploitationPackage.SURFACE__TOTAL:
				setTotal(TOTAL_EDEFAULT);
				return;
			case ExploitationPackage.SURFACE__NB_FIELDS:
				setNbFields(NB_FIELDS_EDEFAULT);
				return;
			case ExploitationPackage.SURFACE__DEDICATEDTO:
				setDedicatedto((WorkGroup)null);
				return;
			case ExploitationPackage.SURFACE__WATERED:
				setWatered(WATERED_EDEFAULT);
				return;
			case ExploitationPackage.SURFACE__FODDER:
				setFodder(FODDER_EDEFAULT);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case ExploitationPackage.SURFACE__NAME:
				return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
			case ExploitationPackage.SURFACE__TOTAL:
				return total != TOTAL_EDEFAULT;
			case ExploitationPackage.SURFACE__NB_FIELDS:
				return nbFields != NB_FIELDS_EDEFAULT;
			case ExploitationPackage.SURFACE__DEDICATEDTO:
				return dedicatedto != null;
			case ExploitationPackage.SURFACE__WATERED:
				return watered != WATERED_EDEFAULT;
			case ExploitationPackage.SURFACE__FODDER:
				return fodder != FODDER_EDEFAULT;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (name: ");
		result.append(name);
		result.append(", total: ");
		result.append(total);
		result.append(", nbFields: ");
		result.append(nbFields);
		result.append(", watered: ");
		result.append(watered);
		result.append(", fodder: ");
		result.append(fodder);
		result.append(')');
		return result.toString();
	}

} //SurfaceImpl
