/*
* generated by Xtext
*/
grammar InternalActivitiesDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.gemoc.agro.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.gemoc.agro.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.gemoc.agro.services.ActivitiesDSLGrammarAccess;

}

@parser::members {
 
 	private ActivitiesDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ActivitiesDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResourceKind
entryRuleResourceKind 
:
{ before(grammarAccess.getResourceKindRule()); }
	 ruleResourceKind
{ after(grammarAccess.getResourceKindRule()); } 
	 EOF 
;

// Rule ResourceKind
ruleResourceKind
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResourceKindAccess().getGroup()); }
(rule__ResourceKind__Group__0)
{ after(grammarAccess.getResourceKindAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCulture
entryRuleCulture 
:
{ before(grammarAccess.getCultureRule()); }
	 ruleCulture
{ after(grammarAccess.getCultureRule()); } 
	 EOF 
;

// Rule Culture
ruleCulture
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCultureAccess().getGroup()); }
(rule__Culture__Group__0)
{ after(grammarAccess.getCultureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExploitationActivity
entryRuleExploitationActivity 
:
{ before(grammarAccess.getExploitationActivityRule()); }
	 ruleExploitationActivity
{ after(grammarAccess.getExploitationActivityRule()); } 
	 EOF 
;

// Rule ExploitationActivity
ruleExploitationActivity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExploitationActivityAccess().getGroup()); }
(rule__ExploitationActivity__Group__0)
{ after(grammarAccess.getExploitationActivityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActivityResource
entryRuleActivityResource 
:
{ before(grammarAccess.getActivityResourceRule()); }
	 ruleActivityResource
{ after(grammarAccess.getActivityResourceRule()); } 
	 EOF 
;

// Rule ActivityResource
ruleActivityResource
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActivityResourceAccess().getGroup()); }
(rule__ActivityResource__Group__0)
{ after(grammarAccess.getActivityResourceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePredicate
entryRulePredicate 
:
{ before(grammarAccess.getPredicateRule()); }
	 rulePredicate
{ after(grammarAccess.getPredicateRule()); } 
	 EOF 
;

// Rule Predicate
rulePredicate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPredicateAccess().getAlternatives()); }
(rule__Predicate__Alternatives)
{ after(grammarAccess.getPredicateAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoRain
entryRuleNoRain 
:
{ before(grammarAccess.getNoRainRule()); }
	 ruleNoRain
{ after(grammarAccess.getNoRainRule()); } 
	 EOF 
;

// Rule NoRain
ruleNoRain
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNoRainAccess().getGroup()); }
(rule__NoRain__Group__0)
{ after(grammarAccess.getNoRainAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTempOfTheDay
entryRuleTempOfTheDay 
:
{ before(grammarAccess.getTempOfTheDayRule()); }
	 ruleTempOfTheDay
{ after(grammarAccess.getTempOfTheDayRule()); } 
	 EOF 
;

// Rule TempOfTheDay
ruleTempOfTheDay
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTempOfTheDayAccess().getGroup()); }
(rule__TempOfTheDay__Group__0)
{ after(grammarAccess.getTempOfTheDayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDelaySinceActivy
entryRuleDelaySinceActivy 
:
{ before(grammarAccess.getDelaySinceActivyRule()); }
	 ruleDelaySinceActivy
{ after(grammarAccess.getDelaySinceActivyRule()); } 
	 EOF 
;

// Rule DelaySinceActivy
ruleDelaySinceActivy
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDelaySinceActivyAccess().getGroup()); }
(rule__DelaySinceActivy__Group__0)
{ after(grammarAccess.getDelaySinceActivyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGrainIs
entryRuleGrainIs 
:
{ before(grammarAccess.getGrainIsRule()); }
	 ruleGrainIs
{ after(grammarAccess.getGrainIsRule()); } 
	 EOF 
;

// Rule GrainIs
ruleGrainIs
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGrainIsAccess().getGroup()); }
(rule__GrainIs__Group__0)
{ after(grammarAccess.getGrainIsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDate
entryRuleDate 
:
{ before(grammarAccess.getDateRule()); }
	 ruleDate
{ after(grammarAccess.getDateRule()); } 
	 EOF 
;

// Rule Date
ruleDate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDateAccess().getGroup()); }
(rule__Date__Group__0)
{ after(grammarAccess.getDateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule Month
ruleMonth
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonthAccess().getAlternatives()); }
(rule__Month__Alternatives)
{ after(grammarAccess.getMonthAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Comp
ruleComp
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompAccess().getAlternatives()); }
(rule__Comp__Alternatives)
{ after(grammarAccess.getCompAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule TempUnit
ruleTempUnit
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTempUnitAccess().getAlternatives()); }
(rule__TempUnit__Alternatives)
{ after(grammarAccess.getTempUnitAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Frequency
ruleFrequency
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFrequencyAccess().getAlternatives()); }
(rule__Frequency__Alternatives)
{ after(grammarAccess.getFrequencyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Predicate__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredicateAccess().getNoRainParserRuleCall_0()); }
	ruleNoRain
{ after(grammarAccess.getPredicateAccess().getNoRainParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPredicateAccess().getTempOfTheDayParserRuleCall_1()); }
	ruleTempOfTheDay
{ after(grammarAccess.getPredicateAccess().getTempOfTheDayParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPredicateAccess().getDelaySinceActivyParserRuleCall_2()); }
	ruleDelaySinceActivy
{ after(grammarAccess.getPredicateAccess().getDelaySinceActivyParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPredicateAccess().getGrainIsParserRuleCall_3()); }
	ruleGrainIs
{ after(grammarAccess.getPredicateAccess().getGrainIsParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Month__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonthAccess().getJanEnumLiteralDeclaration_0()); }
(	'jan' 
)
{ after(grammarAccess.getMonthAccess().getJanEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getMonthAccess().getFebEnumLiteralDeclaration_1()); }
(	'feb' 
)
{ after(grammarAccess.getMonthAccess().getFebEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getMonthAccess().getMarEnumLiteralDeclaration_2()); }
(	'mar' 
)
{ after(grammarAccess.getMonthAccess().getMarEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getMonthAccess().getAprEnumLiteralDeclaration_3()); }
(	'apr' 
)
{ after(grammarAccess.getMonthAccess().getAprEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getMonthAccess().getMayEnumLiteralDeclaration_4()); }
(	'may' 
)
{ after(grammarAccess.getMonthAccess().getMayEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getMonthAccess().getJunEnumLiteralDeclaration_5()); }
(	'jun' 
)
{ after(grammarAccess.getMonthAccess().getJunEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getMonthAccess().getJulEnumLiteralDeclaration_6()); }
(	'jul' 
)
{ after(grammarAccess.getMonthAccess().getJulEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getMonthAccess().getAugEnumLiteralDeclaration_7()); }
(	'aug' 
)
{ after(grammarAccess.getMonthAccess().getAugEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getMonthAccess().getSeptEnumLiteralDeclaration_8()); }
(	'sept' 
)
{ after(grammarAccess.getMonthAccess().getSeptEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getMonthAccess().getOctEnumLiteralDeclaration_9()); }
(	'oct' 
)
{ after(grammarAccess.getMonthAccess().getOctEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getMonthAccess().getNovEnumLiteralDeclaration_10()); }
(	'nov' 
)
{ after(grammarAccess.getMonthAccess().getNovEnumLiteralDeclaration_10()); }
)

    |(
{ before(grammarAccess.getMonthAccess().getDecEnumLiteralDeclaration_11()); }
(	'dec' 
)
{ after(grammarAccess.getMonthAccess().getDecEnumLiteralDeclaration_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompAccess().getMoreThanEnumLiteralDeclaration_0()); }
(	'>' 
)
{ after(grammarAccess.getCompAccess().getMoreThanEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCompAccess().getLessThanEnumLiteralDeclaration_1()); }
(	'<' 
)
{ after(grammarAccess.getCompAccess().getLessThanEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TempUnit__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTempUnitAccess().getCelsiusEnumLiteralDeclaration_0()); }
(	'\u00B0C' 
)
{ after(grammarAccess.getTempUnitAccess().getCelsiusEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTempUnitAccess().getFarenheitEnumLiteralDeclaration_1()); }
(	'\u00B0F' 
)
{ after(grammarAccess.getTempUnitAccess().getFarenheitEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Frequency__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFrequencyAccess().getOnceEnumLiteralDeclaration_0()); }
(	'once' 
)
{ after(grammarAccess.getFrequencyAccess().getOnceEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getFrequencyAccess().getDailyEnumLiteralDeclaration_1()); }
(	'daily' 
)
{ after(grammarAccess.getFrequencyAccess().getDailyEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getFrequencyAccess().getWeeklyEnumLiteralDeclaration_2()); }
(	'weekly' 
)
{ after(grammarAccess.getFrequencyAccess().getWeeklyEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getFrequencyAccess().getMonthlyEnumLiteralDeclaration_3()); }
(	'monthly' 
)
{ after(grammarAccess.getFrequencyAccess().getMonthlyEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getFrequencyAccess().getQuaterlyEnumLiteralDeclaration_4()); }
(	'quaterly' 
)
{ after(grammarAccess.getFrequencyAccess().getQuaterlyEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getFrequencyAccess().getYearlyEnumLiteralDeclaration_5()); }
(	'yearly' 
)
{ after(grammarAccess.getFrequencyAccess().getYearlyEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getCulturesAssignment_0()); }
(rule__Model__CulturesAssignment_0)*
{ after(grammarAccess.getModelAccess().getCulturesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getResourceKindsAssignment_1()); }
(rule__Model__ResourceKindsAssignment_1)*
{ after(grammarAccess.getModelAccess().getResourceKindsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ResourceKind__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceKind__Group__0__Impl
	rule__ResourceKind__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceKind__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceKindAccess().getResourceKeyword_0()); }

	'resource' 

{ after(grammarAccess.getResourceKindAccess().getResourceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceKind__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceKind__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceKind__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceKindAccess().getNameAssignment_1()); }
(rule__ResourceKind__NameAssignment_1)
{ after(grammarAccess.getResourceKindAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Culture__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Culture__Group__0__Impl
	rule__Culture__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Culture__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCultureAccess().getCultureKeyword_0()); }

	'culture' 

{ after(grammarAccess.getCultureAccess().getCultureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Culture__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Culture__Group__1__Impl
	rule__Culture__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Culture__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCultureAccess().getNameAssignment_1()); }
(rule__Culture__NameAssignment_1)
{ after(grammarAccess.getCultureAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Culture__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Culture__Group__2__Impl
	rule__Culture__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Culture__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCultureAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getCultureAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Culture__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Culture__Group__3__Impl
	rule__Culture__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Culture__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCultureAccess().getActivitiesAssignment_3()); }
(rule__Culture__ActivitiesAssignment_3)*
{ after(grammarAccess.getCultureAccess().getActivitiesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Culture__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Culture__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Culture__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCultureAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getCultureAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ExploitationActivity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group__0__Impl
	rule__ExploitationActivity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getActivityKeyword_0()); }

	'activity' 

{ after(grammarAccess.getExploitationActivityAccess().getActivityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group__1__Impl
	rule__ExploitationActivity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getNameAssignment_1()); }
(rule__ExploitationActivity__NameAssignment_1)
{ after(grammarAccess.getExploitationActivityAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group__2__Impl
	rule__ExploitationActivity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getFrequencyAssignment_2()); }
(rule__ExploitationActivity__FrequencyAssignment_2)?
{ after(grammarAccess.getExploitationActivityAccess().getFrequencyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group__3__Impl
	rule__ExploitationActivity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getGroup_3()); }
(rule__ExploitationActivity__Group_3__0)?
{ after(grammarAccess.getExploitationActivityAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group__4__Impl
	rule__ExploitationActivity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getGroup_4()); }
(rule__ExploitationActivity__Group_4__0)?
{ after(grammarAccess.getExploitationActivityAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getGroup_5()); }
(rule__ExploitationActivity__Group_5__0)?
{ after(grammarAccess.getExploitationActivityAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ExploitationActivity__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group_3__0__Impl
	rule__ExploitationActivity__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getFromKeyword_3_0()); }

	'from ' 

{ after(grammarAccess.getExploitationActivityAccess().getFromKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group_3__1__Impl
	rule__ExploitationActivity__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getStartDateAssignment_3_1()); }
(rule__ExploitationActivity__StartDateAssignment_3_1)
{ after(grammarAccess.getExploitationActivityAccess().getStartDateAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group_3__2__Impl
	rule__ExploitationActivity__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getToKeyword_3_2()); }

	'to' 

{ after(grammarAccess.getExploitationActivityAccess().getToKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getEndDateAssignment_3_3()); }
(rule__ExploitationActivity__EndDateAssignment_3_3)
{ after(grammarAccess.getExploitationActivityAccess().getEndDateAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ExploitationActivity__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group_4__0__Impl
	rule__ExploitationActivity__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getLeftSquareBracketKeyword_4_0()); }

	'[' 

{ after(grammarAccess.getExploitationActivityAccess().getLeftSquareBracketKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group_4__1__Impl
	rule__ExploitationActivity__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getPredicatesAssignment_4_1()); }
(rule__ExploitationActivity__PredicatesAssignment_4_1)
{ after(grammarAccess.getExploitationActivityAccess().getPredicatesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group_4__2__Impl
	rule__ExploitationActivity__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getGroup_4_2()); }
(rule__ExploitationActivity__Group_4_2__0)*
{ after(grammarAccess.getExploitationActivityAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getRightSquareBracketKeyword_4_3()); }

	']' 

{ after(grammarAccess.getExploitationActivityAccess().getRightSquareBracketKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ExploitationActivity__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group_4_2__0__Impl
	rule__ExploitationActivity__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getAmpersandAmpersandKeyword_4_2_0()); }

	'&&' 

{ after(grammarAccess.getExploitationActivityAccess().getAmpersandAmpersandKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getPredicatesAssignment_4_2_1()); }
(rule__ExploitationActivity__PredicatesAssignment_4_2_1)
{ after(grammarAccess.getExploitationActivityAccess().getPredicatesAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExploitationActivity__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group_5__0__Impl
	rule__ExploitationActivity__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getUsingKeyword_5_0()); }

	'using' 

{ after(grammarAccess.getExploitationActivityAccess().getUsingKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group_5__1__Impl
	rule__ExploitationActivity__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getUsesAssignment_5_1()); }
(rule__ExploitationActivity__UsesAssignment_5_1)
{ after(grammarAccess.getExploitationActivityAccess().getUsesAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getGroup_5_2()); }
(rule__ExploitationActivity__Group_5_2__0)*
{ after(grammarAccess.getExploitationActivityAccess().getGroup_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExploitationActivity__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group_5_2__0__Impl
	rule__ExploitationActivity__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getAndKeyword_5_2_0()); }

	'and' 

{ after(grammarAccess.getExploitationActivityAccess().getAndKeyword_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getUsesAssignment_5_2_1()); }
(rule__ExploitationActivity__UsesAssignment_5_2_1)
{ after(grammarAccess.getExploitationActivityAccess().getUsesAssignment_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActivityResource__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityResource__Group__0__Impl
	rule__ActivityResource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityResource__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityResourceAccess().getQuantityAssignment_0()); }
(rule__ActivityResource__QuantityAssignment_0)
{ after(grammarAccess.getActivityResourceAccess().getQuantityAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityResource__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityResource__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityResource__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityResourceAccess().getResourceKindAssignment_1()); }
(rule__ActivityResource__ResourceKindAssignment_1)
{ after(grammarAccess.getActivityResourceAccess().getResourceKindAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NoRain__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NoRain__Group__0__Impl
	rule__NoRain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NoRain__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoRainAccess().getNoRainSinceKeyword_0()); }

	'no rain since' 

{ after(grammarAccess.getNoRainAccess().getNoRainSinceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NoRain__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NoRain__Group__1__Impl
	rule__NoRain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NoRain__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoRainAccess().getDaysAssignment_1()); }
(rule__NoRain__DaysAssignment_1)
{ after(grammarAccess.getNoRainAccess().getDaysAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NoRain__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NoRain__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NoRain__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoRainAccess().getDaysKeyword_2()); }

	'days' 

{ after(grammarAccess.getNoRainAccess().getDaysKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TempOfTheDay__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TempOfTheDay__Group__0__Impl
	rule__TempOfTheDay__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TempOfTheDay__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTempOfTheDayAccess().getTemperatureKeyword_0()); }

	'temperature' 

{ after(grammarAccess.getTempOfTheDayAccess().getTemperatureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TempOfTheDay__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TempOfTheDay__Group__1__Impl
	rule__TempOfTheDay__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TempOfTheDay__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTempOfTheDayAccess().getComparisonAssignment_1()); }
(rule__TempOfTheDay__ComparisonAssignment_1)
{ after(grammarAccess.getTempOfTheDayAccess().getComparisonAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TempOfTheDay__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TempOfTheDay__Group__2__Impl
	rule__TempOfTheDay__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TempOfTheDay__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTempOfTheDayAccess().getLowerTempBoundAssignment_2()); }
(rule__TempOfTheDay__LowerTempBoundAssignment_2)
{ after(grammarAccess.getTempOfTheDayAccess().getLowerTempBoundAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TempOfTheDay__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TempOfTheDay__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TempOfTheDay__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTempOfTheDayAccess().getUnitAssignment_3()); }
(rule__TempOfTheDay__UnitAssignment_3)
{ after(grammarAccess.getTempOfTheDayAccess().getUnitAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DelaySinceActivy__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelaySinceActivy__Group__0__Impl
	rule__DelaySinceActivy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DelaySinceActivy__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelaySinceActivyAccess().getAfterKeyword_0()); }

	'after' 

{ after(grammarAccess.getDelaySinceActivyAccess().getAfterKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelaySinceActivy__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelaySinceActivy__Group__1__Impl
	rule__DelaySinceActivy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DelaySinceActivy__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelaySinceActivyAccess().getPrerequisiteAssignment_1()); }
(rule__DelaySinceActivy__PrerequisiteAssignment_1)
{ after(grammarAccess.getDelaySinceActivyAccess().getPrerequisiteAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelaySinceActivy__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelaySinceActivy__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DelaySinceActivy__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelaySinceActivyAccess().getGroup_2()); }
(rule__DelaySinceActivy__Group_2__0)?
{ after(grammarAccess.getDelaySinceActivyAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DelaySinceActivy__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelaySinceActivy__Group_2__0__Impl
	rule__DelaySinceActivy__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DelaySinceActivy__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelaySinceActivyAccess().getIsDoneSinceKeyword_2_0()); }

	'is done since' 

{ after(grammarAccess.getDelaySinceActivyAccess().getIsDoneSinceKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelaySinceActivy__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelaySinceActivy__Group_2__1__Impl
	rule__DelaySinceActivy__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DelaySinceActivy__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelaySinceActivyAccess().getDaysAssignment_2_1()); }
(rule__DelaySinceActivy__DaysAssignment_2_1)
{ after(grammarAccess.getDelaySinceActivyAccess().getDaysAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelaySinceActivy__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelaySinceActivy__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DelaySinceActivy__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelaySinceActivyAccess().getDaysKeyword_2_2()); }

	'days' 

{ after(grammarAccess.getDelaySinceActivyAccess().getDaysKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GrainIs__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GrainIs__Group__0__Impl
	rule__GrainIs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GrainIs__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGrainIsAccess().getGrainIsKeyword_0()); }

	'grain is' 

{ after(grammarAccess.getGrainIsAccess().getGrainIsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GrainIs__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GrainIs__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GrainIs__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGrainIsAccess().getStateAssignment_1()); }
(rule__GrainIs__StateAssignment_1)
{ after(grammarAccess.getGrainIsAccess().getStateAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Date__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Date__Group__0__Impl
	rule__Date__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAccess().getDayAssignment_0()); }
(rule__Date__DayAssignment_0)
{ after(grammarAccess.getDateAccess().getDayAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Date__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Date__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAccess().getMonthAssignment_1()); }
(rule__Date__MonthAssignment_1)
{ after(grammarAccess.getDateAccess().getMonthAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__CulturesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getCulturesCultureParserRuleCall_0_0()); }
	ruleCulture{ after(grammarAccess.getModelAccess().getCulturesCultureParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ResourceKindsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getResourceKindsResourceKindParserRuleCall_1_0()); }
	ruleResourceKind{ after(grammarAccess.getModelAccess().getResourceKindsResourceKindParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceKind__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceKindAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getResourceKindAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Culture__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCultureAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getCultureAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Culture__ActivitiesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCultureAccess().getActivitiesExploitationActivityParserRuleCall_3_0()); }
	ruleExploitationActivity{ after(grammarAccess.getCultureAccess().getActivitiesExploitationActivityParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getExploitationActivityAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__FrequencyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getFrequencyFrequencyEnumRuleCall_2_0()); }
	ruleFrequency{ after(grammarAccess.getExploitationActivityAccess().getFrequencyFrequencyEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__StartDateAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getStartDateDateParserRuleCall_3_1_0()); }
	ruleDate{ after(grammarAccess.getExploitationActivityAccess().getStartDateDateParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__EndDateAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getEndDateDateParserRuleCall_3_3_0()); }
	ruleDate{ after(grammarAccess.getExploitationActivityAccess().getEndDateDateParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__PredicatesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getPredicatesPredicateParserRuleCall_4_1_0()); }
	rulePredicate{ after(grammarAccess.getExploitationActivityAccess().getPredicatesPredicateParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__PredicatesAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getPredicatesPredicateParserRuleCall_4_2_1_0()); }
	rulePredicate{ after(grammarAccess.getExploitationActivityAccess().getPredicatesPredicateParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__UsesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getUsesActivityResourceParserRuleCall_5_1_0()); }
	ruleActivityResource{ after(grammarAccess.getExploitationActivityAccess().getUsesActivityResourceParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__UsesAssignment_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getUsesActivityResourceParserRuleCall_5_2_1_0()); }
	ruleActivityResource{ after(grammarAccess.getExploitationActivityAccess().getUsesActivityResourceParserRuleCall_5_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityResource__QuantityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityResourceAccess().getQuantityINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getActivityResourceAccess().getQuantityINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityResource__ResourceKindAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityResourceAccess().getResourceKindResourceKindCrossReference_1_0()); }
(
{ before(grammarAccess.getActivityResourceAccess().getResourceKindResourceKindIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getActivityResourceAccess().getResourceKindResourceKindIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getActivityResourceAccess().getResourceKindResourceKindCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NoRain__DaysAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoRainAccess().getDaysINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getNoRainAccess().getDaysINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TempOfTheDay__ComparisonAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTempOfTheDayAccess().getComparisonCompEnumRuleCall_1_0()); }
	ruleComp{ after(grammarAccess.getTempOfTheDayAccess().getComparisonCompEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TempOfTheDay__LowerTempBoundAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTempOfTheDayAccess().getLowerTempBoundINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getTempOfTheDayAccess().getLowerTempBoundINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TempOfTheDay__UnitAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTempOfTheDayAccess().getUnitTempUnitEnumRuleCall_3_0()); }
	ruleTempUnit{ after(grammarAccess.getTempOfTheDayAccess().getUnitTempUnitEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelaySinceActivy__PrerequisiteAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelaySinceActivyAccess().getPrerequisiteExploitationActivityCrossReference_1_0()); }
(
{ before(grammarAccess.getDelaySinceActivyAccess().getPrerequisiteExploitationActivityIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDelaySinceActivyAccess().getPrerequisiteExploitationActivityIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getDelaySinceActivyAccess().getPrerequisiteExploitationActivityCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelaySinceActivy__DaysAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelaySinceActivyAccess().getDaysINTTerminalRuleCall_2_1_0()); }
	RULE_INT{ after(grammarAccess.getDelaySinceActivyAccess().getDaysINTTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GrainIs__StateAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGrainIsAccess().getStateSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getGrainIsAccess().getStateSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Date__DayAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAccess().getDayINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getDateAccess().getDayINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Date__MonthAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAccess().getMonthMonthEnumRuleCall_1_0()); }
	ruleMonth{ after(grammarAccess.getDateAccess().getMonthMonthEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


