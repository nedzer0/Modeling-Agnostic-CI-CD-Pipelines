/**
 */
package org.gemoc.agro.activitiesDSL.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.gemoc.agro.activitiesDSL.ActivitiesDSLPackage;
import org.gemoc.agro.activitiesDSL.ActivityResource;
import org.gemoc.agro.activitiesDSL.Date;
import org.gemoc.agro.activitiesDSL.ExploitationActivity;
import org.gemoc.agro.activitiesDSL.Frequency;
import org.gemoc.agro.activitiesDSL.Predicate;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Exploitation Activity</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.gemoc.agro.activitiesDSL.impl.ExploitationActivityImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.gemoc.agro.activitiesDSL.impl.ExploitationActivityImpl#getFrequency <em>Frequency</em>}</li>
 *   <li>{@link org.gemoc.agro.activitiesDSL.impl.ExploitationActivityImpl#getStartDate <em>Start Date</em>}</li>
 *   <li>{@link org.gemoc.agro.activitiesDSL.impl.ExploitationActivityImpl#getEndDate <em>End Date</em>}</li>
 *   <li>{@link org.gemoc.agro.activitiesDSL.impl.ExploitationActivityImpl#getPredicates <em>Predicates</em>}</li>
 *   <li>{@link org.gemoc.agro.activitiesDSL.impl.ExploitationActivityImpl#getUses <em>Uses</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class ExploitationActivityImpl extends MinimalEObjectImpl.Container implements ExploitationActivity
{
  /**
	 * The default value of the '{@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
  protected static final String NAME_EDEFAULT = null;

  /**
	 * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
  protected String name = NAME_EDEFAULT;

  /**
	 * The default value of the '{@link #getFrequency() <em>Frequency</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getFrequency()
	 * @generated
	 * @ordered
	 */
  protected static final Frequency FREQUENCY_EDEFAULT = Frequency.ONCE;

  /**
	 * The cached value of the '{@link #getFrequency() <em>Frequency</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getFrequency()
	 * @generated
	 * @ordered
	 */
  protected Frequency frequency = FREQUENCY_EDEFAULT;

  /**
	 * The cached value of the '{@link #getStartDate() <em>Start Date</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getStartDate()
	 * @generated
	 * @ordered
	 */
  protected Date startDate;

  /**
	 * The cached value of the '{@link #getEndDate() <em>End Date</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getEndDate()
	 * @generated
	 * @ordered
	 */
  protected Date endDate;

  /**
	 * The cached value of the '{@link #getPredicates() <em>Predicates</em>}' containment reference list.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getPredicates()
	 * @generated
	 * @ordered
	 */
  protected EList<Predicate> predicates;

  /**
	 * The cached value of the '{@link #getUses() <em>Uses</em>}' containment reference list.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getUses()
	 * @generated
	 * @ordered
	 */
  protected EList<ActivityResource> uses;

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected ExploitationActivityImpl()
  {
		super();
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  protected EClass eStaticClass()
  {
		return ActivitiesDSLPackage.Literals.EXPLOITATION_ACTIVITY;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public String getName()
  {
		return name;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public void setName(String newName)
  {
		String oldName = name;
		name = newName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__NAME, oldName, name));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public Frequency getFrequency()
  {
		return frequency;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public void setFrequency(Frequency newFrequency)
  {
		Frequency oldFrequency = frequency;
		frequency = newFrequency == null ? FREQUENCY_EDEFAULT : newFrequency;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__FREQUENCY, oldFrequency, frequency));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public Date getStartDate()
  {
		return startDate;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetStartDate(Date newStartDate, NotificationChain msgs)
  {
		Date oldStartDate = startDate;
		startDate = newStartDate;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__START_DATE, oldStartDate, newStartDate);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public void setStartDate(Date newStartDate)
  {
		if (newStartDate != startDate) {
			NotificationChain msgs = null;
			if (startDate != null)
				msgs = ((InternalEObject)startDate).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__START_DATE, null, msgs);
			if (newStartDate != null)
				msgs = ((InternalEObject)newStartDate).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__START_DATE, null, msgs);
			msgs = basicSetStartDate(newStartDate, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__START_DATE, newStartDate, newStartDate));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public Date getEndDate()
  {
		return endDate;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetEndDate(Date newEndDate, NotificationChain msgs)
  {
		Date oldEndDate = endDate;
		endDate = newEndDate;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__END_DATE, oldEndDate, newEndDate);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public void setEndDate(Date newEndDate)
  {
		if (newEndDate != endDate) {
			NotificationChain msgs = null;
			if (endDate != null)
				msgs = ((InternalEObject)endDate).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__END_DATE, null, msgs);
			if (newEndDate != null)
				msgs = ((InternalEObject)newEndDate).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__END_DATE, null, msgs);
			msgs = basicSetEndDate(newEndDate, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__END_DATE, newEndDate, newEndDate));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public EList<Predicate> getPredicates()
  {
		if (predicates == null) {
			predicates = new EObjectContainmentEList<Predicate>(Predicate.class, this, ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__PREDICATES);
		}
		return predicates;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public EList<ActivityResource> getUses()
  {
		if (uses == null) {
			uses = new EObjectContainmentEList<ActivityResource>(ActivityResource.class, this, ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__USES);
		}
		return uses;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
		switch (featureID) {
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__START_DATE:
				return basicSetStartDate(null, msgs);
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__END_DATE:
				return basicSetEndDate(null, msgs);
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__PREDICATES:
				return ((InternalEList<?>)getPredicates()).basicRemove(otherEnd, msgs);
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__USES:
				return ((InternalEList<?>)getUses()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
		switch (featureID) {
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__NAME:
				return getName();
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__FREQUENCY:
				return getFrequency();
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__START_DATE:
				return getStartDate();
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__END_DATE:
				return getEndDate();
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__PREDICATES:
				return getPredicates();
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__USES:
				return getUses();
		}
		return super.eGet(featureID, resolve, coreType);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
		switch (featureID) {
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__NAME:
				setName((String)newValue);
				return;
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__FREQUENCY:
				setFrequency((Frequency)newValue);
				return;
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__START_DATE:
				setStartDate((Date)newValue);
				return;
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__END_DATE:
				setEndDate((Date)newValue);
				return;
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__PREDICATES:
				getPredicates().clear();
				getPredicates().addAll((Collection<? extends Predicate>)newValue);
				return;
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__USES:
				getUses().clear();
				getUses().addAll((Collection<? extends ActivityResource>)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eUnset(int featureID)
  {
		switch (featureID) {
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__NAME:
				setName(NAME_EDEFAULT);
				return;
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__FREQUENCY:
				setFrequency(FREQUENCY_EDEFAULT);
				return;
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__START_DATE:
				setStartDate((Date)null);
				return;
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__END_DATE:
				setEndDate((Date)null);
				return;
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__PREDICATES:
				getPredicates().clear();
				return;
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__USES:
				getUses().clear();
				return;
		}
		super.eUnset(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public boolean eIsSet(int featureID)
  {
		switch (featureID) {
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__NAME:
				return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__FREQUENCY:
				return frequency != FREQUENCY_EDEFAULT;
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__START_DATE:
				return startDate != null;
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__END_DATE:
				return endDate != null;
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__PREDICATES:
				return predicates != null && !predicates.isEmpty();
			case ActivitiesDSLPackage.EXPLOITATION_ACTIVITY__USES:
				return uses != null && !uses.isEmpty();
		}
		return super.eIsSet(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String toString()
  {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (name: ");
		result.append(name);
		result.append(", frequency: ");
		result.append(frequency);
		result.append(')');
		return result.toString();
	}

} //ExploitationActivityImpl
