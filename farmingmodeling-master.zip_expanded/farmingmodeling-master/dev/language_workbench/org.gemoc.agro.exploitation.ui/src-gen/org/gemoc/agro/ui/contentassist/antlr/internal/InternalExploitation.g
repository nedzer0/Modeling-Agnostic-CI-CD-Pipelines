/*
* generated by Xtext
*/
grammar InternalExploitation;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.gemoc.agro.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.gemoc.agro.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.gemoc.agro.services.ExploitationGrammarAccess;

}

@parser::members {
 
 	private ExploitationGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ExploitationGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getActivitiesAssignment()); }
(rule__Model__ActivitiesAssignment)*
{ after(grammarAccess.getModelAccess().getActivitiesAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExploitationActivity
entryRuleExploitationActivity 
:
{ before(grammarAccess.getExploitationActivityRule()); }
	 ruleExploitationActivity
{ after(grammarAccess.getExploitationActivityRule()); } 
	 EOF 
;

// Rule ExploitationActivity
ruleExploitationActivity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExploitationActivityAccess().getGroup()); }
(rule__ExploitationActivity__Group__0)
{ after(grammarAccess.getExploitationActivityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePredicate
entryRulePredicate 
:
{ before(grammarAccess.getPredicateRule()); }
	 rulePredicate
{ after(grammarAccess.getPredicateRule()); } 
	 EOF 
;

// Rule Predicate
rulePredicate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPredicateAccess().getAlternatives()); }
(rule__Predicate__Alternatives)
{ after(grammarAccess.getPredicateAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoRain
entryRuleNoRain 
:
{ before(grammarAccess.getNoRainRule()); }
	 ruleNoRain
{ after(grammarAccess.getNoRainRule()); } 
	 EOF 
;

// Rule NoRain
ruleNoRain
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNoRainAccess().getGroup()); }
(rule__NoRain__Group__0)
{ after(grammarAccess.getNoRainAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTempOfTheDay
entryRuleTempOfTheDay 
:
{ before(grammarAccess.getTempOfTheDayRule()); }
	 ruleTempOfTheDay
{ after(grammarAccess.getTempOfTheDayRule()); } 
	 EOF 
;

// Rule TempOfTheDay
ruleTempOfTheDay
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTempOfTheDayAccess().getGroup()); }
(rule__TempOfTheDay__Group__0)
{ after(grammarAccess.getTempOfTheDayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDelaySinceActivy
entryRuleDelaySinceActivy 
:
{ before(grammarAccess.getDelaySinceActivyRule()); }
	 ruleDelaySinceActivy
{ after(grammarAccess.getDelaySinceActivyRule()); } 
	 EOF 
;

// Rule DelaySinceActivy
ruleDelaySinceActivy
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDelaySinceActivyAccess().getGroup()); }
(rule__DelaySinceActivy__Group__0)
{ after(grammarAccess.getDelaySinceActivyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGrainIs
entryRuleGrainIs 
:
{ before(grammarAccess.getGrainIsRule()); }
	 ruleGrainIs
{ after(grammarAccess.getGrainIsRule()); } 
	 EOF 
;

// Rule GrainIs
ruleGrainIs
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGrainIsAccess().getGroup()); }
(rule__GrainIs__Group__0)
{ after(grammarAccess.getGrainIsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDate
entryRuleDate 
:
{ before(grammarAccess.getDateRule()); }
	 ruleDate
{ after(grammarAccess.getDateRule()); } 
	 EOF 
;

// Rule Date
ruleDate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDateAccess().getGroup()); }
(rule__Date__Group__0)
{ after(grammarAccess.getDateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Predicate__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredicateAccess().getNoRainParserRuleCall_0()); }
	ruleNoRain
{ after(grammarAccess.getPredicateAccess().getNoRainParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPredicateAccess().getTempOfTheDayParserRuleCall_1()); }
	ruleTempOfTheDay
{ after(grammarAccess.getPredicateAccess().getTempOfTheDayParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPredicateAccess().getDelaySinceActivyParserRuleCall_2()); }
	ruleDelaySinceActivy
{ after(grammarAccess.getPredicateAccess().getDelaySinceActivyParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPredicateAccess().getGrainIsParserRuleCall_3()); }
	ruleGrainIs
{ after(grammarAccess.getPredicateAccess().getGrainIsParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GrainIs__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGrainIsAccess().getGrainKeyword_0_0()); }

	'grain' 

{ after(grammarAccess.getGrainIsAccess().getGrainKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getGrainIsAccess().getSoilKeyword_0_1()); }

	'soil' 

{ after(grammarAccess.getGrainIsAccess().getSoilKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAccess().getJanKeyword_1_0()); }

	'jan' 

{ after(grammarAccess.getDateAccess().getJanKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getDateAccess().getFebKeyword_1_1()); }

	'feb' 

{ after(grammarAccess.getDateAccess().getFebKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getDateAccess().getMarKeyword_1_2()); }

	'mar' 

{ after(grammarAccess.getDateAccess().getMarKeyword_1_2()); }
)

    |(
{ before(grammarAccess.getDateAccess().getAprKeyword_1_3()); }

	'apr' 

{ after(grammarAccess.getDateAccess().getAprKeyword_1_3()); }
)

    |(
{ before(grammarAccess.getDateAccess().getMayKeyword_1_4()); }

	'may' 

{ after(grammarAccess.getDateAccess().getMayKeyword_1_4()); }
)

    |(
{ before(grammarAccess.getDateAccess().getJuneKeyword_1_5()); }

	'june' 

{ after(grammarAccess.getDateAccess().getJuneKeyword_1_5()); }
)

    |(
{ before(grammarAccess.getDateAccess().getJulKeyword_1_6()); }

	'jul' 

{ after(grammarAccess.getDateAccess().getJulKeyword_1_6()); }
)

    |(
{ before(grammarAccess.getDateAccess().getAugKeyword_1_7()); }

	'aug' 

{ after(grammarAccess.getDateAccess().getAugKeyword_1_7()); }
)

    |(
{ before(grammarAccess.getDateAccess().getSeptKeyword_1_8()); }

	'sept' 

{ after(grammarAccess.getDateAccess().getSeptKeyword_1_8()); }
)

    |(
{ before(grammarAccess.getDateAccess().getOctKeyword_1_9()); }

	'oct' 

{ after(grammarAccess.getDateAccess().getOctKeyword_1_9()); }
)

    |(
{ before(grammarAccess.getDateAccess().getNovKeyword_1_10()); }

	'nov' 

{ after(grammarAccess.getDateAccess().getNovKeyword_1_10()); }
)

    |(
{ before(grammarAccess.getDateAccess().getDecKeyword_1_11()); }

	'dec' 

{ after(grammarAccess.getDateAccess().getDecKeyword_1_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ExploitationActivity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group__0__Impl
	rule__ExploitationActivity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getActivityKeyword_0()); }

	'activity' 

{ after(grammarAccess.getExploitationActivityAccess().getActivityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group__1__Impl
	rule__ExploitationActivity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getNameAssignment_1()); }
(rule__ExploitationActivity__NameAssignment_1)
{ after(grammarAccess.getExploitationActivityAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group__2__Impl
	rule__ExploitationActivity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getFromKeyword_2()); }

	'from ' 

{ after(grammarAccess.getExploitationActivityAccess().getFromKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group__3__Impl
	rule__ExploitationActivity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getStartDateAssignment_3()); }
(rule__ExploitationActivity__StartDateAssignment_3)
{ after(grammarAccess.getExploitationActivityAccess().getStartDateAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group__4__Impl
	rule__ExploitationActivity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getToKeyword_4()); }

	'to' 

{ after(grammarAccess.getExploitationActivityAccess().getToKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group__5__Impl
	rule__ExploitationActivity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getEndDateAssignment_5()); }
(rule__ExploitationActivity__EndDateAssignment_5)
{ after(grammarAccess.getExploitationActivityAccess().getEndDateAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group__6__Impl
	rule__ExploitationActivity__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getLeftSquareBracketKeyword_6()); }

	'[' 

{ after(grammarAccess.getExploitationActivityAccess().getLeftSquareBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group__7__Impl
	rule__ExploitationActivity__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getPredicatesAssignment_7()); }
(rule__ExploitationActivity__PredicatesAssignment_7)*
{ after(grammarAccess.getExploitationActivityAccess().getPredicatesAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExploitationActivity__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExploitationActivity__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getRightSquareBracketKeyword_8()); }

	']' 

{ after(grammarAccess.getExploitationActivityAccess().getRightSquareBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__NoRain__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NoRain__Group__0__Impl
	rule__NoRain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NoRain__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoRainAccess().getNoRainSinceKeyword_0()); }

	'no rain since' 

{ after(grammarAccess.getNoRainAccess().getNoRainSinceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NoRain__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NoRain__Group__1__Impl
	rule__NoRain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NoRain__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoRainAccess().getDaysAssignment_1()); }
(rule__NoRain__DaysAssignment_1)
{ after(grammarAccess.getNoRainAccess().getDaysAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NoRain__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NoRain__Group__2__Impl
	rule__NoRain__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NoRain__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoRainAccess().getDaysKeyword_2()); }

	' days' 

{ after(grammarAccess.getNoRainAccess().getDaysKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NoRain__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NoRain__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NoRain__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoRainAccess().getGroup_3()); }
(rule__NoRain__Group_3__0)?
{ after(grammarAccess.getNoRainAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NoRain__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NoRain__Group_3__0__Impl
	rule__NoRain__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NoRain__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoRainAccess().getAmpersandAmpersandKeyword_3_0()); }

	'&&' 

{ after(grammarAccess.getNoRainAccess().getAmpersandAmpersandKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NoRain__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NoRain__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NoRain__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoRainAccess().getNextAssignment_3_1()); }
(rule__NoRain__NextAssignment_3_1)
{ after(grammarAccess.getNoRainAccess().getNextAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TempOfTheDay__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TempOfTheDay__Group__0__Impl
	rule__TempOfTheDay__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TempOfTheDay__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTempOfTheDayAccess().getTemperatureKeyword_0()); }

	'temperature >' 

{ after(grammarAccess.getTempOfTheDayAccess().getTemperatureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TempOfTheDay__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TempOfTheDay__Group__1__Impl
	rule__TempOfTheDay__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TempOfTheDay__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTempOfTheDayAccess().getLowerTempBoundAssignment_1()); }
(rule__TempOfTheDay__LowerTempBoundAssignment_1)
{ after(grammarAccess.getTempOfTheDayAccess().getLowerTempBoundAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TempOfTheDay__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TempOfTheDay__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TempOfTheDay__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTempOfTheDayAccess().getGroup_2()); }
(rule__TempOfTheDay__Group_2__0)?
{ after(grammarAccess.getTempOfTheDayAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TempOfTheDay__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TempOfTheDay__Group_2__0__Impl
	rule__TempOfTheDay__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TempOfTheDay__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTempOfTheDayAccess().getAmpersandAmpersandKeyword_2_0()); }

	'&&' 

{ after(grammarAccess.getTempOfTheDayAccess().getAmpersandAmpersandKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TempOfTheDay__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TempOfTheDay__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TempOfTheDay__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTempOfTheDayAccess().getNextAssignment_2_1()); }
(rule__TempOfTheDay__NextAssignment_2_1)
{ after(grammarAccess.getTempOfTheDayAccess().getNextAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DelaySinceActivy__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelaySinceActivy__Group__0__Impl
	rule__DelaySinceActivy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DelaySinceActivy__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelaySinceActivyAccess().getActivityKeyword_0()); }

	'activity ' 

{ after(grammarAccess.getDelaySinceActivyAccess().getActivityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelaySinceActivy__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelaySinceActivy__Group__1__Impl
	rule__DelaySinceActivy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DelaySinceActivy__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelaySinceActivyAccess().getActivityAssignment_1()); }
(rule__DelaySinceActivy__ActivityAssignment_1)
{ after(grammarAccess.getDelaySinceActivyAccess().getActivityAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelaySinceActivy__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelaySinceActivy__Group__2__Impl
	rule__DelaySinceActivy__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DelaySinceActivy__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelaySinceActivyAccess().getIsDoneSinceKeyword_2()); }

	'is done since' 

{ after(grammarAccess.getDelaySinceActivyAccess().getIsDoneSinceKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelaySinceActivy__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelaySinceActivy__Group__3__Impl
	rule__DelaySinceActivy__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DelaySinceActivy__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelaySinceActivyAccess().getDaysAssignment_3()); }
(rule__DelaySinceActivy__DaysAssignment_3)
{ after(grammarAccess.getDelaySinceActivyAccess().getDaysAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelaySinceActivy__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelaySinceActivy__Group__4__Impl
	rule__DelaySinceActivy__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DelaySinceActivy__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelaySinceActivyAccess().getDaysKeyword_4()); }

	' days' 

{ after(grammarAccess.getDelaySinceActivyAccess().getDaysKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelaySinceActivy__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelaySinceActivy__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DelaySinceActivy__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelaySinceActivyAccess().getGroup_5()); }
(rule__DelaySinceActivy__Group_5__0)?
{ after(grammarAccess.getDelaySinceActivyAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DelaySinceActivy__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelaySinceActivy__Group_5__0__Impl
	rule__DelaySinceActivy__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DelaySinceActivy__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelaySinceActivyAccess().getAmpersandAmpersandKeyword_5_0()); }

	'&&' 

{ after(grammarAccess.getDelaySinceActivyAccess().getAmpersandAmpersandKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelaySinceActivy__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelaySinceActivy__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DelaySinceActivy__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelaySinceActivyAccess().getNextAssignment_5_1()); }
(rule__DelaySinceActivy__NextAssignment_5_1)
{ after(grammarAccess.getDelaySinceActivyAccess().getNextAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GrainIs__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GrainIs__Group__0__Impl
	rule__GrainIs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GrainIs__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGrainIsAccess().getAlternatives_0()); }
(rule__GrainIs__Alternatives_0)
{ after(grammarAccess.getGrainIsAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GrainIs__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GrainIs__Group__1__Impl
	rule__GrainIs__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GrainIs__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGrainIsAccess().getIsKeyword_1()); }

	'is' 

{ after(grammarAccess.getGrainIsAccess().getIsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GrainIs__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GrainIs__Group__2__Impl
	rule__GrainIs__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GrainIs__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGrainIsAccess().getStateAssignment_2()); }
(rule__GrainIs__StateAssignment_2)
{ after(grammarAccess.getGrainIsAccess().getStateAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GrainIs__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GrainIs__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GrainIs__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGrainIsAccess().getGroup_3()); }
(rule__GrainIs__Group_3__0)?
{ after(grammarAccess.getGrainIsAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__GrainIs__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GrainIs__Group_3__0__Impl
	rule__GrainIs__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GrainIs__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGrainIsAccess().getAmpersandAmpersandKeyword_3_0()); }

	'&&' 

{ after(grammarAccess.getGrainIsAccess().getAmpersandAmpersandKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GrainIs__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GrainIs__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GrainIs__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGrainIsAccess().getNextAssignment_3_1()); }
(rule__GrainIs__NextAssignment_3_1)
{ after(grammarAccess.getGrainIsAccess().getNextAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Date__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Date__Group__0__Impl
	rule__Date__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAccess().getDayAssignment_0()); }
(rule__Date__DayAssignment_0)
{ after(grammarAccess.getDateAccess().getDayAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Date__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Date__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAccess().getAlternatives_1()); }
(rule__Date__Alternatives_1)
{ after(grammarAccess.getDateAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__ActivitiesAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getActivitiesExploitationActivityParserRuleCall_0()); }
	ruleExploitationActivity{ after(grammarAccess.getModelAccess().getActivitiesExploitationActivityParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getExploitationActivityAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__StartDateAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getStartDateDateParserRuleCall_3_0()); }
	ruleDate{ after(grammarAccess.getExploitationActivityAccess().getStartDateDateParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__EndDateAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getEndDateDateParserRuleCall_5_0()); }
	ruleDate{ after(grammarAccess.getExploitationActivityAccess().getEndDateDateParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExploitationActivity__PredicatesAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitationActivityAccess().getPredicatesPredicateParserRuleCall_7_0()); }
	rulePredicate{ after(grammarAccess.getExploitationActivityAccess().getPredicatesPredicateParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NoRain__DaysAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoRainAccess().getDaysINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getNoRainAccess().getDaysINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NoRain__NextAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoRainAccess().getNextPredicateParserRuleCall_3_1_0()); }
	rulePredicate{ after(grammarAccess.getNoRainAccess().getNextPredicateParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TempOfTheDay__LowerTempBoundAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTempOfTheDayAccess().getLowerTempBoundINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getTempOfTheDayAccess().getLowerTempBoundINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TempOfTheDay__NextAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTempOfTheDayAccess().getNextPredicateParserRuleCall_2_1_0()); }
	rulePredicate{ after(grammarAccess.getTempOfTheDayAccess().getNextPredicateParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelaySinceActivy__ActivityAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelaySinceActivyAccess().getActivityExploitationActivityParserRuleCall_1_0()); }
	ruleExploitationActivity{ after(grammarAccess.getDelaySinceActivyAccess().getActivityExploitationActivityParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelaySinceActivy__DaysAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelaySinceActivyAccess().getDaysINTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getDelaySinceActivyAccess().getDaysINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelaySinceActivy__NextAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelaySinceActivyAccess().getNextPredicateParserRuleCall_5_1_0()); }
	rulePredicate{ after(grammarAccess.getDelaySinceActivyAccess().getNextPredicateParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GrainIs__StateAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGrainIsAccess().getStateSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getGrainIsAccess().getStateSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GrainIs__NextAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGrainIsAccess().getNextPredicateParserRuleCall_3_1_0()); }
	rulePredicate{ after(grammarAccess.getGrainIsAccess().getNextPredicateParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Date__DayAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAccess().getDayINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getDateAccess().getDayINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


