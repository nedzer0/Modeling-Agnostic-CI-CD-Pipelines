/*
 * generated by Xtext 2.34.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class PipelineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Pipeline");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPipelineAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPIPELINEKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final RuleCall cNAMETerminalRuleCall_2_0_0 = (RuleCall)cGroup_2_0.eContents().get(0);
		private final Assignment cName0Assignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cName0EStringParserRuleCall_2_0_1_0 = (RuleCall)cName0Assignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cWhenKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cWhenAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cWhenWhenParserRuleCall_2_1_1_0 = (RuleCall)cWhenAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_1_2 = (Group)cGroup_2_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Assignment cWhenAssignment_2_1_2_1 = (Assignment)cGroup_2_1_2.eContents().get(1);
		private final RuleCall cWhenWhenParserRuleCall_2_1_2_1_0 = (RuleCall)cWhenAssignment_2_1_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cAlternatives_2.eContents().get(2);
		private final Keyword cJobKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cJobAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cJobJobParserRuleCall_2_2_1_0 = (RuleCall)cJobAssignment_2_2_1.eContents().get(0);
		private final Group cGroup_2_2_2 = (Group)cGroup_2_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_2_0 = (Keyword)cGroup_2_2_2.eContents().get(0);
		private final Assignment cJobAssignment_2_2_2_1 = (Assignment)cGroup_2_2_2.eContents().get(1);
		private final RuleCall cJobJobParserRuleCall_2_2_2_1_0 = (RuleCall)cJobAssignment_2_2_2_1.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cAlternatives_2.eContents().get(3);
		private final Keyword cPipeline_tool_frameworkKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cPipeline_tool_frameworkAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cPipeline_tool_frameworkTool_FrameworkParserRuleCall_2_3_1_0 = (RuleCall)cPipeline_tool_frameworkAssignment_2_3_1.eContents().get(0);
		private final Group cGroup_2_3_2 = (Group)cGroup_2_3.eContents().get(2);
		private final Keyword cCommaKeyword_2_3_2_0 = (Keyword)cGroup_2_3_2.eContents().get(0);
		private final Assignment cPipeline_tool_frameworkAssignment_2_3_2_1 = (Assignment)cGroup_2_3_2.eContents().get(1);
		private final RuleCall cPipeline_tool_frameworkTool_FrameworkParserRuleCall_2_3_2_1_0 = (RuleCall)cPipeline_tool_frameworkAssignment_2_3_2_1.eContents().get(0);
		private final Group cGroup_2_4 = (Group)cAlternatives_2.eContents().get(4);
		private final Keyword cPipeline_environmentKeyword_2_4_0 = (Keyword)cGroup_2_4.eContents().get(0);
		private final Assignment cPipeline_environmentAssignment_2_4_1 = (Assignment)cGroup_2_4.eContents().get(1);
		private final RuleCall cPipeline_environmentEnvironmentParserRuleCall_2_4_1_0 = (RuleCall)cPipeline_environmentAssignment_2_4_1.eContents().get(0);
		private final Group cGroup_2_4_2 = (Group)cGroup_2_4.eContents().get(2);
		private final Keyword cCommaKeyword_2_4_2_0 = (Keyword)cGroup_2_4_2.eContents().get(0);
		private final Assignment cPipeline_environmentAssignment_2_4_2_1 = (Assignment)cGroup_2_4_2.eContents().get(1);
		private final RuleCall cPipeline_environmentEnvironmentParserRuleCall_2_4_2_1_0 = (RuleCall)cPipeline_environmentAssignment_2_4_2_1.eContents().get(0);
		private final Group cGroup_2_5 = (Group)cAlternatives_2.eContents().get(5);
		private final Keyword cPermissionKeyword_2_5_0 = (Keyword)cGroup_2_5.eContents().get(0);
		private final Assignment cPermissionAssignment_2_5_1 = (Assignment)cGroup_2_5.eContents().get(1);
		private final RuleCall cPermissionPermissionParserRuleCall_2_5_1_0 = (RuleCall)cPermissionAssignment_2_5_1.eContents().get(0);
		private final Group cGroup_2_5_2 = (Group)cGroup_2_5.eContents().get(2);
		private final Keyword cCommaKeyword_2_5_2_0 = (Keyword)cGroup_2_5_2.eContents().get(0);
		private final Assignment cPermissionAssignment_2_5_2_1 = (Assignment)cGroup_2_5_2.eContents().get(1);
		private final RuleCall cPermissionPermissionParserRuleCall_2_5_2_1_0 = (RuleCall)cPermissionAssignment_2_5_2_1.eContents().get(0);
		private final Group cGroup_2_6 = (Group)cAlternatives_2.eContents().get(6);
		private final Keyword cParallelKeyword_2_6_0 = (Keyword)cGroup_2_6.eContents().get(0);
		private final Assignment cParallelAssignment_2_6_1 = (Assignment)cGroup_2_6.eContents().get(1);
		private final RuleCall cParallelParallelParserRuleCall_2_6_1_0 = (RuleCall)cParallelAssignment_2_6_1.eContents().get(0);
		private final Group cGroup_2_6_2 = (Group)cGroup_2_6.eContents().get(2);
		private final Keyword cCommaKeyword_2_6_2_0 = (Keyword)cGroup_2_6_2.eContents().get(0);
		private final Assignment cParallelAssignment_2_6_2_1 = (Assignment)cGroup_2_6_2.eContents().get(1);
		private final RuleCall cParallelParallelParserRuleCall_2_6_2_1_0 = (RuleCall)cParallelAssignment_2_6_2_1.eContents().get(0);
		
		//Pipeline returns Pipeline:
		//    {Pipeline}
		//    'PIPELINE'
		//    (
		//        (NAME Name0=EString?) |
		//        ('when'  when+=When ( "," when+=When)*  ) |
		//        ('job'  job+=Job ( "," job+=Job)*  )? |
		//        ('pipeline_tool_framework'  pipeline_tool_framework+=Tool_Framework ( "," pipeline_tool_framework+=Tool_Framework)*  )? |
		//        ('pipeline_environment'  pipeline_environment+=Environment ( "," pipeline_environment+=Environment)*  )? |
		//        ('permission'  permission+=Permission ( "," permission+=Permission)*  )? |
		//        ('parallel'  parallel+=Parallel ( "," parallel+=Parallel)*  )?
		//    );
		@Override public ParserRule getRule() { return rule; }
		
		//{Pipeline}
		//'PIPELINE'
		//(
		//    (NAME Name0=EString?) |
		//    ('when'  when+=When ( "," when+=When)*  ) |
		//    ('job'  job+=Job ( "," job+=Job)*  )? |
		//    ('pipeline_tool_framework'  pipeline_tool_framework+=Tool_Framework ( "," pipeline_tool_framework+=Tool_Framework)*  )? |
		//    ('pipeline_environment'  pipeline_environment+=Environment ( "," pipeline_environment+=Environment)*  )? |
		//    ('permission'  permission+=Permission ( "," permission+=Permission)*  )? |
		//    ('parallel'  parallel+=Parallel ( "," parallel+=Parallel)*  )?
		//)
		public Group getGroup() { return cGroup; }
		
		//{Pipeline}
		public Action getPipelineAction_0() { return cPipelineAction_0; }
		
		//'PIPELINE'
		public Keyword getPIPELINEKeyword_1() { return cPIPELINEKeyword_1; }
		
		//(
		//    (NAME Name0=EString?) |
		//    ('when'  when+=When ( "," when+=When)*  ) |
		//    ('job'  job+=Job ( "," job+=Job)*  )? |
		//    ('pipeline_tool_framework'  pipeline_tool_framework+=Tool_Framework ( "," pipeline_tool_framework+=Tool_Framework)*  )? |
		//    ('pipeline_environment'  pipeline_environment+=Environment ( "," pipeline_environment+=Environment)*  )? |
		//    ('permission'  permission+=Permission ( "," permission+=Permission)*  )? |
		//    ('parallel'  parallel+=Parallel ( "," parallel+=Parallel)*  )?
		//)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//(NAME Name0=EString?)
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//NAME
		public RuleCall getNAMETerminalRuleCall_2_0_0() { return cNAMETerminalRuleCall_2_0_0; }
		
		//Name0=EString?
		public Assignment getName0Assignment_2_0_1() { return cName0Assignment_2_0_1; }
		
		//EString
		public RuleCall getName0EStringParserRuleCall_2_0_1_0() { return cName0EStringParserRuleCall_2_0_1_0; }
		
		//('when'  when+=When ( "," when+=When)*  )
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'when'
		public Keyword getWhenKeyword_2_1_0() { return cWhenKeyword_2_1_0; }
		
		//when+=When
		public Assignment getWhenAssignment_2_1_1() { return cWhenAssignment_2_1_1; }
		
		//When
		public RuleCall getWhenWhenParserRuleCall_2_1_1_0() { return cWhenWhenParserRuleCall_2_1_1_0; }
		
		//( "," when+=When)*
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }
		
		//","
		public Keyword getCommaKeyword_2_1_2_0() { return cCommaKeyword_2_1_2_0; }
		
		//when+=When
		public Assignment getWhenAssignment_2_1_2_1() { return cWhenAssignment_2_1_2_1; }
		
		//When
		public RuleCall getWhenWhenParserRuleCall_2_1_2_1_0() { return cWhenWhenParserRuleCall_2_1_2_1_0; }
		
		//('job'  job+=Job ( "," job+=Job)*  )?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'job'
		public Keyword getJobKeyword_2_2_0() { return cJobKeyword_2_2_0; }
		
		//job+=Job
		public Assignment getJobAssignment_2_2_1() { return cJobAssignment_2_2_1; }
		
		//Job
		public RuleCall getJobJobParserRuleCall_2_2_1_0() { return cJobJobParserRuleCall_2_2_1_0; }
		
		//( "," job+=Job)*
		public Group getGroup_2_2_2() { return cGroup_2_2_2; }
		
		//","
		public Keyword getCommaKeyword_2_2_2_0() { return cCommaKeyword_2_2_2_0; }
		
		//job+=Job
		public Assignment getJobAssignment_2_2_2_1() { return cJobAssignment_2_2_2_1; }
		
		//Job
		public RuleCall getJobJobParserRuleCall_2_2_2_1_0() { return cJobJobParserRuleCall_2_2_2_1_0; }
		
		//('pipeline_tool_framework'  pipeline_tool_framework+=Tool_Framework ( "," pipeline_tool_framework+=Tool_Framework)*  )?
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//'pipeline_tool_framework'
		public Keyword getPipeline_tool_frameworkKeyword_2_3_0() { return cPipeline_tool_frameworkKeyword_2_3_0; }
		
		//pipeline_tool_framework+=Tool_Framework
		public Assignment getPipeline_tool_frameworkAssignment_2_3_1() { return cPipeline_tool_frameworkAssignment_2_3_1; }
		
		//Tool_Framework
		public RuleCall getPipeline_tool_frameworkTool_FrameworkParserRuleCall_2_3_1_0() { return cPipeline_tool_frameworkTool_FrameworkParserRuleCall_2_3_1_0; }
		
		//( "," pipeline_tool_framework+=Tool_Framework)*
		public Group getGroup_2_3_2() { return cGroup_2_3_2; }
		
		//","
		public Keyword getCommaKeyword_2_3_2_0() { return cCommaKeyword_2_3_2_0; }
		
		//pipeline_tool_framework+=Tool_Framework
		public Assignment getPipeline_tool_frameworkAssignment_2_3_2_1() { return cPipeline_tool_frameworkAssignment_2_3_2_1; }
		
		//Tool_Framework
		public RuleCall getPipeline_tool_frameworkTool_FrameworkParserRuleCall_2_3_2_1_0() { return cPipeline_tool_frameworkTool_FrameworkParserRuleCall_2_3_2_1_0; }
		
		//('pipeline_environment'  pipeline_environment+=Environment ( "," pipeline_environment+=Environment)*  )?
		public Group getGroup_2_4() { return cGroup_2_4; }
		
		//'pipeline_environment'
		public Keyword getPipeline_environmentKeyword_2_4_0() { return cPipeline_environmentKeyword_2_4_0; }
		
		//pipeline_environment+=Environment
		public Assignment getPipeline_environmentAssignment_2_4_1() { return cPipeline_environmentAssignment_2_4_1; }
		
		//Environment
		public RuleCall getPipeline_environmentEnvironmentParserRuleCall_2_4_1_0() { return cPipeline_environmentEnvironmentParserRuleCall_2_4_1_0; }
		
		//( "," pipeline_environment+=Environment)*
		public Group getGroup_2_4_2() { return cGroup_2_4_2; }
		
		//","
		public Keyword getCommaKeyword_2_4_2_0() { return cCommaKeyword_2_4_2_0; }
		
		//pipeline_environment+=Environment
		public Assignment getPipeline_environmentAssignment_2_4_2_1() { return cPipeline_environmentAssignment_2_4_2_1; }
		
		//Environment
		public RuleCall getPipeline_environmentEnvironmentParserRuleCall_2_4_2_1_0() { return cPipeline_environmentEnvironmentParserRuleCall_2_4_2_1_0; }
		
		//('permission'  permission+=Permission ( "," permission+=Permission)*  )?
		public Group getGroup_2_5() { return cGroup_2_5; }
		
		//'permission'
		public Keyword getPermissionKeyword_2_5_0() { return cPermissionKeyword_2_5_0; }
		
		//permission+=Permission
		public Assignment getPermissionAssignment_2_5_1() { return cPermissionAssignment_2_5_1; }
		
		//Permission
		public RuleCall getPermissionPermissionParserRuleCall_2_5_1_0() { return cPermissionPermissionParserRuleCall_2_5_1_0; }
		
		//( "," permission+=Permission)*
		public Group getGroup_2_5_2() { return cGroup_2_5_2; }
		
		//","
		public Keyword getCommaKeyword_2_5_2_0() { return cCommaKeyword_2_5_2_0; }
		
		//permission+=Permission
		public Assignment getPermissionAssignment_2_5_2_1() { return cPermissionAssignment_2_5_2_1; }
		
		//Permission
		public RuleCall getPermissionPermissionParserRuleCall_2_5_2_1_0() { return cPermissionPermissionParserRuleCall_2_5_2_1_0; }
		
		//('parallel'  parallel+=Parallel ( "," parallel+=Parallel)*  )?
		public Group getGroup_2_6() { return cGroup_2_6; }
		
		//'parallel'
		public Keyword getParallelKeyword_2_6_0() { return cParallelKeyword_2_6_0; }
		
		//parallel+=Parallel
		public Assignment getParallelAssignment_2_6_1() { return cParallelAssignment_2_6_1; }
		
		//Parallel
		public RuleCall getParallelParallelParserRuleCall_2_6_1_0() { return cParallelParallelParserRuleCall_2_6_1_0; }
		
		//( "," parallel+=Parallel)*
		public Group getGroup_2_6_2() { return cGroup_2_6_2; }
		
		//","
		public Keyword getCommaKeyword_2_6_2_0() { return cCommaKeyword_2_6_2_0; }
		
		//parallel+=Parallel
		public Assignment getParallelAssignment_2_6_2_1() { return cParallelAssignment_2_6_2_1; }
		
		//Parallel
		public RuleCall getParallelParallelParserRuleCall_2_6_2_1_0() { return cParallelParallelParserRuleCall_2_6_2_1_0; }
	}
	public class WhenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.When");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cWhenAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cName4Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cName4EStringParserRuleCall_1_0 = (RuleCall)cName4Assignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cTriggerKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTriggerAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTriggerEStringParserRuleCall_2_1_0 = (RuleCall)cTriggerAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTimerKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTimerAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTimerEStringParserRuleCall_3_1_0 = (RuleCall)cTimerAssignment_3_1.eContents().get(0);
		
		//When returns When:
		//    {When}
		//    Name4=EString
		//        ('Trigger' Trigger=EString)?
		//        ('Timer' Timer=EString)?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{When}
		//Name4=EString
		//    ('Trigger' Trigger=EString)?
		//    ('Timer' Timer=EString)?
		public Group getGroup() { return cGroup; }
		
		//{When}
		public Action getWhenAction_0() { return cWhenAction_0; }
		
		//Name4=EString
		public Assignment getName4Assignment_1() { return cName4Assignment_1; }
		
		//EString
		public RuleCall getName4EStringParserRuleCall_1_0() { return cName4EStringParserRuleCall_1_0; }
		
		//('Trigger' Trigger=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'Trigger'
		public Keyword getTriggerKeyword_2_0() { return cTriggerKeyword_2_0; }
		
		//Trigger=EString
		public Assignment getTriggerAssignment_2_1() { return cTriggerAssignment_2_1; }
		
		//EString
		public RuleCall getTriggerEStringParserRuleCall_2_1_0() { return cTriggerEStringParserRuleCall_2_1_0; }
		
		//('Timer' Timer=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Timer'
		public Keyword getTimerKeyword_3_0() { return cTimerKeyword_3_0; }
		
		//Timer=EString
		public Assignment getTimerAssignment_3_1() { return cTimerAssignment_3_1; }
		
		//EString
		public RuleCall getTimerEStringParserRuleCall_3_1_0() { return cTimerEStringParserRuleCall_3_1_0; }
	}
	public class JobElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Job");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cJobAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAllow_faillureAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cAllow_faillureAllow_faillureKeyword_1_0 = (Keyword)cAllow_faillureAssignment_1.eContents().get(0);
		private final Keyword cJobKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cName1Keyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cName1Assignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cName1EStringParserRuleCall_3_1_0 = (RuleCall)cName1Assignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDescription1Keyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDescription1Assignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDescription1EStringParserRuleCall_4_1_0 = (RuleCall)cDescription1Assignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cOutputKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cOutputAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cOutputArtifactCrossReference_5_2_0 = (CrossReference)cOutputAssignment_5_2.eContents().get(0);
		private final RuleCall cOutputArtifactEStringParserRuleCall_5_2_0_1 = (RuleCall)cOutputArtifactCrossReference_5_2_0.eContents().get(1);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cOutputAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final CrossReference cOutputArtifactCrossReference_5_3_1_0 = (CrossReference)cOutputAssignment_5_3_1.eContents().get(0);
		private final RuleCall cOutputArtifactEStringParserRuleCall_5_3_1_0_1 = (RuleCall)cOutputArtifactCrossReference_5_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cTool_framework_jobKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cTool_framework_jobAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cTool_framework_jobTool_FrameworkParserRuleCall_6_1_0 = (RuleCall)cTool_framework_jobAssignment_6_1.eContents().get(0);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cTool_framework_jobAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final RuleCall cTool_framework_jobTool_FrameworkParserRuleCall_6_2_1_0 = (RuleCall)cTool_framework_jobAssignment_6_2_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommandKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cCommandAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cCommandCommandParserRuleCall_7_1_0 = (RuleCall)cCommandAssignment_7_1.eContents().get(0);
		private final Group cGroup_7_2 = (Group)cGroup_7.eContents().get(2);
		private final Keyword cCommaKeyword_7_2_0 = (Keyword)cGroup_7_2.eContents().get(0);
		private final Assignment cCommandAssignment_7_2_1 = (Assignment)cGroup_7_2.eContents().get(1);
		private final RuleCall cCommandCommandParserRuleCall_7_2_1_0 = (RuleCall)cCommandAssignment_7_2_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cIfthenelseKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cIfthenelseAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cIfthenelseIfThenElseParserRuleCall_8_1_0 = (RuleCall)cIfthenelseAssignment_8_1.eContents().get(0);
		private final Group cGroup_8_2 = (Group)cGroup_8.eContents().get(2);
		private final Keyword cCommaKeyword_8_2_0 = (Keyword)cGroup_8_2.eContents().get(0);
		private final Assignment cIfthenelseAssignment_8_2_1 = (Assignment)cGroup_8_2.eContents().get(1);
		private final RuleCall cIfthenelseIfThenElseParserRuleCall_8_2_1_0 = (RuleCall)cIfthenelseAssignment_8_2_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cInputKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cInputAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cInputArtifactParserRuleCall_9_1_0 = (RuleCall)cInputAssignment_9_1.eContents().get(0);
		private final Group cGroup_9_2 = (Group)cGroup_9.eContents().get(2);
		private final Keyword cCommaKeyword_9_2_0 = (Keyword)cGroup_9_2.eContents().get(0);
		private final Assignment cInputAssignment_9_2_1 = (Assignment)cGroup_9_2.eContents().get(1);
		private final RuleCall cInputArtifactParserRuleCall_9_2_1_0 = (RuleCall)cInputAssignment_9_2_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cEnvironmentKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cEnvironmentAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cEnvironmentEnvironmentParserRuleCall_10_1_0 = (RuleCall)cEnvironmentAssignment_10_1.eContents().get(0);
		private final Group cGroup_10_2 = (Group)cGroup_10.eContents().get(2);
		private final Keyword cCommaKeyword_10_2_0 = (Keyword)cGroup_10_2.eContents().get(0);
		private final Assignment cEnvironmentAssignment_10_2_1 = (Assignment)cGroup_10_2.eContents().get(1);
		private final RuleCall cEnvironmentEnvironmentParserRuleCall_10_2_1_0 = (RuleCall)cEnvironmentAssignment_10_2_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cPermissionKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cPermissionAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cPermissionPermissionParserRuleCall_11_1_0 = (RuleCall)cPermissionAssignment_11_1.eContents().get(0);
		private final Group cGroup_11_2 = (Group)cGroup_11.eContents().get(2);
		private final Keyword cCommaKeyword_11_2_0 = (Keyword)cGroup_11_2.eContents().get(0);
		private final Assignment cPermissionAssignment_11_2_1 = (Assignment)cGroup_11_2.eContents().get(1);
		private final RuleCall cPermissionPermissionParserRuleCall_11_2_1_0 = (RuleCall)cPermissionAssignment_11_2_1.eContents().get(0);
		
		//Job returns Job:
		//    {Job}
		//    (Allow_faillure?='Allow_faillure')?
		//    'Job'
		//        ('Name1' Name1=EString)?
		//        ('Description1' Description1=EString)?
		//        ('output' '(' output+=[Artifact|EString] ( "," output+=[Artifact|EString])* ')' )?
		//        ('tool_framework_job'  tool_framework_job+=Tool_Framework ( "," tool_framework_job+=Tool_Framework)*  )?
		//        ('command'  command+=Command ( "," command+=Command)*  )?
		//        ('ifthenelse'  ifthenelse+=IfThenElse ( "," ifthenelse+=IfThenElse)*  )?
		//        ('input'  input+=Artifact ( "," input+=Artifact)*  )?
		//        ('environment'  environment+=Environment ( "," environment+=Environment)*  )?
		//        ('permission'  permission+=Permission ( "," permission+=Permission)*  )?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Job}
		//(Allow_faillure?='Allow_faillure')?
		//'Job'
		//    ('Name1' Name1=EString)?
		//    ('Description1' Description1=EString)?
		//    ('output' '(' output+=[Artifact|EString] ( "," output+=[Artifact|EString])* ')' )?
		//    ('tool_framework_job'  tool_framework_job+=Tool_Framework ( "," tool_framework_job+=Tool_Framework)*  )?
		//    ('command'  command+=Command ( "," command+=Command)*  )?
		//    ('ifthenelse'  ifthenelse+=IfThenElse ( "," ifthenelse+=IfThenElse)*  )?
		//    ('input'  input+=Artifact ( "," input+=Artifact)*  )?
		//    ('environment'  environment+=Environment ( "," environment+=Environment)*  )?
		//    ('permission'  permission+=Permission ( "," permission+=Permission)*  )?
		public Group getGroup() { return cGroup; }
		
		//{Job}
		public Action getJobAction_0() { return cJobAction_0; }
		
		//(Allow_faillure?='Allow_faillure')?
		public Assignment getAllow_faillureAssignment_1() { return cAllow_faillureAssignment_1; }
		
		//'Allow_faillure'
		public Keyword getAllow_faillureAllow_faillureKeyword_1_0() { return cAllow_faillureAllow_faillureKeyword_1_0; }
		
		//'Job'
		public Keyword getJobKeyword_2() { return cJobKeyword_2; }
		
		//('Name1' Name1=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Name1'
		public Keyword getName1Keyword_3_0() { return cName1Keyword_3_0; }
		
		//Name1=EString
		public Assignment getName1Assignment_3_1() { return cName1Assignment_3_1; }
		
		//EString
		public RuleCall getName1EStringParserRuleCall_3_1_0() { return cName1EStringParserRuleCall_3_1_0; }
		
		//('Description1' Description1=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'Description1'
		public Keyword getDescription1Keyword_4_0() { return cDescription1Keyword_4_0; }
		
		//Description1=EString
		public Assignment getDescription1Assignment_4_1() { return cDescription1Assignment_4_1; }
		
		//EString
		public RuleCall getDescription1EStringParserRuleCall_4_1_0() { return cDescription1EStringParserRuleCall_4_1_0; }
		
		//('output' '(' output+=[Artifact|EString] ( "," output+=[Artifact|EString])* ')' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'output'
		public Keyword getOutputKeyword_5_0() { return cOutputKeyword_5_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5_1() { return cLeftParenthesisKeyword_5_1; }
		
		//output+=[Artifact|EString]
		public Assignment getOutputAssignment_5_2() { return cOutputAssignment_5_2; }
		
		//[Artifact|EString]
		public CrossReference getOutputArtifactCrossReference_5_2_0() { return cOutputArtifactCrossReference_5_2_0; }
		
		//EString
		public RuleCall getOutputArtifactEStringParserRuleCall_5_2_0_1() { return cOutputArtifactEStringParserRuleCall_5_2_0_1; }
		
		//( "," output+=[Artifact|EString])*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//output+=[Artifact|EString]
		public Assignment getOutputAssignment_5_3_1() { return cOutputAssignment_5_3_1; }
		
		//[Artifact|EString]
		public CrossReference getOutputArtifactCrossReference_5_3_1_0() { return cOutputArtifactCrossReference_5_3_1_0; }
		
		//EString
		public RuleCall getOutputArtifactEStringParserRuleCall_5_3_1_0_1() { return cOutputArtifactEStringParserRuleCall_5_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5_4() { return cRightParenthesisKeyword_5_4; }
		
		//('tool_framework_job'  tool_framework_job+=Tool_Framework ( "," tool_framework_job+=Tool_Framework)*  )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'tool_framework_job'
		public Keyword getTool_framework_jobKeyword_6_0() { return cTool_framework_jobKeyword_6_0; }
		
		//tool_framework_job+=Tool_Framework
		public Assignment getTool_framework_jobAssignment_6_1() { return cTool_framework_jobAssignment_6_1; }
		
		//Tool_Framework
		public RuleCall getTool_framework_jobTool_FrameworkParserRuleCall_6_1_0() { return cTool_framework_jobTool_FrameworkParserRuleCall_6_1_0; }
		
		//( "," tool_framework_job+=Tool_Framework)*
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//","
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }
		
		//tool_framework_job+=Tool_Framework
		public Assignment getTool_framework_jobAssignment_6_2_1() { return cTool_framework_jobAssignment_6_2_1; }
		
		//Tool_Framework
		public RuleCall getTool_framework_jobTool_FrameworkParserRuleCall_6_2_1_0() { return cTool_framework_jobTool_FrameworkParserRuleCall_6_2_1_0; }
		
		//('command'  command+=Command ( "," command+=Command)*  )?
		public Group getGroup_7() { return cGroup_7; }
		
		//'command'
		public Keyword getCommandKeyword_7_0() { return cCommandKeyword_7_0; }
		
		//command+=Command
		public Assignment getCommandAssignment_7_1() { return cCommandAssignment_7_1; }
		
		//Command
		public RuleCall getCommandCommandParserRuleCall_7_1_0() { return cCommandCommandParserRuleCall_7_1_0; }
		
		//( "," command+=Command)*
		public Group getGroup_7_2() { return cGroup_7_2; }
		
		//","
		public Keyword getCommaKeyword_7_2_0() { return cCommaKeyword_7_2_0; }
		
		//command+=Command
		public Assignment getCommandAssignment_7_2_1() { return cCommandAssignment_7_2_1; }
		
		//Command
		public RuleCall getCommandCommandParserRuleCall_7_2_1_0() { return cCommandCommandParserRuleCall_7_2_1_0; }
		
		//('ifthenelse'  ifthenelse+=IfThenElse ( "," ifthenelse+=IfThenElse)*  )?
		public Group getGroup_8() { return cGroup_8; }
		
		//'ifthenelse'
		public Keyword getIfthenelseKeyword_8_0() { return cIfthenelseKeyword_8_0; }
		
		//ifthenelse+=IfThenElse
		public Assignment getIfthenelseAssignment_8_1() { return cIfthenelseAssignment_8_1; }
		
		//IfThenElse
		public RuleCall getIfthenelseIfThenElseParserRuleCall_8_1_0() { return cIfthenelseIfThenElseParserRuleCall_8_1_0; }
		
		//( "," ifthenelse+=IfThenElse)*
		public Group getGroup_8_2() { return cGroup_8_2; }
		
		//","
		public Keyword getCommaKeyword_8_2_0() { return cCommaKeyword_8_2_0; }
		
		//ifthenelse+=IfThenElse
		public Assignment getIfthenelseAssignment_8_2_1() { return cIfthenelseAssignment_8_2_1; }
		
		//IfThenElse
		public RuleCall getIfthenelseIfThenElseParserRuleCall_8_2_1_0() { return cIfthenelseIfThenElseParserRuleCall_8_2_1_0; }
		
		//('input'  input+=Artifact ( "," input+=Artifact)*  )?
		public Group getGroup_9() { return cGroup_9; }
		
		//'input'
		public Keyword getInputKeyword_9_0() { return cInputKeyword_9_0; }
		
		//input+=Artifact
		public Assignment getInputAssignment_9_1() { return cInputAssignment_9_1; }
		
		//Artifact
		public RuleCall getInputArtifactParserRuleCall_9_1_0() { return cInputArtifactParserRuleCall_9_1_0; }
		
		//( "," input+=Artifact)*
		public Group getGroup_9_2() { return cGroup_9_2; }
		
		//","
		public Keyword getCommaKeyword_9_2_0() { return cCommaKeyword_9_2_0; }
		
		//input+=Artifact
		public Assignment getInputAssignment_9_2_1() { return cInputAssignment_9_2_1; }
		
		//Artifact
		public RuleCall getInputArtifactParserRuleCall_9_2_1_0() { return cInputArtifactParserRuleCall_9_2_1_0; }
		
		//('environment'  environment+=Environment ( "," environment+=Environment)*  )?
		public Group getGroup_10() { return cGroup_10; }
		
		//'environment'
		public Keyword getEnvironmentKeyword_10_0() { return cEnvironmentKeyword_10_0; }
		
		//environment+=Environment
		public Assignment getEnvironmentAssignment_10_1() { return cEnvironmentAssignment_10_1; }
		
		//Environment
		public RuleCall getEnvironmentEnvironmentParserRuleCall_10_1_0() { return cEnvironmentEnvironmentParserRuleCall_10_1_0; }
		
		//( "," environment+=Environment)*
		public Group getGroup_10_2() { return cGroup_10_2; }
		
		//","
		public Keyword getCommaKeyword_10_2_0() { return cCommaKeyword_10_2_0; }
		
		//environment+=Environment
		public Assignment getEnvironmentAssignment_10_2_1() { return cEnvironmentAssignment_10_2_1; }
		
		//Environment
		public RuleCall getEnvironmentEnvironmentParserRuleCall_10_2_1_0() { return cEnvironmentEnvironmentParserRuleCall_10_2_1_0; }
		
		//('permission'  permission+=Permission ( "," permission+=Permission)*  )?
		public Group getGroup_11() { return cGroup_11; }
		
		//'permission'
		public Keyword getPermissionKeyword_11_0() { return cPermissionKeyword_11_0; }
		
		//permission+=Permission
		public Assignment getPermissionAssignment_11_1() { return cPermissionAssignment_11_1; }
		
		//Permission
		public RuleCall getPermissionPermissionParserRuleCall_11_1_0() { return cPermissionPermissionParserRuleCall_11_1_0; }
		
		//( "," permission+=Permission)*
		public Group getGroup_11_2() { return cGroup_11_2; }
		
		//","
		public Keyword getCommaKeyword_11_2_0() { return cCommaKeyword_11_2_0; }
		
		//permission+=Permission
		public Assignment getPermissionAssignment_11_2_1() { return cPermissionAssignment_11_2_1; }
		
		//Permission
		public RuleCall getPermissionPermissionParserRuleCall_11_2_1_0() { return cPermissionPermissionParserRuleCall_11_2_1_0; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class Tool_FrameworkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Tool_Framework");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTool_FrameworkAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTool_FrameworkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cName5Keyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cName5Assignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cName5EStringParserRuleCall_2_1_0 = (RuleCall)cName5Assignment_2_1.eContents().get(0);
		
		//Tool_Framework returns Tool_Framework:
		//    {Tool_Framework}
		//    'Tool_Framework'
		//        ('Name5' Name5=EString)?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Tool_Framework}
		//'Tool_Framework'
		//    ('Name5' Name5=EString)?
		public Group getGroup() { return cGroup; }
		
		//{Tool_Framework}
		public Action getTool_FrameworkAction_0() { return cTool_FrameworkAction_0; }
		
		//'Tool_Framework'
		public Keyword getTool_FrameworkKeyword_1() { return cTool_FrameworkKeyword_1; }
		
		//('Name5' Name5=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'Name5'
		public Keyword getName5Keyword_2_0() { return cName5Keyword_2_0; }
		
		//Name5=EString
		public Assignment getName5Assignment_2_1() { return cName5Assignment_2_1; }
		
		//EString
		public RuleCall getName5EStringParserRuleCall_2_1_0() { return cName5EStringParserRuleCall_2_1_0; }
	}
	public class EnvironmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Environment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnvironmentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEnvironmentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cKeyKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cKeyAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cKeyEStringParserRuleCall_2_1_0 = (RuleCall)cKeyAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cValueKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValueEStringParserRuleCall_3_1_0 = (RuleCall)cValueAssignment_3_1.eContents().get(0);
		
		//Environment returns Environment:
		//    {Environment}
		//    'Environment'
		//        ('Key' Key=EString)?
		//        ('Value' Value=EString)?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Environment}
		//'Environment'
		//    ('Key' Key=EString)?
		//    ('Value' Value=EString)?
		public Group getGroup() { return cGroup; }
		
		//{Environment}
		public Action getEnvironmentAction_0() { return cEnvironmentAction_0; }
		
		//'Environment'
		public Keyword getEnvironmentKeyword_1() { return cEnvironmentKeyword_1; }
		
		//('Key' Key=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'Key'
		public Keyword getKeyKeyword_2_0() { return cKeyKeyword_2_0; }
		
		//Key=EString
		public Assignment getKeyAssignment_2_1() { return cKeyAssignment_2_1; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_2_1_0() { return cKeyEStringParserRuleCall_2_1_0; }
		
		//('Value' Value=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Value'
		public Keyword getValueKeyword_3_0() { return cValueKeyword_3_0; }
		
		//Value=EString
		public Assignment getValueAssignment_3_1() { return cValueAssignment_3_1; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_3_1_0() { return cValueEStringParserRuleCall_3_1_0; }
	}
	public class PermissionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Permission");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPermissionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPermissionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cKeyKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cKeyAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cKeyEStringParserRuleCall_2_1_0 = (RuleCall)cKeyAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cValueKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValueEStringParserRuleCall_3_1_0 = (RuleCall)cValueAssignment_3_1.eContents().get(0);
		
		//Permission returns Permission:
		//    {Permission}
		//    'Permission'
		//        ('Key' Key=EString)?
		//        ('Value' Value=EString)?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Permission}
		//'Permission'
		//    ('Key' Key=EString)?
		//    ('Value' Value=EString)?
		public Group getGroup() { return cGroup; }
		
		//{Permission}
		public Action getPermissionAction_0() { return cPermissionAction_0; }
		
		//'Permission'
		public Keyword getPermissionKeyword_1() { return cPermissionKeyword_1; }
		
		//('Key' Key=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'Key'
		public Keyword getKeyKeyword_2_0() { return cKeyKeyword_2_0; }
		
		//Key=EString
		public Assignment getKeyAssignment_2_1() { return cKeyAssignment_2_1; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_2_1_0() { return cKeyEStringParserRuleCall_2_1_0; }
		
		//('Value' Value=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Value'
		public Keyword getValueKeyword_3_0() { return cValueKeyword_3_0; }
		
		//Value=EString
		public Assignment getValueAssignment_3_1() { return cValueAssignment_3_1; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_3_1_0() { return cValueEStringParserRuleCall_3_1_0; }
	}
	public class ParallelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Parallel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParallelAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cParallelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cJobKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cJobAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cJobJobParserRuleCall_2_1_0 = (RuleCall)cJobAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cJobAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cJobJobParserRuleCall_2_2_1_0 = (RuleCall)cJobAssignment_2_2_1.eContents().get(0);
		
		//Parallel returns Parallel:
		//    {Parallel}
		//    'Parallel'
		//        ('job'  job+=Job ( "," job+=Job)*  )?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Parallel}
		//'Parallel'
		//    ('job'  job+=Job ( "," job+=Job)*  )?
		public Group getGroup() { return cGroup; }
		
		//{Parallel}
		public Action getParallelAction_0() { return cParallelAction_0; }
		
		//'Parallel'
		public Keyword getParallelKeyword_1() { return cParallelKeyword_1; }
		
		//('job'  job+=Job ( "," job+=Job)*  )?
		public Group getGroup_2() { return cGroup_2; }
		
		//'job'
		public Keyword getJobKeyword_2_0() { return cJobKeyword_2_0; }
		
		//job+=Job
		public Assignment getJobAssignment_2_1() { return cJobAssignment_2_1; }
		
		//Job
		public RuleCall getJobJobParserRuleCall_2_1_0() { return cJobJobParserRuleCall_2_1_0; }
		
		//( "," job+=Job)*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//","
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//job+=Job
		public Assignment getJobAssignment_2_2_1() { return cJobAssignment_2_2_1; }
		
		//Job
		public RuleCall getJobJobParserRuleCall_2_2_1_0() { return cJobJobParserRuleCall_2_2_1_0; }
	}
	public class ArtifactElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Artifact");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cArtifactAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cArtifactKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cName3Keyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cName3Assignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cName3EStringParserRuleCall_2_1_0 = (RuleCall)cName3Assignment_2_1.eContents().get(0);
		
		//Artifact returns Artifact:
		//    {Artifact}
		//    'Artifact'
		//        ('Name3' Name3=EString)?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Artifact}
		//'Artifact'
		//    ('Name3' Name3=EString)?
		public Group getGroup() { return cGroup; }
		
		//{Artifact}
		public Action getArtifactAction_0() { return cArtifactAction_0; }
		
		//'Artifact'
		public Keyword getArtifactKeyword_1() { return cArtifactKeyword_1; }
		
		//('Name3' Name3=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'Name3'
		public Keyword getName3Keyword_2_0() { return cName3Keyword_2_0; }
		
		//Name3=EString
		public Assignment getName3Assignment_2_1() { return cName3Assignment_2_1; }
		
		//EString
		public RuleCall getName3EStringParserRuleCall_2_1_0() { return cName3EStringParserRuleCall_2_1_0; }
	}
	public class CommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Command");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCommandAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCommandKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cDescriptionKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDescriptionAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_2_1_0 = (RuleCall)cDescriptionAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cToolKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cToolAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cToolTool_FrameworkParserRuleCall_3_1_0 = (RuleCall)cToolAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cParametersKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cParametersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cParametersParametersParserRuleCall_4_1_0 = (RuleCall)cParametersAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cParametersAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cParametersParametersParserRuleCall_4_2_1_0 = (RuleCall)cParametersAssignment_4_2_1.eContents().get(0);
		
		//Command returns Command:
		//    {Command}
		//    'Command'
		//        ('Description' Description=EString)?
		//        ('tool' tool=Tool_Framework)?
		//        ('parameters'  parameters+=Parameters ( "," parameters+=Parameters)*  )?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Command}
		//'Command'
		//    ('Description' Description=EString)?
		//    ('tool' tool=Tool_Framework)?
		//    ('parameters'  parameters+=Parameters ( "," parameters+=Parameters)*  )?
		public Group getGroup() { return cGroup; }
		
		//{Command}
		public Action getCommandAction_0() { return cCommandAction_0; }
		
		//'Command'
		public Keyword getCommandKeyword_1() { return cCommandKeyword_1; }
		
		//('Description' Description=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'Description'
		public Keyword getDescriptionKeyword_2_0() { return cDescriptionKeyword_2_0; }
		
		//Description=EString
		public Assignment getDescriptionAssignment_2_1() { return cDescriptionAssignment_2_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_2_1_0() { return cDescriptionEStringParserRuleCall_2_1_0; }
		
		//('tool' tool=Tool_Framework)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'tool'
		public Keyword getToolKeyword_3_0() { return cToolKeyword_3_0; }
		
		//tool=Tool_Framework
		public Assignment getToolAssignment_3_1() { return cToolAssignment_3_1; }
		
		//Tool_Framework
		public RuleCall getToolTool_FrameworkParserRuleCall_3_1_0() { return cToolTool_FrameworkParserRuleCall_3_1_0; }
		
		//('parameters'  parameters+=Parameters ( "," parameters+=Parameters)*  )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'parameters'
		public Keyword getParametersKeyword_4_0() { return cParametersKeyword_4_0; }
		
		//parameters+=Parameters
		public Assignment getParametersAssignment_4_1() { return cParametersAssignment_4_1; }
		
		//Parameters
		public RuleCall getParametersParametersParserRuleCall_4_1_0() { return cParametersParametersParserRuleCall_4_1_0; }
		
		//( "," parameters+=Parameters)*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//parameters+=Parameters
		public Assignment getParametersAssignment_4_2_1() { return cParametersAssignment_4_2_1; }
		
		//Parameters
		public RuleCall getParametersParametersParserRuleCall_4_2_1_0() { return cParametersParametersParserRuleCall_4_2_1_0; }
	}
	public class IfThenElseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.IfThenElse");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIfThenElseAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cIfThenElseKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cConditionKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cConditionAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cConditionEStringParserRuleCall_2_1_0 = (RuleCall)cConditionAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIfKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIfAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIfCommandParserRuleCall_3_1_0 = (RuleCall)cIfAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cIfAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cIfCommandParserRuleCall_3_2_1_0 = (RuleCall)cIfAssignment_3_2_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cElseKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cElseAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cElseCommandParserRuleCall_4_1_0 = (RuleCall)cElseAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cElseAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cElseCommandParserRuleCall_4_2_1_0 = (RuleCall)cElseAssignment_4_2_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cIfelseKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cIfelseAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cIfelseIfThenElseParserRuleCall_5_1_0 = (RuleCall)cIfelseAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cIfelseAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cIfelseIfThenElseParserRuleCall_5_2_1_0 = (RuleCall)cIfelseAssignment_5_2_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cElseifKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cElseifAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cElseifIfThenElseParserRuleCall_6_1_0 = (RuleCall)cElseifAssignment_6_1.eContents().get(0);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cElseifAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final RuleCall cElseifIfThenElseParserRuleCall_6_2_1_0 = (RuleCall)cElseifAssignment_6_2_1.eContents().get(0);
		
		//IfThenElse returns IfThenElse:
		//    {IfThenElse}
		//    'IfThenElse'
		//        ('Condition' Condition=EString)?
		//        ('if'  if+=Command ( "," if+=Command)*  )?
		//        ('else'  else+=Command ( "," else+=Command)*  )?
		//        ('ifelse'  ifelse+=IfThenElse ( "," ifelse+=IfThenElse)*  )?
		//        ('elseif'  elseif+=IfThenElse ( "," elseif+=IfThenElse)*  )?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{IfThenElse}
		//'IfThenElse'
		//    ('Condition' Condition=EString)?
		//    ('if'  if+=Command ( "," if+=Command)*  )?
		//    ('else'  else+=Command ( "," else+=Command)*  )?
		//    ('ifelse'  ifelse+=IfThenElse ( "," ifelse+=IfThenElse)*  )?
		//    ('elseif'  elseif+=IfThenElse ( "," elseif+=IfThenElse)*  )?
		public Group getGroup() { return cGroup; }
		
		//{IfThenElse}
		public Action getIfThenElseAction_0() { return cIfThenElseAction_0; }
		
		//'IfThenElse'
		public Keyword getIfThenElseKeyword_1() { return cIfThenElseKeyword_1; }
		
		//('Condition' Condition=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'Condition'
		public Keyword getConditionKeyword_2_0() { return cConditionKeyword_2_0; }
		
		//Condition=EString
		public Assignment getConditionAssignment_2_1() { return cConditionAssignment_2_1; }
		
		//EString
		public RuleCall getConditionEStringParserRuleCall_2_1_0() { return cConditionEStringParserRuleCall_2_1_0; }
		
		//('if'  if+=Command ( "," if+=Command)*  )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'if'
		public Keyword getIfKeyword_3_0() { return cIfKeyword_3_0; }
		
		//if+=Command
		public Assignment getIfAssignment_3_1() { return cIfAssignment_3_1; }
		
		//Command
		public RuleCall getIfCommandParserRuleCall_3_1_0() { return cIfCommandParserRuleCall_3_1_0; }
		
		//( "," if+=Command)*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//if+=Command
		public Assignment getIfAssignment_3_2_1() { return cIfAssignment_3_2_1; }
		
		//Command
		public RuleCall getIfCommandParserRuleCall_3_2_1_0() { return cIfCommandParserRuleCall_3_2_1_0; }
		
		//('else'  else+=Command ( "," else+=Command)*  )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'else'
		public Keyword getElseKeyword_4_0() { return cElseKeyword_4_0; }
		
		//else+=Command
		public Assignment getElseAssignment_4_1() { return cElseAssignment_4_1; }
		
		//Command
		public RuleCall getElseCommandParserRuleCall_4_1_0() { return cElseCommandParserRuleCall_4_1_0; }
		
		//( "," else+=Command)*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//else+=Command
		public Assignment getElseAssignment_4_2_1() { return cElseAssignment_4_2_1; }
		
		//Command
		public RuleCall getElseCommandParserRuleCall_4_2_1_0() { return cElseCommandParserRuleCall_4_2_1_0; }
		
		//('ifelse'  ifelse+=IfThenElse ( "," ifelse+=IfThenElse)*  )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'ifelse'
		public Keyword getIfelseKeyword_5_0() { return cIfelseKeyword_5_0; }
		
		//ifelse+=IfThenElse
		public Assignment getIfelseAssignment_5_1() { return cIfelseAssignment_5_1; }
		
		//IfThenElse
		public RuleCall getIfelseIfThenElseParserRuleCall_5_1_0() { return cIfelseIfThenElseParserRuleCall_5_1_0; }
		
		//( "," ifelse+=IfThenElse)*
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//","
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }
		
		//ifelse+=IfThenElse
		public Assignment getIfelseAssignment_5_2_1() { return cIfelseAssignment_5_2_1; }
		
		//IfThenElse
		public RuleCall getIfelseIfThenElseParserRuleCall_5_2_1_0() { return cIfelseIfThenElseParserRuleCall_5_2_1_0; }
		
		//('elseif'  elseif+=IfThenElse ( "," elseif+=IfThenElse)*  )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'elseif'
		public Keyword getElseifKeyword_6_0() { return cElseifKeyword_6_0; }
		
		//elseif+=IfThenElse
		public Assignment getElseifAssignment_6_1() { return cElseifAssignment_6_1; }
		
		//IfThenElse
		public RuleCall getElseifIfThenElseParserRuleCall_6_1_0() { return cElseifIfThenElseParserRuleCall_6_1_0; }
		
		//( "," elseif+=IfThenElse)*
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//","
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }
		
		//elseif+=IfThenElse
		public Assignment getElseifAssignment_6_2_1() { return cElseifAssignment_6_2_1; }
		
		//IfThenElse
		public RuleCall getElseifIfThenElseParserRuleCall_6_2_1_0() { return cElseifIfThenElseParserRuleCall_6_2_1_0; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class ParametersElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Parameters");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParametersAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cParametersKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cParameterKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cParameterAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cParameterEStringParserRuleCall_2_1_0 = (RuleCall)cParameterAssignment_2_1.eContents().get(0);
		
		//Parameters returns Parameters:
		//    {Parameters}
		//    'Parameters'
		//        ('Parameter' Parameter=EString)?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Parameters}
		//'Parameters'
		//    ('Parameter' Parameter=EString)?
		public Group getGroup() { return cGroup; }
		
		//{Parameters}
		public Action getParametersAction_0() { return cParametersAction_0; }
		
		//'Parameters'
		public Keyword getParametersKeyword_1() { return cParametersKeyword_1; }
		
		//('Parameter' Parameter=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'Parameter'
		public Keyword getParameterKeyword_2_0() { return cParameterKeyword_2_0; }
		
		//Parameter=EString
		public Assignment getParameterAssignment_2_1() { return cParameterAssignment_2_1; }
		
		//EString
		public RuleCall getParameterEStringParserRuleCall_2_1_0() { return cParameterEStringParserRuleCall_2_1_0; }
	}
	
	
	private final PipelineElements pPipeline;
	private final WhenElements pWhen;
	private final JobElements pJob;
	private final EStringElements pEString;
	private final Tool_FrameworkElements pTool_Framework;
	private final EnvironmentElements pEnvironment;
	private final PermissionElements pPermission;
	private final ParallelElements pParallel;
	private final ArtifactElements pArtifact;
	private final CommandElements pCommand;
	private final IfThenElseElements pIfThenElse;
	private final EBooleanElements pEBoolean;
	private final ParametersElements pParameters;
	private final TerminalRule tNAME;
	private final TerminalRule tNEWLINE;
	private final TerminalRule tBEGIN;
	private final TerminalRule tEND;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pPipeline = new PipelineElements();
		this.pWhen = new WhenElements();
		this.pJob = new JobElements();
		this.pEString = new EStringElements();
		this.pTool_Framework = new Tool_FrameworkElements();
		this.pEnvironment = new EnvironmentElements();
		this.pPermission = new PermissionElements();
		this.pParallel = new ParallelElements();
		this.pArtifact = new ArtifactElements();
		this.pCommand = new CommandElements();
		this.pIfThenElse = new IfThenElseElements();
		this.pEBoolean = new EBooleanElements();
		this.pParameters = new ParametersElements();
		this.tNAME = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.NAME");
		this.tNEWLINE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.NEWLINE");
		this.tBEGIN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.BEGIN");
		this.tEND = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.END");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Pipeline returns Pipeline:
	//    {Pipeline}
	//    'PIPELINE'
	//    (
	//        (NAME Name0=EString?) |
	//        ('when'  when+=When ( "," when+=When)*  ) |
	//        ('job'  job+=Job ( "," job+=Job)*  )? |
	//        ('pipeline_tool_framework'  pipeline_tool_framework+=Tool_Framework ( "," pipeline_tool_framework+=Tool_Framework)*  )? |
	//        ('pipeline_environment'  pipeline_environment+=Environment ( "," pipeline_environment+=Environment)*  )? |
	//        ('permission'  permission+=Permission ( "," permission+=Permission)*  )? |
	//        ('parallel'  parallel+=Parallel ( "," parallel+=Parallel)*  )?
	//    );
	public PipelineElements getPipelineAccess() {
		return pPipeline;
	}
	
	public ParserRule getPipelineRule() {
		return getPipelineAccess().getRule();
	}
	
	//When returns When:
	//    {When}
	//    Name4=EString
	//        ('Trigger' Trigger=EString)?
	//        ('Timer' Timer=EString)?
	//    ;
	public WhenElements getWhenAccess() {
		return pWhen;
	}
	
	public ParserRule getWhenRule() {
		return getWhenAccess().getRule();
	}
	
	//Job returns Job:
	//    {Job}
	//    (Allow_faillure?='Allow_faillure')?
	//    'Job'
	//        ('Name1' Name1=EString)?
	//        ('Description1' Description1=EString)?
	//        ('output' '(' output+=[Artifact|EString] ( "," output+=[Artifact|EString])* ')' )?
	//        ('tool_framework_job'  tool_framework_job+=Tool_Framework ( "," tool_framework_job+=Tool_Framework)*  )?
	//        ('command'  command+=Command ( "," command+=Command)*  )?
	//        ('ifthenelse'  ifthenelse+=IfThenElse ( "," ifthenelse+=IfThenElse)*  )?
	//        ('input'  input+=Artifact ( "," input+=Artifact)*  )?
	//        ('environment'  environment+=Environment ( "," environment+=Environment)*  )?
	//        ('permission'  permission+=Permission ( "," permission+=Permission)*  )?
	//    ;
	public JobElements getJobAccess() {
		return pJob;
	}
	
	public ParserRule getJobRule() {
		return getJobAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Tool_Framework returns Tool_Framework:
	//    {Tool_Framework}
	//    'Tool_Framework'
	//        ('Name5' Name5=EString)?
	//    ;
	public Tool_FrameworkElements getTool_FrameworkAccess() {
		return pTool_Framework;
	}
	
	public ParserRule getTool_FrameworkRule() {
		return getTool_FrameworkAccess().getRule();
	}
	
	//Environment returns Environment:
	//    {Environment}
	//    'Environment'
	//        ('Key' Key=EString)?
	//        ('Value' Value=EString)?
	//    ;
	public EnvironmentElements getEnvironmentAccess() {
		return pEnvironment;
	}
	
	public ParserRule getEnvironmentRule() {
		return getEnvironmentAccess().getRule();
	}
	
	//Permission returns Permission:
	//    {Permission}
	//    'Permission'
	//        ('Key' Key=EString)?
	//        ('Value' Value=EString)?
	//    ;
	public PermissionElements getPermissionAccess() {
		return pPermission;
	}
	
	public ParserRule getPermissionRule() {
		return getPermissionAccess().getRule();
	}
	
	//Parallel returns Parallel:
	//    {Parallel}
	//    'Parallel'
	//        ('job'  job+=Job ( "," job+=Job)*  )?
	//    ;
	public ParallelElements getParallelAccess() {
		return pParallel;
	}
	
	public ParserRule getParallelRule() {
		return getParallelAccess().getRule();
	}
	
	//Artifact returns Artifact:
	//    {Artifact}
	//    'Artifact'
	//        ('Name3' Name3=EString)?
	//    ;
	public ArtifactElements getArtifactAccess() {
		return pArtifact;
	}
	
	public ParserRule getArtifactRule() {
		return getArtifactAccess().getRule();
	}
	
	//Command returns Command:
	//    {Command}
	//    'Command'
	//        ('Description' Description=EString)?
	//        ('tool' tool=Tool_Framework)?
	//        ('parameters'  parameters+=Parameters ( "," parameters+=Parameters)*  )?
	//    ;
	public CommandElements getCommandAccess() {
		return pCommand;
	}
	
	public ParserRule getCommandRule() {
		return getCommandAccess().getRule();
	}
	
	//IfThenElse returns IfThenElse:
	//    {IfThenElse}
	//    'IfThenElse'
	//        ('Condition' Condition=EString)?
	//        ('if'  if+=Command ( "," if+=Command)*  )?
	//        ('else'  else+=Command ( "," else+=Command)*  )?
	//        ('ifelse'  ifelse+=IfThenElse ( "," ifelse+=IfThenElse)*  )?
	//        ('elseif'  elseif+=IfThenElse ( "," elseif+=IfThenElse)*  )?
	//    ;
	public IfThenElseElements getIfThenElseAccess() {
		return pIfThenElse;
	}
	
	public ParserRule getIfThenElseRule() {
		return getIfThenElseAccess().getRule();
	}
	
	//EBoolean returns ecore::EBoolean:
	//    'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//Parameters returns Parameters:
	//    {Parameters}
	//    'Parameters'
	//        ('Parameter' Parameter=EString)?
	//    ;
	public ParametersElements getParametersAccess() {
		return pParameters;
	}
	
	public ParserRule getParametersRule() {
		return getParametersAccess().getRule();
	}
	
	//terminal NAME: "Name:" | "name:" | "- name:" | "- name : " | "- id:";
	public TerminalRule getNAMERule() {
		return tNAME;
	}
	
	//terminal NEWLINE:
	//// New line on DOS or Unix
	//    '\r'? '\n';
	public TerminalRule getNEWLINERule() {
		return tNEWLINE;
	}
	
	//terminal BEGIN: 'synthetic:BEGIN';
	public TerminalRule getBEGINRule() {
		return tBEGIN;
	}
	
	//  // increase indentation
	//terminal END: 'synthetic:END';
	public TerminalRule getENDRule() {
		return tEND;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
