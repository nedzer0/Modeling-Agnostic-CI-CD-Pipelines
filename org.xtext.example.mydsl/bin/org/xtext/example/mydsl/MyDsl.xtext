// automatically generated by Xtext
grammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals

import "http://www.example.org/devOps" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Pipeline returns Pipeline:
	{Pipeline}
	(
		(NAME Name0=EString NEWLINE?) |
		('when' (BEGIN (when+=When)*  END) NEWLINE?) |
		(JOB_KEYWORD (BEGIN (job+=Job)+ END) NEWLINE?) |
		('pipeline_tool_framework'  pipeline_tool_framework+=Tool_Framework ( "," pipeline_tool_framework+=Tool_Framework)*  )? |
		(ENV (BEGIN (pipeline_environment+=Environment)* END) NEWLINE?) |
		('permission'  permission+=Permission ( "," permission+=Permission)*  )? |
		('parallel'  parallel+=Parallel ( "," parallel+=Parallel)*  )?
	);


When returns When:
	{When}
	Name4=EString
	
		('Trigger' Trigger=EString)?
		('Timer' Timer=EString)?
	;

Job returns Job:
	{Job}
	(Allow_faillure?='Allow_faillure')?
	'Job'
	
		('Name1' Name1=EString)?
		('Description1' Description1=EString)?
		('output' '(' output+=[Artifact|EString] ( "," output+=[Artifact|EString])* ')' )?
		('tool_framework_job'  tool_framework_job+=Tool_Framework ( "," tool_framework_job+=Tool_Framework)*  )?
		('command'  command+=Command ( "," command+=Command)*  )?
		('ifthenelse'  ifthenelse+=IfThenElse ( "," ifthenelse+=IfThenElse)*  )?
		('input'  input+=Artifact ( "," input+=Artifact)*  )?
		('environment'  environment+=Environment ( "," environment+=Environment)*  )?
		('permission'  permission+=Permission ( "," permission+=Permission)*  )?
	;

EString returns ecore::EString:
	STRING | ID;

Tool_Framework returns Tool_Framework:
	{Tool_Framework}
	'Tool_Framework'
	
		('Name5' Name5=EString)?
	;

Environment returns Environment:
	{Environment}
		(Key=EString CHARACTERS Value=EString)?
	;

Permission returns Permission:
	{Permission}
	'Permission'
	
		('Key' Key=EString)?
		('Value' Value=EString)?
	;

Parallel returns Parallel:
	{Parallel}
	'Parallel'
	
		('job'  job+=Job ( "," job+=Job)*  )?
	;

Artifact returns Artifact:
	{Artifact}
	'Artifact'
	
		('Name3' Name3=EString)?
	;

Command returns Command:
	{Command}
	'Command'
	
		('Description' Description=EString)?
		('tool' tool=Tool_Framework)?
		('parameters'  parameters+=Parameters ( "," parameters+=Parameters)*  )?
	;

IfThenElse returns IfThenElse:
	{IfThenElse}
	'IfThenElse'
	
		('Condition' Condition=EString)?
		('if'  if+=Command ( "," if+=Command)*  )?
		('else'  else+=Command ( "," else+=Command)*  )?
		('ifelse'  ifelse+=IfThenElse ( "," ifelse+=IfThenElse)*  )?
		('elseif'  elseif+=IfThenElse ( "," elseif+=IfThenElse)*  )?
	;

EBoolean returns ecore::EBoolean:
	'true' | 'false';

Parameters returns Parameters:
	{Parameters}
	'Parameters'
	
		('Parameter' Parameter=EString)?
	;

terminal TRIGGER_WORDS:  ( "push" | "pull_request" | "check_suite" 
	| "create" | "delete" | "deployment" | "deployment_status" | "discussion" | "fork"
	| "gollum" | "issue_comment" | "release" | "schedule" | "issues" | "workflow_dispatch" | "merge_group:"|"repository_dispatch");


terminal NAME: "Name:" | "name:" | "- name:" | "- name : " | "- id:";

terminal ENV: "env:" | "environment:";

terminal JOB_KEYWORD: "jobs:" | "steps:" | "stages:";

terminal TRIGGERS: TRIGGER_WORDS":";

terminal HTTP: "https:" | "http:";

terminal CHARACTERS: (';' | '+' | '!' | '&' | '(' | ')' | '=' | '>' | '<'  | ','| '*' | '{' | '}' | '.' | '-' | '\\' | '/' | '%' | '$'  | '@' | "[" | "]" | "_" | '"'  | "'" | 'A'..'Z' | 'a'..'z' ) ;

terminal ALPHANUMERICSTRING:  (HTTP | CHARACTERS | INT)+ | "- cron " | "- cron" | "- master" | "- master " | "- main";

terminal KEY: ALPHANUMERICSTRING":";

terminal NEWLINE:
// New line on DOS or Unix 
    '\r'? '\n';
    
terminal BEGIN: 'synthetic:BEGIN';  // increase indentation
terminal END: 'synthetic:END';      // decrease indentation