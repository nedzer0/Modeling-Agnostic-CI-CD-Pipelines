/*
 * generated by Xtext 2.34.0
 */
package org.xtext.example.jenkins.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class JenkinsGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class PipelineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Pipeline");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPipelineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cAgentsAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cAgentsAgentParserRuleCall_2_0_0 = (RuleCall)cAgentsAssignment_2_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cOptionsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cOptionsOptionParserRuleCall_3_0_0 = (RuleCall)cOptionsAssignment_3_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cTriggersAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cTriggersTriggerParserRuleCall_4_0_0 = (RuleCall)cTriggersAssignment_4_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cParameter_directivesAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cParameter_directivesParameter_DirectiveParserRuleCall_5_0_0 = (RuleCall)cParameter_directivesAssignment_5_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cEnvironmentsAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cEnvironmentsEnvironmentParserRuleCall_6_0_0 = (RuleCall)cEnvironmentsAssignment_6_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Assignment cToolsAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final RuleCall cToolsToolParserRuleCall_7_0_0 = (RuleCall)cToolsAssignment_7_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_7_1 = (RuleCall)cGroup_7.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Assignment cStagesAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final RuleCall cStagesStageParserRuleCall_8_0_0 = (RuleCall)cStagesAssignment_8_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_8_1 = (RuleCall)cGroup_8.eContents().get(1);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Assignment cPostAssignment_9_0 = (Assignment)cGroup_9.eContents().get(0);
		private final RuleCall cPostPostParserRuleCall_9_0_0 = (RuleCall)cPostAssignment_9_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_9_1 = (RuleCall)cGroup_9.eContents().get(1);
		
		//Pipeline returns Pipeline:
		//    'Pipeline' NEWLINE
		//    ((agents+=Agent)+ NEWLINE?)
		//    ((options+=Option)+ NEWLINE?)?
		//    ((triggers+=Trigger)+ NEWLINE?)?
		//    ((parameter_directives+=Parameter_Directive)+ NEWLINE?)?
		//    ((environments+=Environment)+ NEWLINE?)?
		//    ((tools+=Tool)+ NEWLINE?)?
		//    ((stages+=Stage)+ NEWLINE?)
		//    ((post+=Post)+ NEWLINE?)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Pipeline' NEWLINE
		//((agents+=Agent)+ NEWLINE?)
		//((options+=Option)+ NEWLINE?)?
		//((triggers+=Trigger)+ NEWLINE?)?
		//((parameter_directives+=Parameter_Directive)+ NEWLINE?)?
		//((environments+=Environment)+ NEWLINE?)?
		//((tools+=Tool)+ NEWLINE?)?
		//((stages+=Stage)+ NEWLINE?)
		//((post+=Post)+ NEWLINE?)?
		public Group getGroup() { return cGroup; }
		
		//'Pipeline'
		public Keyword getPipelineKeyword_0() { return cPipelineKeyword_0; }
		
		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_1() { return cNEWLINETerminalRuleCall_1; }
		
		//((agents+=Agent)+ NEWLINE?)
		public Group getGroup_2() { return cGroup_2; }
		
		//(agents+=Agent)+
		public Assignment getAgentsAssignment_2_0() { return cAgentsAssignment_2_0; }
		
		//Agent
		public RuleCall getAgentsAgentParserRuleCall_2_0_0() { return cAgentsAgentParserRuleCall_2_0_0; }
		
		//NEWLINE?
		public RuleCall getNEWLINETerminalRuleCall_2_1() { return cNEWLINETerminalRuleCall_2_1; }
		
		//((options+=Option)+ NEWLINE?)?
		public Group getGroup_3() { return cGroup_3; }
		
		//(options+=Option)+
		public Assignment getOptionsAssignment_3_0() { return cOptionsAssignment_3_0; }
		
		//Option
		public RuleCall getOptionsOptionParserRuleCall_3_0_0() { return cOptionsOptionParserRuleCall_3_0_0; }
		
		//NEWLINE?
		public RuleCall getNEWLINETerminalRuleCall_3_1() { return cNEWLINETerminalRuleCall_3_1; }
		
		//((triggers+=Trigger)+ NEWLINE?)?
		public Group getGroup_4() { return cGroup_4; }
		
		//(triggers+=Trigger)+
		public Assignment getTriggersAssignment_4_0() { return cTriggersAssignment_4_0; }
		
		//Trigger
		public RuleCall getTriggersTriggerParserRuleCall_4_0_0() { return cTriggersTriggerParserRuleCall_4_0_0; }
		
		//NEWLINE?
		public RuleCall getNEWLINETerminalRuleCall_4_1() { return cNEWLINETerminalRuleCall_4_1; }
		
		//((parameter_directives+=Parameter_Directive)+ NEWLINE?)?
		public Group getGroup_5() { return cGroup_5; }
		
		//(parameter_directives+=Parameter_Directive)+
		public Assignment getParameter_directivesAssignment_5_0() { return cParameter_directivesAssignment_5_0; }
		
		//Parameter_Directive
		public RuleCall getParameter_directivesParameter_DirectiveParserRuleCall_5_0_0() { return cParameter_directivesParameter_DirectiveParserRuleCall_5_0_0; }
		
		//NEWLINE?
		public RuleCall getNEWLINETerminalRuleCall_5_1() { return cNEWLINETerminalRuleCall_5_1; }
		
		//((environments+=Environment)+ NEWLINE?)?
		public Group getGroup_6() { return cGroup_6; }
		
		//(environments+=Environment)+
		public Assignment getEnvironmentsAssignment_6_0() { return cEnvironmentsAssignment_6_0; }
		
		//Environment
		public RuleCall getEnvironmentsEnvironmentParserRuleCall_6_0_0() { return cEnvironmentsEnvironmentParserRuleCall_6_0_0; }
		
		//NEWLINE?
		public RuleCall getNEWLINETerminalRuleCall_6_1() { return cNEWLINETerminalRuleCall_6_1; }
		
		//((tools+=Tool)+ NEWLINE?)?
		public Group getGroup_7() { return cGroup_7; }
		
		//(tools+=Tool)+
		public Assignment getToolsAssignment_7_0() { return cToolsAssignment_7_0; }
		
		//Tool
		public RuleCall getToolsToolParserRuleCall_7_0_0() { return cToolsToolParserRuleCall_7_0_0; }
		
		//NEWLINE?
		public RuleCall getNEWLINETerminalRuleCall_7_1() { return cNEWLINETerminalRuleCall_7_1; }
		
		//((stages+=Stage)+ NEWLINE?)
		public Group getGroup_8() { return cGroup_8; }
		
		//(stages+=Stage)+
		public Assignment getStagesAssignment_8_0() { return cStagesAssignment_8_0; }
		
		//Stage
		public RuleCall getStagesStageParserRuleCall_8_0_0() { return cStagesStageParserRuleCall_8_0_0; }
		
		//NEWLINE?
		public RuleCall getNEWLINETerminalRuleCall_8_1() { return cNEWLINETerminalRuleCall_8_1; }
		
		//((post+=Post)+ NEWLINE?)?
		public Group getGroup_9() { return cGroup_9; }
		
		//(post+=Post)+
		public Assignment getPostAssignment_9_0() { return cPostAssignment_9_0; }
		
		//Post
		public RuleCall getPostPostParserRuleCall_9_0_0() { return cPostPostParserRuleCall_9_0_0; }
		
		//NEWLINE?
		public RuleCall getNEWLINETerminalRuleCall_9_1() { return cNEWLINETerminalRuleCall_9_1; }
	}
	public class Parameter_DirectiveElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Parameter_Directive");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStringParamParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTextParamParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cChoiceParamParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPasswordParamParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cBooleanParamParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//Parameter_Directive returns Parameter_Directive:
		//    StringParam | TextParam | ChoiceParam | PasswordParam | BooleanParam;
		@Override public ParserRule getRule() { return rule; }
		
		//StringParam | TextParam | ChoiceParam | PasswordParam | BooleanParam
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//StringParam
		public RuleCall getStringParamParserRuleCall_0() { return cStringParamParserRuleCall_0; }
		
		//TextParam
		public RuleCall getTextParamParserRuleCall_1() { return cTextParamParserRuleCall_1; }
		
		//ChoiceParam
		public RuleCall getChoiceParamParserRuleCall_2() { return cChoiceParamParserRuleCall_2; }
		
		//PasswordParam
		public RuleCall getPasswordParamParserRuleCall_3() { return cPasswordParamParserRuleCall_3; }
		
		//BooleanParam
		public RuleCall getBooleanParamParserRuleCall_4() { return cBooleanParamParserRuleCall_4; }
	}
	public class AgentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Agent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNodeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAnyParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cNoneParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cDockerfileParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cDockerParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cLabelParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//Agent returns Agent:
		//    Node | Any | None | Dockerfile | Docker | Label;
		@Override public ParserRule getRule() { return rule; }
		
		//Node | Any | None | Dockerfile | Docker | Label
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Node
		public RuleCall getNodeParserRuleCall_0() { return cNodeParserRuleCall_0; }
		
		//Any
		public RuleCall getAnyParserRuleCall_1() { return cAnyParserRuleCall_1; }
		
		//None
		public RuleCall getNoneParserRuleCall_2() { return cNoneParserRuleCall_2; }
		
		//Dockerfile
		public RuleCall getDockerfileParserRuleCall_3() { return cDockerfileParserRuleCall_3; }
		
		//Docker
		public RuleCall getDockerParserRuleCall_4() { return cDockerParserRuleCall_4; }
		
		//Label
		public RuleCall getLabelParserRuleCall_5() { return cLabelParserRuleCall_5; }
	}
	public class TriggerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Trigger");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCronParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPollSCMParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cUpstreamParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Trigger returns Trigger:
		//    Cron | PollSCM | Upstream;
		@Override public ParserRule getRule() { return rule; }
		
		//Cron | PollSCM | Upstream
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Cron
		public RuleCall getCronParserRuleCall_0() { return cCronParserRuleCall_0; }
		
		//PollSCM
		public RuleCall getPollSCMParserRuleCall_1() { return cPollSCMParserRuleCall_1; }
		
		//Upstream
		public RuleCall getUpstreamParserRuleCall_2() { return cUpstreamParserRuleCall_2; }
	}
	public class OptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Option");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBuildDiscarderParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCheckoutToSubdirectoryParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSkipStagesAfterUnstableParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cSkipDefaultCheckoutParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cRetryParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cQuietPeriodParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cPreserveStashesParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cTimeoutParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cParallelsAlwaysFailFastParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cTimestampsParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cDisableRestartFromStageParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cDisableResumeParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cOverrideIndexTriggersParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cNewContainerPerStageParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cDisableConcurrentBuildsParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		
		//Option returns Option:
		//    BuildDiscarder | CheckoutToSubdirectory | SkipStagesAfterUnstable | SkipDefaultCheckout | Retry | QuietPeriod | PreserveStashes | Timeout | ParallelsAlwaysFailFast | Timestamps | DisableRestartFromStage | DisableResume | OverrideIndexTriggers | NewContainerPerStage | DisableConcurrentBuilds;
		@Override public ParserRule getRule() { return rule; }
		
		//BuildDiscarder | CheckoutToSubdirectory | SkipStagesAfterUnstable | SkipDefaultCheckout | Retry | QuietPeriod | PreserveStashes | Timeout | ParallelsAlwaysFailFast | Timestamps | DisableRestartFromStage | DisableResume | OverrideIndexTriggers | NewContainerPerStage | DisableConcurrentBuilds
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BuildDiscarder
		public RuleCall getBuildDiscarderParserRuleCall_0() { return cBuildDiscarderParserRuleCall_0; }
		
		//CheckoutToSubdirectory
		public RuleCall getCheckoutToSubdirectoryParserRuleCall_1() { return cCheckoutToSubdirectoryParserRuleCall_1; }
		
		//SkipStagesAfterUnstable
		public RuleCall getSkipStagesAfterUnstableParserRuleCall_2() { return cSkipStagesAfterUnstableParserRuleCall_2; }
		
		//SkipDefaultCheckout
		public RuleCall getSkipDefaultCheckoutParserRuleCall_3() { return cSkipDefaultCheckoutParserRuleCall_3; }
		
		//Retry
		public RuleCall getRetryParserRuleCall_4() { return cRetryParserRuleCall_4; }
		
		//QuietPeriod
		public RuleCall getQuietPeriodParserRuleCall_5() { return cQuietPeriodParserRuleCall_5; }
		
		//PreserveStashes
		public RuleCall getPreserveStashesParserRuleCall_6() { return cPreserveStashesParserRuleCall_6; }
		
		//Timeout
		public RuleCall getTimeoutParserRuleCall_7() { return cTimeoutParserRuleCall_7; }
		
		//ParallelsAlwaysFailFast
		public RuleCall getParallelsAlwaysFailFastParserRuleCall_8() { return cParallelsAlwaysFailFastParserRuleCall_8; }
		
		//Timestamps
		public RuleCall getTimestampsParserRuleCall_9() { return cTimestampsParserRuleCall_9; }
		
		//DisableRestartFromStage
		public RuleCall getDisableRestartFromStageParserRuleCall_10() { return cDisableRestartFromStageParserRuleCall_10; }
		
		//DisableResume
		public RuleCall getDisableResumeParserRuleCall_11() { return cDisableResumeParserRuleCall_11; }
		
		//OverrideIndexTriggers
		public RuleCall getOverrideIndexTriggersParserRuleCall_12() { return cOverrideIndexTriggersParserRuleCall_12; }
		
		//NewContainerPerStage
		public RuleCall getNewContainerPerStageParserRuleCall_13() { return cNewContainerPerStageParserRuleCall_13; }
		
		//DisableConcurrentBuilds
		public RuleCall getDisableConcurrentBuildsParserRuleCall_14() { return cDisableConcurrentBuildsParserRuleCall_14; }
	}
	public class WhenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.When");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBuildingTagParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBranchParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cChangelogParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cTriggeredByParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cExpressionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cChangeSetParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cNotParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cAnyOfParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cTagParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cWhen_EnvParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cAllOfParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cEqualsParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cChangeRequestParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		
		//When returns When:
		//    BuildingTag | Branch | Changelog | TriggeredBy | Expression | ChangeSet | Not | AnyOf | Tag | When_Env | AllOf | Equals | ChangeRequest;
		@Override public ParserRule getRule() { return rule; }
		
		//BuildingTag | Branch | Changelog | TriggeredBy | Expression | ChangeSet | Not | AnyOf | Tag | When_Env | AllOf | Equals | ChangeRequest
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BuildingTag
		public RuleCall getBuildingTagParserRuleCall_0() { return cBuildingTagParserRuleCall_0; }
		
		//Branch
		public RuleCall getBranchParserRuleCall_1() { return cBranchParserRuleCall_1; }
		
		//Changelog
		public RuleCall getChangelogParserRuleCall_2() { return cChangelogParserRuleCall_2; }
		
		//TriggeredBy
		public RuleCall getTriggeredByParserRuleCall_3() { return cTriggeredByParserRuleCall_3; }
		
		//Expression
		public RuleCall getExpressionParserRuleCall_4() { return cExpressionParserRuleCall_4; }
		
		//ChangeSet
		public RuleCall getChangeSetParserRuleCall_5() { return cChangeSetParserRuleCall_5; }
		
		//Not
		public RuleCall getNotParserRuleCall_6() { return cNotParserRuleCall_6; }
		
		//AnyOf
		public RuleCall getAnyOfParserRuleCall_7() { return cAnyOfParserRuleCall_7; }
		
		//Tag
		public RuleCall getTagParserRuleCall_8() { return cTagParserRuleCall_8; }
		
		//When_Env
		public RuleCall getWhen_EnvParserRuleCall_9() { return cWhen_EnvParserRuleCall_9; }
		
		//AllOf
		public RuleCall getAllOfParserRuleCall_10() { return cAllOfParserRuleCall_10; }
		
		//Equals
		public RuleCall getEqualsParserRuleCall_11() { return cEqualsParserRuleCall_11; }
		
		//ChangeRequest
		public RuleCall getChangeRequestParserRuleCall_12() { return cChangeRequestParserRuleCall_12; }
	}
	public class StageOptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.StageOption");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSkipDefaultCheckoutParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRetryParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTimeoutParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cTimestampsParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//StageOption returns StageOption:
		//    SkipDefaultCheckout | Retry | Timeout | Timestamps;
		@Override public ParserRule getRule() { return rule; }
		
		//SkipDefaultCheckout | Retry | Timeout | Timestamps
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SkipDefaultCheckout
		public RuleCall getSkipDefaultCheckoutParserRuleCall_0() { return cSkipDefaultCheckoutParserRuleCall_0; }
		
		//Retry
		public RuleCall getRetryParserRuleCall_1() { return cRetryParserRuleCall_1; }
		
		//Timeout
		public RuleCall getTimeoutParserRuleCall_2() { return cTimeoutParserRuleCall_2; }
		
		//Timestamps
		public RuleCall getTimestampsParserRuleCall_3() { return cTimestampsParserRuleCall_3; }
	}
	public class EnvironmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Environment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnvironmentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cKeyKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cKeyAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cKeyEStringParserRuleCall_1_2_0 = (RuleCall)cKeyAssignment_1_2.eContents().get(0);
		private final Keyword cValueKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cValueAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cValueEStringParserRuleCall_1_4_0 = (RuleCall)cValueAssignment_1_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_5 = (RuleCall)cGroup_1.eContents().get(5);
		
		//Environment returns Environment:
		//    'Environment'
		//    (BEGIN
		//        'key' key=EString
		//        'value' value=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Environment'
		//(BEGIN
		//    'key' key=EString
		//    'value' value=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Environment'
		public Keyword getEnvironmentKeyword_0() { return cEnvironmentKeyword_0; }
		
		//(BEGIN
		//    'key' key=EString
		//    'value' value=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'key'
		public Keyword getKeyKeyword_1_1() { return cKeyKeyword_1_1; }
		
		//key=EString
		public Assignment getKeyAssignment_1_2() { return cKeyAssignment_1_2; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_1_2_0() { return cKeyEStringParserRuleCall_1_2_0; }
		
		//'value'
		public Keyword getValueKeyword_1_3() { return cValueKeyword_1_3; }
		
		//value=EString
		public Assignment getValueAssignment_1_4() { return cValueAssignment_1_4; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_1_4_0() { return cValueEStringParserRuleCall_1_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_5() { return cENDTerminalRuleCall_1_5; }
	}
	public class StageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Stage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cNameKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cNameAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_1_2_0 = (RuleCall)cNameAssignment_1_2.eContents().get(0);
		private final Assignment cParallelAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final Keyword cParallelParallelKeyword_1_3_0 = (Keyword)cParallelAssignment_1_3.eContents().get(0);
		private final Assignment cFailFastAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final Keyword cFailFastFailFastKeyword_1_4_0 = (Keyword)cFailFastAssignment_1_4.eContents().get(0);
		private final Assignment cStagesAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cStagesStageParserRuleCall_1_5_0 = (RuleCall)cStagesAssignment_1_5.eContents().get(0);
		private final Assignment cAgentsAssignment_1_6 = (Assignment)cGroup_1.eContents().get(6);
		private final RuleCall cAgentsAgentParserRuleCall_1_6_0 = (RuleCall)cAgentsAssignment_1_6.eContents().get(0);
		private final Assignment cStepsAssignment_1_7 = (Assignment)cGroup_1.eContents().get(7);
		private final RuleCall cStepsStepParserRuleCall_1_7_0 = (RuleCall)cStepsAssignment_1_7.eContents().get(0);
		private final Assignment cEnvironmentsAssignment_1_8 = (Assignment)cGroup_1.eContents().get(8);
		private final RuleCall cEnvironmentsEnvironmentParserRuleCall_1_8_0 = (RuleCall)cEnvironmentsAssignment_1_8.eContents().get(0);
		private final Assignment cInputsAssignment_1_9 = (Assignment)cGroup_1.eContents().get(9);
		private final RuleCall cInputsInputParserRuleCall_1_9_0 = (RuleCall)cInputsAssignment_1_9.eContents().get(0);
		private final Assignment cWhenAssignment_1_10 = (Assignment)cGroup_1.eContents().get(10);
		private final RuleCall cWhenWhenParserRuleCall_1_10_0 = (RuleCall)cWhenAssignment_1_10.eContents().get(0);
		private final Assignment cStage_optionsAssignment_1_11 = (Assignment)cGroup_1.eContents().get(11);
		private final RuleCall cStage_optionsStageOptionParserRuleCall_1_11_0 = (RuleCall)cStage_optionsAssignment_1_11.eContents().get(0);
		private final Assignment cMatrixAssignment_1_12 = (Assignment)cGroup_1.eContents().get(12);
		private final RuleCall cMatrixMatrixParserRuleCall_1_12_0 = (RuleCall)cMatrixAssignment_1_12.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_13 = (RuleCall)cGroup_1.eContents().get(13);
		
		//Stage returns Stage:
		//    'Stage'
		//    (BEGIN
		//        'name' name=EString
		//        (parallel?='parallel' )?
		//        (failFast?='failFast')?
		//        (stages+=Stage)*
		//        (agents+=Agent)*
		//        (steps+=Step)*
		//        (environments+=Environment)*
		//        (inputs+=Input)*
		//        (when+=When)*
		//        (stage_options+=StageOption)*
		//        matrix=Matrix?
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Stage'
		//(BEGIN
		//    'name' name=EString
		//    (parallel?='parallel' )?
		//    (failFast?='failFast')?
		//    (stages+=Stage)*
		//    (agents+=Agent)*
		//    (steps+=Step)*
		//    (environments+=Environment)*
		//    (inputs+=Input)*
		//    (when+=When)*
		//    (stage_options+=StageOption)*
		//    matrix=Matrix?
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Stage'
		public Keyword getStageKeyword_0() { return cStageKeyword_0; }
		
		//(BEGIN
		//    'name' name=EString
		//    (parallel?='parallel' )?
		//    (failFast?='failFast')?
		//    (stages+=Stage)*
		//    (agents+=Agent)*
		//    (steps+=Step)*
		//    (environments+=Environment)*
		//    (inputs+=Input)*
		//    (when+=When)*
		//    (stage_options+=StageOption)*
		//    matrix=Matrix?
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'name'
		public Keyword getNameKeyword_1_1() { return cNameKeyword_1_1; }
		
		//name=EString
		public Assignment getNameAssignment_1_2() { return cNameAssignment_1_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_2_0() { return cNameEStringParserRuleCall_1_2_0; }
		
		//(parallel?='parallel' )?
		public Assignment getParallelAssignment_1_3() { return cParallelAssignment_1_3; }
		
		//'parallel'
		public Keyword getParallelParallelKeyword_1_3_0() { return cParallelParallelKeyword_1_3_0; }
		
		//(failFast?='failFast')?
		public Assignment getFailFastAssignment_1_4() { return cFailFastAssignment_1_4; }
		
		//'failFast'
		public Keyword getFailFastFailFastKeyword_1_4_0() { return cFailFastFailFastKeyword_1_4_0; }
		
		//(stages+=Stage)*
		public Assignment getStagesAssignment_1_5() { return cStagesAssignment_1_5; }
		
		//Stage
		public RuleCall getStagesStageParserRuleCall_1_5_0() { return cStagesStageParserRuleCall_1_5_0; }
		
		//(agents+=Agent)*
		public Assignment getAgentsAssignment_1_6() { return cAgentsAssignment_1_6; }
		
		//Agent
		public RuleCall getAgentsAgentParserRuleCall_1_6_0() { return cAgentsAgentParserRuleCall_1_6_0; }
		
		//(steps+=Step)*
		public Assignment getStepsAssignment_1_7() { return cStepsAssignment_1_7; }
		
		//Step
		public RuleCall getStepsStepParserRuleCall_1_7_0() { return cStepsStepParserRuleCall_1_7_0; }
		
		//(environments+=Environment)*
		public Assignment getEnvironmentsAssignment_1_8() { return cEnvironmentsAssignment_1_8; }
		
		//Environment
		public RuleCall getEnvironmentsEnvironmentParserRuleCall_1_8_0() { return cEnvironmentsEnvironmentParserRuleCall_1_8_0; }
		
		//(inputs+=Input)*
		public Assignment getInputsAssignment_1_9() { return cInputsAssignment_1_9; }
		
		//Input
		public RuleCall getInputsInputParserRuleCall_1_9_0() { return cInputsInputParserRuleCall_1_9_0; }
		
		//(when+=When)*
		public Assignment getWhenAssignment_1_10() { return cWhenAssignment_1_10; }
		
		//When
		public RuleCall getWhenWhenParserRuleCall_1_10_0() { return cWhenWhenParserRuleCall_1_10_0; }
		
		//(stage_options+=StageOption)*
		public Assignment getStage_optionsAssignment_1_11() { return cStage_optionsAssignment_1_11; }
		
		//StageOption
		public RuleCall getStage_optionsStageOptionParserRuleCall_1_11_0() { return cStage_optionsStageOptionParserRuleCall_1_11_0; }
		
		//matrix=Matrix?
		public Assignment getMatrixAssignment_1_12() { return cMatrixAssignment_1_12; }
		
		//Matrix
		public RuleCall getMatrixMatrixParserRuleCall_1_12_0() { return cMatrixMatrixParserRuleCall_1_12_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_13() { return cENDTerminalRuleCall_1_13; }
	}
	public class PostElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Post");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPostKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cConditionKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cConditionAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cConditionPOST_TYPEEnumRuleCall_1_2_0 = (RuleCall)cConditionAssignment_1_2.eContents().get(0);
		private final Assignment cStepsAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cStepsStepParserRuleCall_1_3_0 = (RuleCall)cStepsAssignment_1_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_4 = (RuleCall)cGroup_1.eContents().get(4);
		
		//Post returns Post:
		//    'Post'
		//    (BEGIN
		//        'condition' condition=POST_TYPE
		//        (steps+=Step)+
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Post'
		//(BEGIN
		//    'condition' condition=POST_TYPE
		//    (steps+=Step)+
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Post'
		public Keyword getPostKeyword_0() { return cPostKeyword_0; }
		
		//(BEGIN
		//    'condition' condition=POST_TYPE
		//    (steps+=Step)+
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'condition'
		public Keyword getConditionKeyword_1_1() { return cConditionKeyword_1_1; }
		
		//condition=POST_TYPE
		public Assignment getConditionAssignment_1_2() { return cConditionAssignment_1_2; }
		
		//POST_TYPE
		public RuleCall getConditionPOST_TYPEEnumRuleCall_1_2_0() { return cConditionPOST_TYPEEnumRuleCall_1_2_0; }
		
		//(steps+=Step)+
		public Assignment getStepsAssignment_1_3() { return cStepsAssignment_1_3; }
		
		//Step
		public RuleCall getStepsStepParserRuleCall_1_3_0() { return cStepsStepParserRuleCall_1_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_4() { return cENDTerminalRuleCall_1_4; }
	}
	public class ToolElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Tool");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cToolKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cToolKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cToolAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cToolTOOL_TYPEEnumRuleCall_1_2_0 = (RuleCall)cToolAssignment_1_2.eContents().get(0);
		private final Keyword cTool_nameKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cTool_nameAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cTool_nameEStringParserRuleCall_1_4_0 = (RuleCall)cTool_nameAssignment_1_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_5 = (RuleCall)cGroup_1.eContents().get(5);
		
		//Tool returns Tool:
		//    'Tool'
		//    (BEGIN
		//        'tool' tool=TOOL_TYPE
		//        'tool_name' tool_name=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Tool'
		//(BEGIN
		//    'tool' tool=TOOL_TYPE
		//    'tool_name' tool_name=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Tool'
		public Keyword getToolKeyword_0() { return cToolKeyword_0; }
		
		//(BEGIN
		//    'tool' tool=TOOL_TYPE
		//    'tool_name' tool_name=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'tool'
		public Keyword getToolKeyword_1_1() { return cToolKeyword_1_1; }
		
		//tool=TOOL_TYPE
		public Assignment getToolAssignment_1_2() { return cToolAssignment_1_2; }
		
		//TOOL_TYPE
		public RuleCall getToolTOOL_TYPEEnumRuleCall_1_2_0() { return cToolTOOL_TYPEEnumRuleCall_1_2_0; }
		
		//'tool_name'
		public Keyword getTool_nameKeyword_1_3() { return cTool_nameKeyword_1_3; }
		
		//tool_name=EString
		public Assignment getTool_nameAssignment_1_4() { return cTool_nameAssignment_1_4; }
		
		//EString
		public RuleCall getTool_nameEStringParserRuleCall_1_4_0() { return cTool_nameEStringParserRuleCall_1_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_5() { return cENDTerminalRuleCall_1_5; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class StepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Step");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStepKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cCommandsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cCommandsCommandParserRuleCall_1_1_0 = (RuleCall)cCommandsAssignment_1_1.eContents().get(0);
		private final Assignment cStep_parametersAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cStep_parametersStep_ParameterParserRuleCall_1_2_0 = (RuleCall)cStep_parametersAssignment_1_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		
		//Step returns Step:
		//    'Step'
		//    (BEGIN
		//        commands=Command
		//        (step_parameters+=Step_Parameter)*
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Step'
		//(BEGIN
		//    commands=Command
		//    (step_parameters+=Step_Parameter)*
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Step'
		public Keyword getStepKeyword_0() { return cStepKeyword_0; }
		
		//(BEGIN
		//    commands=Command
		//    (step_parameters+=Step_Parameter)*
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//commands=Command
		public Assignment getCommandsAssignment_1_1() { return cCommandsAssignment_1_1; }
		
		//Command
		public RuleCall getCommandsCommandParserRuleCall_1_1_0() { return cCommandsCommandParserRuleCall_1_1_0; }
		
		//(step_parameters+=Step_Parameter)*
		public Assignment getStep_parametersAssignment_1_2() { return cStep_parametersAssignment_1_2; }
		
		//Step_Parameter
		public RuleCall getStep_parametersStep_ParameterParserRuleCall_1_2_0() { return cStep_parametersStep_ParameterParserRuleCall_1_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3() { return cENDTerminalRuleCall_1_3; }
	}
	public class InputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Input");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInputKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cMessageKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cMessageAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cMessageEStringParserRuleCall_1_2_0 = (RuleCall)cMessageAssignment_1_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cIdKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cIdAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cIdEStringParserRuleCall_1_3_1_0 = (RuleCall)cIdAssignment_1_3_1.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final Keyword cOkKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Assignment cOkAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cOkEStringParserRuleCall_1_4_1_0 = (RuleCall)cOkAssignment_1_4_1.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cGroup_1.eContents().get(5);
		private final Keyword cSubmitterKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Assignment cSubmitterAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final RuleCall cSubmitterEStringParserRuleCall_1_5_1_0 = (RuleCall)cSubmitterAssignment_1_5_1.eContents().get(0);
		private final Group cGroup_1_6 = (Group)cGroup_1.eContents().get(6);
		private final Keyword cSubmitterParameterKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final Assignment cSubmitterParameterAssignment_1_6_1 = (Assignment)cGroup_1_6.eContents().get(1);
		private final RuleCall cSubmitterParameterEStringParserRuleCall_1_6_1_0 = (RuleCall)cSubmitterParameterAssignment_1_6_1.eContents().get(0);
		private final Assignment cParameter_directivesAssignment_1_7 = (Assignment)cGroup_1.eContents().get(7);
		private final RuleCall cParameter_directivesParameter_DirectiveParserRuleCall_1_7_0 = (RuleCall)cParameter_directivesAssignment_1_7.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_8 = (RuleCall)cGroup_1.eContents().get(8);
		
		//Input returns Input:
		//    'Input'
		//    (BEGIN
		//        'message' message=EString
		//        ('id' id=EString )?
		//        ('ok' ok=EString )?
		//        ('submitter' submitter=EString )?
		//        ('submitterParameter' submitterParameter=EString )?
		//        (parameter_directives+=Parameter_Directive)*
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Input'
		//(BEGIN
		//    'message' message=EString
		//    ('id' id=EString )?
		//    ('ok' ok=EString )?
		//    ('submitter' submitter=EString )?
		//    ('submitterParameter' submitterParameter=EString )?
		//    (parameter_directives+=Parameter_Directive)*
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Input'
		public Keyword getInputKeyword_0() { return cInputKeyword_0; }
		
		//(BEGIN
		//    'message' message=EString
		//    ('id' id=EString )?
		//    ('ok' ok=EString )?
		//    ('submitter' submitter=EString )?
		//    ('submitterParameter' submitterParameter=EString )?
		//    (parameter_directives+=Parameter_Directive)*
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'message'
		public Keyword getMessageKeyword_1_1() { return cMessageKeyword_1_1; }
		
		//message=EString
		public Assignment getMessageAssignment_1_2() { return cMessageAssignment_1_2; }
		
		//EString
		public RuleCall getMessageEStringParserRuleCall_1_2_0() { return cMessageEStringParserRuleCall_1_2_0; }
		
		//('id' id=EString )?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'id'
		public Keyword getIdKeyword_1_3_0() { return cIdKeyword_1_3_0; }
		
		//id=EString
		public Assignment getIdAssignment_1_3_1() { return cIdAssignment_1_3_1; }
		
		//EString
		public RuleCall getIdEStringParserRuleCall_1_3_1_0() { return cIdEStringParserRuleCall_1_3_1_0; }
		
		//('ok' ok=EString )?
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'ok'
		public Keyword getOkKeyword_1_4_0() { return cOkKeyword_1_4_0; }
		
		//ok=EString
		public Assignment getOkAssignment_1_4_1() { return cOkAssignment_1_4_1; }
		
		//EString
		public RuleCall getOkEStringParserRuleCall_1_4_1_0() { return cOkEStringParserRuleCall_1_4_1_0; }
		
		//('submitter' submitter=EString )?
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'submitter'
		public Keyword getSubmitterKeyword_1_5_0() { return cSubmitterKeyword_1_5_0; }
		
		//submitter=EString
		public Assignment getSubmitterAssignment_1_5_1() { return cSubmitterAssignment_1_5_1; }
		
		//EString
		public RuleCall getSubmitterEStringParserRuleCall_1_5_1_0() { return cSubmitterEStringParserRuleCall_1_5_1_0; }
		
		//('submitterParameter' submitterParameter=EString )?
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//'submitterParameter'
		public Keyword getSubmitterParameterKeyword_1_6_0() { return cSubmitterParameterKeyword_1_6_0; }
		
		//submitterParameter=EString
		public Assignment getSubmitterParameterAssignment_1_6_1() { return cSubmitterParameterAssignment_1_6_1; }
		
		//EString
		public RuleCall getSubmitterParameterEStringParserRuleCall_1_6_1_0() { return cSubmitterParameterEStringParserRuleCall_1_6_1_0; }
		
		//(parameter_directives+=Parameter_Directive)*
		public Assignment getParameter_directivesAssignment_1_7() { return cParameter_directivesAssignment_1_7; }
		
		//Parameter_Directive
		public RuleCall getParameter_directivesParameter_DirectiveParserRuleCall_1_7_0() { return cParameter_directivesParameter_DirectiveParserRuleCall_1_7_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_8() { return cENDTerminalRuleCall_1_8; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class MatrixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Matrix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMatrixKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cAxisAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cAxisAxisParserRuleCall_1_1_0 = (RuleCall)cAxisAssignment_1_1.eContents().get(0);
		private final Assignment cStagesAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cStagesStageParserRuleCall_1_2_0 = (RuleCall)cStagesAssignment_1_2.eContents().get(0);
		private final Assignment cInputsAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cInputsInputParserRuleCall_1_3_0 = (RuleCall)cInputsAssignment_1_3.eContents().get(0);
		private final Assignment cWhenAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cWhenWhenParserRuleCall_1_4_0 = (RuleCall)cWhenAssignment_1_4.eContents().get(0);
		private final Assignment cEnvironmentsAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cEnvironmentsEnvironmentParserRuleCall_1_5_0 = (RuleCall)cEnvironmentsAssignment_1_5.eContents().get(0);
		private final Assignment cAgentsAssignment_1_6 = (Assignment)cGroup_1.eContents().get(6);
		private final RuleCall cAgentsAgentParserRuleCall_1_6_0 = (RuleCall)cAgentsAssignment_1_6.eContents().get(0);
		private final Assignment cToolsAssignment_1_7 = (Assignment)cGroup_1.eContents().get(7);
		private final RuleCall cToolsToolParserRuleCall_1_7_0 = (RuleCall)cToolsAssignment_1_7.eContents().get(0);
		private final Assignment cPostAssignment_1_8 = (Assignment)cGroup_1.eContents().get(8);
		private final RuleCall cPostPostParserRuleCall_1_8_0 = (RuleCall)cPostAssignment_1_8.eContents().get(0);
		private final Assignment cStage_optionsAssignment_1_9 = (Assignment)cGroup_1.eContents().get(9);
		private final RuleCall cStage_optionsStageOptionParserRuleCall_1_9_0 = (RuleCall)cStage_optionsAssignment_1_9.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_10 = (RuleCall)cGroup_1.eContents().get(10);
		
		//Matrix returns Matrix:
		//    'Matrix'
		//    (BEGIN
		//        (axis+=Axis)+
		//        (stages+=Stage)+
		//        (inputs+=Input)*
		//        (when+=When)*
		//        (environments+=Environment)*
		//        (agents+=Agent)*
		//        (tools+=Tool)*
		//        (post+=Post)*
		//        (stage_options+=StageOption)*
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Matrix'
		//(BEGIN
		//    (axis+=Axis)+
		//    (stages+=Stage)+
		//    (inputs+=Input)*
		//    (when+=When)*
		//    (environments+=Environment)*
		//    (agents+=Agent)*
		//    (tools+=Tool)*
		//    (post+=Post)*
		//    (stage_options+=StageOption)*
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Matrix'
		public Keyword getMatrixKeyword_0() { return cMatrixKeyword_0; }
		
		//(BEGIN
		//    (axis+=Axis)+
		//    (stages+=Stage)+
		//    (inputs+=Input)*
		//    (when+=When)*
		//    (environments+=Environment)*
		//    (agents+=Agent)*
		//    (tools+=Tool)*
		//    (post+=Post)*
		//    (stage_options+=StageOption)*
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//(axis+=Axis)+
		public Assignment getAxisAssignment_1_1() { return cAxisAssignment_1_1; }
		
		//Axis
		public RuleCall getAxisAxisParserRuleCall_1_1_0() { return cAxisAxisParserRuleCall_1_1_0; }
		
		//(stages+=Stage)+
		public Assignment getStagesAssignment_1_2() { return cStagesAssignment_1_2; }
		
		//Stage
		public RuleCall getStagesStageParserRuleCall_1_2_0() { return cStagesStageParserRuleCall_1_2_0; }
		
		//(inputs+=Input)*
		public Assignment getInputsAssignment_1_3() { return cInputsAssignment_1_3; }
		
		//Input
		public RuleCall getInputsInputParserRuleCall_1_3_0() { return cInputsInputParserRuleCall_1_3_0; }
		
		//(when+=When)*
		public Assignment getWhenAssignment_1_4() { return cWhenAssignment_1_4; }
		
		//When
		public RuleCall getWhenWhenParserRuleCall_1_4_0() { return cWhenWhenParserRuleCall_1_4_0; }
		
		//(environments+=Environment)*
		public Assignment getEnvironmentsAssignment_1_5() { return cEnvironmentsAssignment_1_5; }
		
		//Environment
		public RuleCall getEnvironmentsEnvironmentParserRuleCall_1_5_0() { return cEnvironmentsEnvironmentParserRuleCall_1_5_0; }
		
		//(agents+=Agent)*
		public Assignment getAgentsAssignment_1_6() { return cAgentsAssignment_1_6; }
		
		//Agent
		public RuleCall getAgentsAgentParserRuleCall_1_6_0() { return cAgentsAgentParserRuleCall_1_6_0; }
		
		//(tools+=Tool)*
		public Assignment getToolsAssignment_1_7() { return cToolsAssignment_1_7; }
		
		//Tool
		public RuleCall getToolsToolParserRuleCall_1_7_0() { return cToolsToolParserRuleCall_1_7_0; }
		
		//(post+=Post)*
		public Assignment getPostAssignment_1_8() { return cPostAssignment_1_8; }
		
		//Post
		public RuleCall getPostPostParserRuleCall_1_8_0() { return cPostPostParserRuleCall_1_8_0; }
		
		//(stage_options+=StageOption)*
		public Assignment getStage_optionsAssignment_1_9() { return cStage_optionsAssignment_1_9; }
		
		//StageOption
		public RuleCall getStage_optionsStageOptionParserRuleCall_1_9_0() { return cStage_optionsStageOptionParserRuleCall_1_9_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_10() { return cENDTerminalRuleCall_1_10; }
	}
	public class CommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Command");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCommandAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCommandKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Keyword cNameKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cNameAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_2_0 = (RuleCall)cNameAssignment_2_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		
		//Command returns Command:
		//    {Command}
		//    'Command'
		//    (BEGIN
		//        'name' name=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//{Command}
		//'Command'
		//(BEGIN
		//    'name' name=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//{Command}
		public Action getCommandAction_0() { return cCommandAction_0; }
		
		//'Command'
		public Keyword getCommandKeyword_1() { return cCommandKeyword_1; }
		
		//(BEGIN
		//    'name' name=EString
		//END)
		public Group getGroup_2() { return cGroup_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_0() { return cBEGINTerminalRuleCall_2_0; }
		
		//'name'
		public Keyword getNameKeyword_2_1() { return cNameKeyword_2_1; }
		
		//name=EString
		public Assignment getNameAssignment_2_2() { return cNameAssignment_2_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_2_0() { return cNameEStringParserRuleCall_2_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_3() { return cENDTerminalRuleCall_2_3; }
	}
	public class Step_ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Step_Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStep_ParameterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cParameterKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cParameterAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cParameterEStringParserRuleCall_1_2_0 = (RuleCall)cParameterAssignment_1_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		
		//Step_Parameter returns Step_Parameter:
		//    'Step_Parameter'
		//    (BEGIN
		//        'parameter' parameter=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Step_Parameter'
		//(BEGIN
		//    'parameter' parameter=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Step_Parameter'
		public Keyword getStep_ParameterKeyword_0() { return cStep_ParameterKeyword_0; }
		
		//(BEGIN
		//    'parameter' parameter=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'parameter'
		public Keyword getParameterKeyword_1_1() { return cParameterKeyword_1_1; }
		
		//parameter=EString
		public Assignment getParameterAssignment_1_2() { return cParameterAssignment_1_2; }
		
		//EString
		public RuleCall getParameterEStringParserRuleCall_1_2_0() { return cParameterEStringParserRuleCall_1_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3() { return cENDTerminalRuleCall_1_3; }
	}
	public class BuildingTagElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.BuildingTag");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBuildingTagAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBuildingTagKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//BuildingTag returns BuildingTag:
		//    {BuildingTag}
		//    'BuildingTag'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{BuildingTag}
		//'BuildingTag'
		public Group getGroup() { return cGroup; }
		
		//{BuildingTag}
		public Action getBuildingTagAction_0() { return cBuildingTagAction_0; }
		
		//'BuildingTag'
		public Keyword getBuildingTagKeyword_1() { return cBuildingTagKeyword_1; }
	}
	public class BranchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Branch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBranchKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cPatternKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cPatternAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cPatternEStringParserRuleCall_1_2_0 = (RuleCall)cPatternAssignment_1_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cComparatorKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cComparatorAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cComparatorCOMPARATOR_TYPEEnumRuleCall_1_3_1_0 = (RuleCall)cComparatorAssignment_1_3_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_4 = (RuleCall)cGroup_1.eContents().get(4);
		
		//Branch returns Branch:
		//    'Branch'
		//    (BEGIN
		//        'pattern' pattern=EString
		//        ('comparator' comparator=COMPARATOR_TYPE)?
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Branch'
		//(BEGIN
		//    'pattern' pattern=EString
		//    ('comparator' comparator=COMPARATOR_TYPE)?
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Branch'
		public Keyword getBranchKeyword_0() { return cBranchKeyword_0; }
		
		//(BEGIN
		//    'pattern' pattern=EString
		//    ('comparator' comparator=COMPARATOR_TYPE)?
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'pattern'
		public Keyword getPatternKeyword_1_1() { return cPatternKeyword_1_1; }
		
		//pattern=EString
		public Assignment getPatternAssignment_1_2() { return cPatternAssignment_1_2; }
		
		//EString
		public RuleCall getPatternEStringParserRuleCall_1_2_0() { return cPatternEStringParserRuleCall_1_2_0; }
		
		//('comparator' comparator=COMPARATOR_TYPE)?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'comparator'
		public Keyword getComparatorKeyword_1_3_0() { return cComparatorKeyword_1_3_0; }
		
		//comparator=COMPARATOR_TYPE
		public Assignment getComparatorAssignment_1_3_1() { return cComparatorAssignment_1_3_1; }
		
		//COMPARATOR_TYPE
		public RuleCall getComparatorCOMPARATOR_TYPEEnumRuleCall_1_3_1_0() { return cComparatorCOMPARATOR_TYPEEnumRuleCall_1_3_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_4() { return cENDTerminalRuleCall_1_4; }
	}
	public class ChangelogElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Changelog");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChangelogKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cExpressionKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cExpressionAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cExpressionEStringParserRuleCall_1_2_0 = (RuleCall)cExpressionAssignment_1_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		
		//Changelog returns Changelog:
		//    'Changelog'
		//    (BEGIN
		//        'expression' expression=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Changelog'
		//(BEGIN
		//    'expression' expression=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Changelog'
		public Keyword getChangelogKeyword_0() { return cChangelogKeyword_0; }
		
		//(BEGIN
		//    'expression' expression=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'expression'
		public Keyword getExpressionKeyword_1_1() { return cExpressionKeyword_1_1; }
		
		//expression=EString
		public Assignment getExpressionAssignment_1_2() { return cExpressionAssignment_1_2; }
		
		//EString
		public RuleCall getExpressionEStringParserRuleCall_1_2_0() { return cExpressionEStringParserRuleCall_1_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3() { return cENDTerminalRuleCall_1_3; }
	}
	public class TriggeredByElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.TriggeredBy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTriggeredByKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cParameterKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cParameterAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cParameterEStringParserRuleCall_1_2_0 = (RuleCall)cParameterAssignment_1_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		
		//TriggeredBy returns TriggeredBy:
		//    'TriggeredBy'
		//    (BEGIN
		//        'parameter' parameter=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'TriggeredBy'
		//(BEGIN
		//    'parameter' parameter=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'TriggeredBy'
		public Keyword getTriggeredByKeyword_0() { return cTriggeredByKeyword_0; }
		
		//(BEGIN
		//    'parameter' parameter=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'parameter'
		public Keyword getParameterKeyword_1_1() { return cParameterKeyword_1_1; }
		
		//parameter=EString
		public Assignment getParameterAssignment_1_2() { return cParameterAssignment_1_2; }
		
		//EString
		public RuleCall getParameterEStringParserRuleCall_1_2_0() { return cParameterEStringParserRuleCall_1_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3() { return cENDTerminalRuleCall_1_3; }
	}
	public class ExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Expression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExpressionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cExpressionKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cExpressionAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cExpressionEStringParserRuleCall_1_2_0 = (RuleCall)cExpressionAssignment_1_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		
		//Expression returns Expression:
		//    'Expression'
		//    (BEGIN
		//        'expression' expression=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Expression'
		//(BEGIN
		//    'expression' expression=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Expression'
		public Keyword getExpressionKeyword_0() { return cExpressionKeyword_0; }
		
		//(BEGIN
		//    'expression' expression=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'expression'
		public Keyword getExpressionKeyword_1_1() { return cExpressionKeyword_1_1; }
		
		//expression=EString
		public Assignment getExpressionAssignment_1_2() { return cExpressionAssignment_1_2; }
		
		//EString
		public RuleCall getExpressionEStringParserRuleCall_1_2_0() { return cExpressionEStringParserRuleCall_1_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3() { return cENDTerminalRuleCall_1_3; }
	}
	public class ChangeSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.ChangeSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChangeSetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cPatternKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cPatternAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cPatternEStringParserRuleCall_1_2_0 = (RuleCall)cPatternAssignment_1_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cComparatorKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cComparatorAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cComparatorCOMPARATOR_TYPEEnumRuleCall_1_3_1_0 = (RuleCall)cComparatorAssignment_1_3_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_4 = (RuleCall)cGroup_1.eContents().get(4);
		
		//ChangeSet returns ChangeSet:
		//    'ChangeSet'
		//    (BEGIN
		//        'pattern' pattern=EString
		//        ('comparator' comparator=COMPARATOR_TYPE)?
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'ChangeSet'
		//(BEGIN
		//    'pattern' pattern=EString
		//    ('comparator' comparator=COMPARATOR_TYPE)?
		//END)
		public Group getGroup() { return cGroup; }
		
		//'ChangeSet'
		public Keyword getChangeSetKeyword_0() { return cChangeSetKeyword_0; }
		
		//(BEGIN
		//    'pattern' pattern=EString
		//    ('comparator' comparator=COMPARATOR_TYPE)?
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'pattern'
		public Keyword getPatternKeyword_1_1() { return cPatternKeyword_1_1; }
		
		//pattern=EString
		public Assignment getPatternAssignment_1_2() { return cPatternAssignment_1_2; }
		
		//EString
		public RuleCall getPatternEStringParserRuleCall_1_2_0() { return cPatternEStringParserRuleCall_1_2_0; }
		
		//('comparator' comparator=COMPARATOR_TYPE)?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'comparator'
		public Keyword getComparatorKeyword_1_3_0() { return cComparatorKeyword_1_3_0; }
		
		//comparator=COMPARATOR_TYPE
		public Assignment getComparatorAssignment_1_3_1() { return cComparatorAssignment_1_3_1; }
		
		//COMPARATOR_TYPE
		public RuleCall getComparatorCOMPARATOR_TYPEEnumRuleCall_1_3_1_0() { return cComparatorCOMPARATOR_TYPEEnumRuleCall_1_3_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_4() { return cENDTerminalRuleCall_1_4; }
	}
	public class NotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Not");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNotAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNotKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cWhenAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cWhenWhenParserRuleCall_2_1_0 = (RuleCall)cWhenAssignment_2_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_2 = (RuleCall)cGroup_2.eContents().get(2);
		
		//Not returns Not:
		//    {Not}
		//    'Not'
		//    (BEGIN
		//        (when+=When)+
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//{Not}
		//'Not'
		//(BEGIN
		//    (when+=When)+
		//END)
		public Group getGroup() { return cGroup; }
		
		//{Not}
		public Action getNotAction_0() { return cNotAction_0; }
		
		//'Not'
		public Keyword getNotKeyword_1() { return cNotKeyword_1; }
		
		//(BEGIN
		//    (when+=When)+
		//END)
		public Group getGroup_2() { return cGroup_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_0() { return cBEGINTerminalRuleCall_2_0; }
		
		//(when+=When)+
		public Assignment getWhenAssignment_2_1() { return cWhenAssignment_2_1; }
		
		//When
		public RuleCall getWhenWhenParserRuleCall_2_1_0() { return cWhenWhenParserRuleCall_2_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_2() { return cENDTerminalRuleCall_2_2; }
	}
	public class AnyOfElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.AnyOf");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAnyOfAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAnyOfKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cWhenAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cWhenWhenParserRuleCall_2_1_0 = (RuleCall)cWhenAssignment_2_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_2 = (RuleCall)cGroup_2.eContents().get(2);
		
		//AnyOf returns AnyOf:
		//    {AnyOf}
		//    'AnyOf'
		//    (BEGIN
		//        (when+=When)+
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//{AnyOf}
		//'AnyOf'
		//(BEGIN
		//    (when+=When)+
		//END)
		public Group getGroup() { return cGroup; }
		
		//{AnyOf}
		public Action getAnyOfAction_0() { return cAnyOfAction_0; }
		
		//'AnyOf'
		public Keyword getAnyOfKeyword_1() { return cAnyOfKeyword_1; }
		
		//(BEGIN
		//    (when+=When)+
		//END)
		public Group getGroup_2() { return cGroup_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_0() { return cBEGINTerminalRuleCall_2_0; }
		
		//(when+=When)+
		public Assignment getWhenAssignment_2_1() { return cWhenAssignment_2_1; }
		
		//When
		public RuleCall getWhenWhenParserRuleCall_2_1_0() { return cWhenWhenParserRuleCall_2_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_2() { return cENDTerminalRuleCall_2_2; }
	}
	public class TagElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Tag");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTagKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cPatternKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cPatternAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cPatternEStringParserRuleCall_1_2_0 = (RuleCall)cPatternAssignment_1_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cComparatorKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cComparatorAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cComparatorCOMPARATOR_TYPEEnumRuleCall_1_3_1_0 = (RuleCall)cComparatorAssignment_1_3_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_4 = (RuleCall)cGroup_1.eContents().get(4);
		
		//Tag returns Tag:
		//    'Tag'
		//    (BEGIN
		//        'pattern' pattern=EString
		//        ('comparator' comparator=COMPARATOR_TYPE)?
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Tag'
		//(BEGIN
		//    'pattern' pattern=EString
		//    ('comparator' comparator=COMPARATOR_TYPE)?
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Tag'
		public Keyword getTagKeyword_0() { return cTagKeyword_0; }
		
		//(BEGIN
		//    'pattern' pattern=EString
		//    ('comparator' comparator=COMPARATOR_TYPE)?
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'pattern'
		public Keyword getPatternKeyword_1_1() { return cPatternKeyword_1_1; }
		
		//pattern=EString
		public Assignment getPatternAssignment_1_2() { return cPatternAssignment_1_2; }
		
		//EString
		public RuleCall getPatternEStringParserRuleCall_1_2_0() { return cPatternEStringParserRuleCall_1_2_0; }
		
		//('comparator' comparator=COMPARATOR_TYPE)?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'comparator'
		public Keyword getComparatorKeyword_1_3_0() { return cComparatorKeyword_1_3_0; }
		
		//comparator=COMPARATOR_TYPE
		public Assignment getComparatorAssignment_1_3_1() { return cComparatorAssignment_1_3_1; }
		
		//COMPARATOR_TYPE
		public RuleCall getComparatorCOMPARATOR_TYPEEnumRuleCall_1_3_1_0() { return cComparatorCOMPARATOR_TYPEEnumRuleCall_1_3_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_4() { return cENDTerminalRuleCall_1_4; }
	}
	public class When_EnvElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.When_Env");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWhen_EnvKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cNameKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cNameAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_1_2_0 = (RuleCall)cNameAssignment_1_2.eContents().get(0);
		private final Keyword cValueKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cValueAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cValueEStringParserRuleCall_1_4_0 = (RuleCall)cValueAssignment_1_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_5 = (RuleCall)cGroup_1.eContents().get(5);
		
		//When_Env returns When_Env:
		//    'When_Env'
		//    (BEGIN
		//        'name' name=EString
		//        'value' value=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'When_Env'
		//(BEGIN
		//    'name' name=EString
		//    'value' value=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'When_Env'
		public Keyword getWhen_EnvKeyword_0() { return cWhen_EnvKeyword_0; }
		
		//(BEGIN
		//    'name' name=EString
		//    'value' value=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'name'
		public Keyword getNameKeyword_1_1() { return cNameKeyword_1_1; }
		
		//name=EString
		public Assignment getNameAssignment_1_2() { return cNameAssignment_1_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_2_0() { return cNameEStringParserRuleCall_1_2_0; }
		
		//'value'
		public Keyword getValueKeyword_1_3() { return cValueKeyword_1_3; }
		
		//value=EString
		public Assignment getValueAssignment_1_4() { return cValueAssignment_1_4; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_1_4_0() { return cValueEStringParserRuleCall_1_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_5() { return cENDTerminalRuleCall_1_5; }
	}
	public class AllOfElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.AllOf");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAllOfKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cWhenAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cWhenWhenParserRuleCall_1_1_0 = (RuleCall)cWhenAssignment_1_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		
		//AllOf returns AllOf:
		//    'AllOf'
		//    (BEGIN
		//        (when+=When)+
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'AllOf'
		//(BEGIN
		//    (when+=When)+
		//END)
		public Group getGroup() { return cGroup; }
		
		//'AllOf'
		public Keyword getAllOfKeyword_0() { return cAllOfKeyword_0; }
		
		//(BEGIN
		//    (when+=When)+
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//(when+=When)+
		public Assignment getWhenAssignment_1_1() { return cWhenAssignment_1_1; }
		
		//When
		public RuleCall getWhenWhenParserRuleCall_1_1_0() { return cWhenWhenParserRuleCall_1_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_2() { return cENDTerminalRuleCall_1_2; }
	}
	public class EqualsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Equals");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEqualsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cExpected_valKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cExpected_valAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cExpected_valEStringParserRuleCall_1_2_0 = (RuleCall)cExpected_valAssignment_1_2.eContents().get(0);
		private final Keyword cActual_valKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cActual_valAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cActual_valEStringParserRuleCall_1_4_0 = (RuleCall)cActual_valAssignment_1_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_5 = (RuleCall)cGroup_1.eContents().get(5);
		
		//Equals returns Equals:
		//    'Equals'
		//    (BEGIN
		//        'expected_val' expected_val=EString
		//        'actual_val' actual_val=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Equals'
		//(BEGIN
		//    'expected_val' expected_val=EString
		//    'actual_val' actual_val=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Equals'
		public Keyword getEqualsKeyword_0() { return cEqualsKeyword_0; }
		
		//(BEGIN
		//    'expected_val' expected_val=EString
		//    'actual_val' actual_val=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'expected_val'
		public Keyword getExpected_valKeyword_1_1() { return cExpected_valKeyword_1_1; }
		
		//expected_val=EString
		public Assignment getExpected_valAssignment_1_2() { return cExpected_valAssignment_1_2; }
		
		//EString
		public RuleCall getExpected_valEStringParserRuleCall_1_2_0() { return cExpected_valEStringParserRuleCall_1_2_0; }
		
		//'actual_val'
		public Keyword getActual_valKeyword_1_3() { return cActual_valKeyword_1_3; }
		
		//actual_val=EString
		public Assignment getActual_valAssignment_1_4() { return cActual_valAssignment_1_4; }
		
		//EString
		public RuleCall getActual_valEStringParserRuleCall_1_4_0() { return cActual_valEStringParserRuleCall_1_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_5() { return cENDTerminalRuleCall_1_5; }
	}
	public class ChangeRequestElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.ChangeRequest");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChangeRequestKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cAttributeKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cAttributeAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cAttributeATTRIBUTE_TYPEEnumRuleCall_1_2_0 = (RuleCall)cAttributeAssignment_1_2.eContents().get(0);
		private final Keyword cValueKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cValueAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cValueEStringParserRuleCall_1_4_0 = (RuleCall)cValueAssignment_1_4.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cGroup_1.eContents().get(5);
		private final Keyword cComparatorKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Assignment cComparatorAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final RuleCall cComparatorCOMPARATOR_TYPEEnumRuleCall_1_5_1_0 = (RuleCall)cComparatorAssignment_1_5_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_6 = (RuleCall)cGroup_1.eContents().get(6);
		
		//ChangeRequest returns ChangeRequest:
		//    'ChangeRequest'
		//    (BEGIN
		//        'attribute' attribute=ATTRIBUTE_TYPE
		//        'value' value=EString
		//        ('comparator' comparator=COMPARATOR_TYPE)?
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'ChangeRequest'
		//(BEGIN
		//    'attribute' attribute=ATTRIBUTE_TYPE
		//    'value' value=EString
		//    ('comparator' comparator=COMPARATOR_TYPE)?
		//END)
		public Group getGroup() { return cGroup; }
		
		//'ChangeRequest'
		public Keyword getChangeRequestKeyword_0() { return cChangeRequestKeyword_0; }
		
		//(BEGIN
		//    'attribute' attribute=ATTRIBUTE_TYPE
		//    'value' value=EString
		//    ('comparator' comparator=COMPARATOR_TYPE)?
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'attribute'
		public Keyword getAttributeKeyword_1_1() { return cAttributeKeyword_1_1; }
		
		//attribute=ATTRIBUTE_TYPE
		public Assignment getAttributeAssignment_1_2() { return cAttributeAssignment_1_2; }
		
		//ATTRIBUTE_TYPE
		public RuleCall getAttributeATTRIBUTE_TYPEEnumRuleCall_1_2_0() { return cAttributeATTRIBUTE_TYPEEnumRuleCall_1_2_0; }
		
		//'value'
		public Keyword getValueKeyword_1_3() { return cValueKeyword_1_3; }
		
		//value=EString
		public Assignment getValueAssignment_1_4() { return cValueAssignment_1_4; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_1_4_0() { return cValueEStringParserRuleCall_1_4_0; }
		
		//('comparator' comparator=COMPARATOR_TYPE)?
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'comparator'
		public Keyword getComparatorKeyword_1_5_0() { return cComparatorKeyword_1_5_0; }
		
		//comparator=COMPARATOR_TYPE
		public Assignment getComparatorAssignment_1_5_1() { return cComparatorAssignment_1_5_1; }
		
		//COMPARATOR_TYPE
		public RuleCall getComparatorCOMPARATOR_TYPEEnumRuleCall_1_5_1_0() { return cComparatorCOMPARATOR_TYPEEnumRuleCall_1_5_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_6() { return cENDTerminalRuleCall_1_6; }
	}
	public class SkipDefaultCheckoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.SkipDefaultCheckout");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSkipDefaultCheckoutAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSkipDefaultCheckoutKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//SkipDefaultCheckout returns SkipDefaultCheckout:
		//    {SkipDefaultCheckout}
		//    'SkipDefaultCheckout'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{SkipDefaultCheckout}
		//'SkipDefaultCheckout'
		public Group getGroup() { return cGroup; }
		
		//{SkipDefaultCheckout}
		public Action getSkipDefaultCheckoutAction_0() { return cSkipDefaultCheckoutAction_0; }
		
		//'SkipDefaultCheckout'
		public Keyword getSkipDefaultCheckoutKeyword_1() { return cSkipDefaultCheckoutKeyword_1; }
	}
	public class RetryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Retry");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRetryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cRetriesKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cRetriesAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cRetriesEShortParserRuleCall_1_2_0 = (RuleCall)cRetriesAssignment_1_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		
		//Retry returns Retry:
		//    'Retry'
		//    (BEGIN
		//        'retries' retries=EShort
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Retry'
		//(BEGIN
		//    'retries' retries=EShort
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Retry'
		public Keyword getRetryKeyword_0() { return cRetryKeyword_0; }
		
		//(BEGIN
		//    'retries' retries=EShort
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'retries'
		public Keyword getRetriesKeyword_1_1() { return cRetriesKeyword_1_1; }
		
		//retries=EShort
		public Assignment getRetriesAssignment_1_2() { return cRetriesAssignment_1_2; }
		
		//EShort
		public RuleCall getRetriesEShortParserRuleCall_1_2_0() { return cRetriesEShortParserRuleCall_1_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3() { return cENDTerminalRuleCall_1_3; }
	}
	public class TimeoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Timeout");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTimeoutKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cTimeKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cTimeAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cTimeEShortParserRuleCall_1_2_0 = (RuleCall)cTimeAssignment_1_2.eContents().get(0);
		private final Keyword cUnitKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cUnitAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cUnitEStringParserRuleCall_1_4_0 = (RuleCall)cUnitAssignment_1_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_5 = (RuleCall)cGroup_1.eContents().get(5);
		
		//Timeout returns Timeout:
		//    'Timeout'
		//    (BEGIN
		//        'time' time=EShort
		//        'unit' unit=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Timeout'
		//(BEGIN
		//    'time' time=EShort
		//    'unit' unit=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Timeout'
		public Keyword getTimeoutKeyword_0() { return cTimeoutKeyword_0; }
		
		//(BEGIN
		//    'time' time=EShort
		//    'unit' unit=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'time'
		public Keyword getTimeKeyword_1_1() { return cTimeKeyword_1_1; }
		
		//time=EShort
		public Assignment getTimeAssignment_1_2() { return cTimeAssignment_1_2; }
		
		//EShort
		public RuleCall getTimeEShortParserRuleCall_1_2_0() { return cTimeEShortParserRuleCall_1_2_0; }
		
		//'unit'
		public Keyword getUnitKeyword_1_3() { return cUnitKeyword_1_3; }
		
		//unit=EString
		public Assignment getUnitAssignment_1_4() { return cUnitAssignment_1_4; }
		
		//EString
		public RuleCall getUnitEStringParserRuleCall_1_4_0() { return cUnitEStringParserRuleCall_1_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_5() { return cENDTerminalRuleCall_1_5; }
	}
	public class TimestampsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Timestamps");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTimestampsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTimestampsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Timestamps returns Timestamps:
		//    {Timestamps}
		//    'Timestamps'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Timestamps}
		//'Timestamps'
		public Group getGroup() { return cGroup; }
		
		//{Timestamps}
		public Action getTimestampsAction_0() { return cTimestampsAction_0; }
		
		//'Timestamps'
		public Keyword getTimestampsKeyword_1() { return cTimestampsKeyword_1; }
	}
	public class EShortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.EShort");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EShort returns ecore::EShort:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class AxisElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Axis");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAxisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cNameKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cNameAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_1_2_0 = (RuleCall)cNameAssignment_1_2.eContents().get(0);
		private final Keyword cValuesKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cValuesAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cValuesEStringParserRuleCall_1_4_0 = (RuleCall)cValuesAssignment_1_4.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cGroup_1.eContents().get(5);
		private final Keyword cCommaKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Assignment cValuesAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final RuleCall cValuesEStringParserRuleCall_1_5_1_0 = (RuleCall)cValuesAssignment_1_5_1.eContents().get(0);
		private final Assignment cExcludeAssignment_1_6 = (Assignment)cGroup_1.eContents().get(6);
		private final Keyword cExcludeExcludeKeyword_1_6_0 = (Keyword)cExcludeAssignment_1_6.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_7 = (RuleCall)cGroup_1.eContents().get(7);
		
		//Axis returns Axis:
		//    'Axis'
		//    (BEGIN
		//        'name' name=EString
		//        'values' values+=EString ( "," values+=EString)*
		//        (exclude?='exclude')?
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Axis'
		//(BEGIN
		//    'name' name=EString
		//    'values' values+=EString ( "," values+=EString)*
		//    (exclude?='exclude')?
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Axis'
		public Keyword getAxisKeyword_0() { return cAxisKeyword_0; }
		
		//(BEGIN
		//    'name' name=EString
		//    'values' values+=EString ( "," values+=EString)*
		//    (exclude?='exclude')?
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'name'
		public Keyword getNameKeyword_1_1() { return cNameKeyword_1_1; }
		
		//name=EString
		public Assignment getNameAssignment_1_2() { return cNameAssignment_1_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_2_0() { return cNameEStringParserRuleCall_1_2_0; }
		
		//'values'
		public Keyword getValuesKeyword_1_3() { return cValuesKeyword_1_3; }
		
		//values+=EString
		public Assignment getValuesAssignment_1_4() { return cValuesAssignment_1_4; }
		
		//EString
		public RuleCall getValuesEStringParserRuleCall_1_4_0() { return cValuesEStringParserRuleCall_1_4_0; }
		
		//( "," values+=EString)*
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//","
		public Keyword getCommaKeyword_1_5_0() { return cCommaKeyword_1_5_0; }
		
		//values+=EString
		public Assignment getValuesAssignment_1_5_1() { return cValuesAssignment_1_5_1; }
		
		//EString
		public RuleCall getValuesEStringParserRuleCall_1_5_1_0() { return cValuesEStringParserRuleCall_1_5_1_0; }
		
		//(exclude?='exclude')?
		public Assignment getExcludeAssignment_1_6() { return cExcludeAssignment_1_6; }
		
		//'exclude'
		public Keyword getExcludeExcludeKeyword_1_6_0() { return cExcludeExcludeKeyword_1_6_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_7() { return cENDTerminalRuleCall_1_7; }
	}
	public class StringParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.StringParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStringParamKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cNameKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cNameAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_1_2_0 = (RuleCall)cNameAssignment_1_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cDescriptionKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_1_3_1_0 = (RuleCall)cDescriptionAssignment_1_3_1.eContents().get(0);
		private final Keyword cDefaultValueKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cDefaultValueAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cDefaultValueEStringParserRuleCall_1_5_0 = (RuleCall)cDefaultValueAssignment_1_5.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_6 = (RuleCall)cGroup_1.eContents().get(6);
		
		//StringParam returns StringParam:
		//    'StringParam'
		//    (BEGIN
		//        'name' name=EString
		//        ('description' description=EString )?
		//        'defaultValue' defaultValue=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'StringParam'
		//(BEGIN
		//    'name' name=EString
		//    ('description' description=EString )?
		//    'defaultValue' defaultValue=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'StringParam'
		public Keyword getStringParamKeyword_0() { return cStringParamKeyword_0; }
		
		//(BEGIN
		//    'name' name=EString
		//    ('description' description=EString )?
		//    'defaultValue' defaultValue=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'name'
		public Keyword getNameKeyword_1_1() { return cNameKeyword_1_1; }
		
		//name=EString
		public Assignment getNameAssignment_1_2() { return cNameAssignment_1_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_2_0() { return cNameEStringParserRuleCall_1_2_0; }
		
		//('description' description=EString )?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'description'
		public Keyword getDescriptionKeyword_1_3_0() { return cDescriptionKeyword_1_3_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_1_3_1() { return cDescriptionAssignment_1_3_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_1_3_1_0() { return cDescriptionEStringParserRuleCall_1_3_1_0; }
		
		//'defaultValue'
		public Keyword getDefaultValueKeyword_1_4() { return cDefaultValueKeyword_1_4; }
		
		//defaultValue=EString
		public Assignment getDefaultValueAssignment_1_5() { return cDefaultValueAssignment_1_5; }
		
		//EString
		public RuleCall getDefaultValueEStringParserRuleCall_1_5_0() { return cDefaultValueEStringParserRuleCall_1_5_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_6() { return cENDTerminalRuleCall_1_6; }
	}
	public class TextParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.TextParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTextParamKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cNameKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cNameAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_1_2_0 = (RuleCall)cNameAssignment_1_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cDescriptionKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_1_3_1_0 = (RuleCall)cDescriptionAssignment_1_3_1.eContents().get(0);
		private final Keyword cDefaultValueKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cDefaultValueAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cDefaultValueEStringParserRuleCall_1_5_0 = (RuleCall)cDefaultValueAssignment_1_5.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_6 = (RuleCall)cGroup_1.eContents().get(6);
		
		//TextParam returns TextParam:
		//    'TextParam'
		//    (BEGIN
		//        'name' name=EString
		//        ('description' description=EString )?
		//        'defaultValue' defaultValue=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'TextParam'
		//(BEGIN
		//    'name' name=EString
		//    ('description' description=EString )?
		//    'defaultValue' defaultValue=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'TextParam'
		public Keyword getTextParamKeyword_0() { return cTextParamKeyword_0; }
		
		//(BEGIN
		//    'name' name=EString
		//    ('description' description=EString )?
		//    'defaultValue' defaultValue=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'name'
		public Keyword getNameKeyword_1_1() { return cNameKeyword_1_1; }
		
		//name=EString
		public Assignment getNameAssignment_1_2() { return cNameAssignment_1_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_2_0() { return cNameEStringParserRuleCall_1_2_0; }
		
		//('description' description=EString )?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'description'
		public Keyword getDescriptionKeyword_1_3_0() { return cDescriptionKeyword_1_3_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_1_3_1() { return cDescriptionAssignment_1_3_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_1_3_1_0() { return cDescriptionEStringParserRuleCall_1_3_1_0; }
		
		//'defaultValue'
		public Keyword getDefaultValueKeyword_1_4() { return cDefaultValueKeyword_1_4; }
		
		//defaultValue=EString
		public Assignment getDefaultValueAssignment_1_5() { return cDefaultValueAssignment_1_5; }
		
		//EString
		public RuleCall getDefaultValueEStringParserRuleCall_1_5_0() { return cDefaultValueEStringParserRuleCall_1_5_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_6() { return cENDTerminalRuleCall_1_6; }
	}
	public class ChoiceParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.ChoiceParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChoiceParamKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cNameKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cNameAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_1_2_0 = (RuleCall)cNameAssignment_1_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cDescriptionKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_1_3_1_0 = (RuleCall)cDescriptionAssignment_1_3_1.eContents().get(0);
		private final Keyword cChoicesKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cChoicesAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cChoicesEStringParserRuleCall_1_5_0 = (RuleCall)cChoicesAssignment_1_5.eContents().get(0);
		private final Group cGroup_1_6 = (Group)cGroup_1.eContents().get(6);
		private final Keyword cCommaKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final Assignment cChoicesAssignment_1_6_1 = (Assignment)cGroup_1_6.eContents().get(1);
		private final RuleCall cChoicesEStringParserRuleCall_1_6_1_0 = (RuleCall)cChoicesAssignment_1_6_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_7 = (RuleCall)cGroup_1.eContents().get(7);
		
		//ChoiceParam returns ChoiceParam:
		//    'ChoiceParam'
		//    (BEGIN
		//        'name' name=EString
		//        ('description' description=EString )?
		//        'choices' choices+=EString ( "," choices+=EString)*
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'ChoiceParam'
		//(BEGIN
		//    'name' name=EString
		//    ('description' description=EString )?
		//    'choices' choices+=EString ( "," choices+=EString)*
		//END)
		public Group getGroup() { return cGroup; }
		
		//'ChoiceParam'
		public Keyword getChoiceParamKeyword_0() { return cChoiceParamKeyword_0; }
		
		//(BEGIN
		//    'name' name=EString
		//    ('description' description=EString )?
		//    'choices' choices+=EString ( "," choices+=EString)*
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'name'
		public Keyword getNameKeyword_1_1() { return cNameKeyword_1_1; }
		
		//name=EString
		public Assignment getNameAssignment_1_2() { return cNameAssignment_1_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_2_0() { return cNameEStringParserRuleCall_1_2_0; }
		
		//('description' description=EString )?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'description'
		public Keyword getDescriptionKeyword_1_3_0() { return cDescriptionKeyword_1_3_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_1_3_1() { return cDescriptionAssignment_1_3_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_1_3_1_0() { return cDescriptionEStringParserRuleCall_1_3_1_0; }
		
		//'choices'
		public Keyword getChoicesKeyword_1_4() { return cChoicesKeyword_1_4; }
		
		//choices+=EString
		public Assignment getChoicesAssignment_1_5() { return cChoicesAssignment_1_5; }
		
		//EString
		public RuleCall getChoicesEStringParserRuleCall_1_5_0() { return cChoicesEStringParserRuleCall_1_5_0; }
		
		//( "," choices+=EString)*
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//","
		public Keyword getCommaKeyword_1_6_0() { return cCommaKeyword_1_6_0; }
		
		//choices+=EString
		public Assignment getChoicesAssignment_1_6_1() { return cChoicesAssignment_1_6_1; }
		
		//EString
		public RuleCall getChoicesEStringParserRuleCall_1_6_1_0() { return cChoicesEStringParserRuleCall_1_6_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_7() { return cENDTerminalRuleCall_1_7; }
	}
	public class PasswordParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.PasswordParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPasswordParamKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cNameKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cNameAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_1_2_0 = (RuleCall)cNameAssignment_1_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cDescriptionKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_1_3_1_0 = (RuleCall)cDescriptionAssignment_1_3_1.eContents().get(0);
		private final Keyword cDefaultValueKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cDefaultValueAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cDefaultValueEStringParserRuleCall_1_5_0 = (RuleCall)cDefaultValueAssignment_1_5.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_6 = (RuleCall)cGroup_1.eContents().get(6);
		
		//PasswordParam returns PasswordParam:
		//    'PasswordParam'
		//    (BEGIN
		//        'name' name=EString
		//        ('description' description=EString )?
		//        'defaultValue' defaultValue=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'PasswordParam'
		//(BEGIN
		//    'name' name=EString
		//    ('description' description=EString )?
		//    'defaultValue' defaultValue=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'PasswordParam'
		public Keyword getPasswordParamKeyword_0() { return cPasswordParamKeyword_0; }
		
		//(BEGIN
		//    'name' name=EString
		//    ('description' description=EString )?
		//    'defaultValue' defaultValue=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'name'
		public Keyword getNameKeyword_1_1() { return cNameKeyword_1_1; }
		
		//name=EString
		public Assignment getNameAssignment_1_2() { return cNameAssignment_1_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_2_0() { return cNameEStringParserRuleCall_1_2_0; }
		
		//('description' description=EString )?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'description'
		public Keyword getDescriptionKeyword_1_3_0() { return cDescriptionKeyword_1_3_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_1_3_1() { return cDescriptionAssignment_1_3_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_1_3_1_0() { return cDescriptionEStringParserRuleCall_1_3_1_0; }
		
		//'defaultValue'
		public Keyword getDefaultValueKeyword_1_4() { return cDefaultValueKeyword_1_4; }
		
		//defaultValue=EString
		public Assignment getDefaultValueAssignment_1_5() { return cDefaultValueAssignment_1_5; }
		
		//EString
		public RuleCall getDefaultValueEStringParserRuleCall_1_5_0() { return cDefaultValueEStringParserRuleCall_1_5_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_6() { return cENDTerminalRuleCall_1_6; }
	}
	public class BooleanParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.BooleanParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBooleanParamKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cNameKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cNameAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_1_2_0 = (RuleCall)cNameAssignment_1_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cDescriptionKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_1_3_1_0 = (RuleCall)cDescriptionAssignment_1_3_1.eContents().get(0);
		private final Assignment cDefaultValueAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final Keyword cDefaultValueDefaultValueKeyword_1_4_0 = (Keyword)cDefaultValueAssignment_1_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_5 = (RuleCall)cGroup_1.eContents().get(5);
		
		//BooleanParam returns BooleanParam:
		//    'BooleanParam'
		//    (BEGIN
		//        'name' name=EString
		//        ('description' description=EString )?
		//        defaultValue?='defaultValue'
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'BooleanParam'
		//(BEGIN
		//    'name' name=EString
		//    ('description' description=EString )?
		//    defaultValue?='defaultValue'
		//END)
		public Group getGroup() { return cGroup; }
		
		//'BooleanParam'
		public Keyword getBooleanParamKeyword_0() { return cBooleanParamKeyword_0; }
		
		//(BEGIN
		//    'name' name=EString
		//    ('description' description=EString )?
		//    defaultValue?='defaultValue'
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'name'
		public Keyword getNameKeyword_1_1() { return cNameKeyword_1_1; }
		
		//name=EString
		public Assignment getNameAssignment_1_2() { return cNameAssignment_1_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_2_0() { return cNameEStringParserRuleCall_1_2_0; }
		
		//('description' description=EString )?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'description'
		public Keyword getDescriptionKeyword_1_3_0() { return cDescriptionKeyword_1_3_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_1_3_1() { return cDescriptionAssignment_1_3_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_1_3_1_0() { return cDescriptionEStringParserRuleCall_1_3_1_0; }
		
		//defaultValue?='defaultValue'
		public Assignment getDefaultValueAssignment_1_4() { return cDefaultValueAssignment_1_4; }
		
		//'defaultValue'
		public Keyword getDefaultValueDefaultValueKeyword_1_4_0() { return cDefaultValueDefaultValueKeyword_1_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_5() { return cENDTerminalRuleCall_1_5; }
	}
	public class NodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Node");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cLabelKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cLabelAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cLabelEStringParserRuleCall_1_2_0 = (RuleCall)cLabelAssignment_1_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cCustomWorkspaceKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cCustomWorkspaceAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cCustomWorkspaceEStringParserRuleCall_1_3_1_0 = (RuleCall)cCustomWorkspaceAssignment_1_3_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_4 = (RuleCall)cGroup_1.eContents().get(4);
		
		//Node returns Node:
		//    'Node'
		//    (BEGIN
		//        'label' label=EString
		//        ('customWorkspace' customWorkspace=EString)?
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Node'
		//(BEGIN
		//    'label' label=EString
		//    ('customWorkspace' customWorkspace=EString)?
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Node'
		public Keyword getNodeKeyword_0() { return cNodeKeyword_0; }
		
		//(BEGIN
		//    'label' label=EString
		//    ('customWorkspace' customWorkspace=EString)?
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'label'
		public Keyword getLabelKeyword_1_1() { return cLabelKeyword_1_1; }
		
		//label=EString
		public Assignment getLabelAssignment_1_2() { return cLabelAssignment_1_2; }
		
		//EString
		public RuleCall getLabelEStringParserRuleCall_1_2_0() { return cLabelEStringParserRuleCall_1_2_0; }
		
		//('customWorkspace' customWorkspace=EString)?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'customWorkspace'
		public Keyword getCustomWorkspaceKeyword_1_3_0() { return cCustomWorkspaceKeyword_1_3_0; }
		
		//customWorkspace=EString
		public Assignment getCustomWorkspaceAssignment_1_3_1() { return cCustomWorkspaceAssignment_1_3_1; }
		
		//EString
		public RuleCall getCustomWorkspaceEStringParserRuleCall_1_3_1_0() { return cCustomWorkspaceEStringParserRuleCall_1_3_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_4() { return cENDTerminalRuleCall_1_4; }
	}
	public class AnyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Any");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAnyAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAnyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Any returns Any:
		//    {Any}
		//    'Any'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Any}
		//'Any'
		public Group getGroup() { return cGroup; }
		
		//{Any}
		public Action getAnyAction_0() { return cAnyAction_0; }
		
		//'Any'
		public Keyword getAnyKeyword_1() { return cAnyKeyword_1; }
	}
	public class NoneElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.None");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNoneAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNoneKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//None returns None:
		//    {None}
		//    'None'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{None}
		//'None'
		public Group getGroup() { return cGroup; }
		
		//{None}
		public Action getNoneAction_0() { return cNoneAction_0; }
		
		//'None'
		public Keyword getNoneKeyword_1() { return cNoneKeyword_1; }
	}
	public class DockerfileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Dockerfile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDockerfileKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cFilenameKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cFilenameAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cFilenameEStringParserRuleCall_1_2_0 = (RuleCall)cFilenameAssignment_1_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cDirKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cDirAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cDirEStringParserRuleCall_1_3_1_0 = (RuleCall)cDirAssignment_1_3_1.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final Keyword cAdditionalBuildArgsKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Assignment cAdditionalBuildArgsAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cAdditionalBuildArgsEStringParserRuleCall_1_4_1_0 = (RuleCall)cAdditionalBuildArgsAssignment_1_4_1.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cGroup_1.eContents().get(5);
		private final Keyword cRegistryUrlKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Assignment cRegistryUrlAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final RuleCall cRegistryUrlEStringParserRuleCall_1_5_1_0 = (RuleCall)cRegistryUrlAssignment_1_5_1.eContents().get(0);
		private final Group cGroup_1_6 = (Group)cGroup_1.eContents().get(6);
		private final Keyword cRegistryCredentialsIdKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final Assignment cRegistryCredentialsIdAssignment_1_6_1 = (Assignment)cGroup_1_6.eContents().get(1);
		private final RuleCall cRegistryCredentialsIdEStringParserRuleCall_1_6_1_0 = (RuleCall)cRegistryCredentialsIdAssignment_1_6_1.eContents().get(0);
		private final Group cGroup_1_7 = (Group)cGroup_1.eContents().get(7);
		private final Keyword cLabelKeyword_1_7_0 = (Keyword)cGroup_1_7.eContents().get(0);
		private final Assignment cLabelAssignment_1_7_1 = (Assignment)cGroup_1_7.eContents().get(1);
		private final RuleCall cLabelEStringParserRuleCall_1_7_1_0 = (RuleCall)cLabelAssignment_1_7_1.eContents().get(0);
		private final Group cGroup_1_8 = (Group)cGroup_1.eContents().get(8);
		private final Keyword cCustomWorkspaceKeyword_1_8_0 = (Keyword)cGroup_1_8.eContents().get(0);
		private final Assignment cCustomWorkspaceAssignment_1_8_1 = (Assignment)cGroup_1_8.eContents().get(1);
		private final RuleCall cCustomWorkspaceEStringParserRuleCall_1_8_1_0 = (RuleCall)cCustomWorkspaceAssignment_1_8_1.eContents().get(0);
		private final Group cGroup_1_9 = (Group)cGroup_1.eContents().get(9);
		private final Keyword cReuseNodeKeyword_1_9_0 = (Keyword)cGroup_1_9.eContents().get(0);
		private final Assignment cReuseNodeAssignment_1_9_1 = (Assignment)cGroup_1_9.eContents().get(1);
		private final RuleCall cReuseNodeEStringParserRuleCall_1_9_1_0 = (RuleCall)cReuseNodeAssignment_1_9_1.eContents().get(0);
		private final Group cGroup_1_10 = (Group)cGroup_1.eContents().get(10);
		private final Keyword cArgsKeyword_1_10_0 = (Keyword)cGroup_1_10.eContents().get(0);
		private final Assignment cArgsAssignment_1_10_1 = (Assignment)cGroup_1_10.eContents().get(1);
		private final RuleCall cArgsEStringParserRuleCall_1_10_1_0 = (RuleCall)cArgsAssignment_1_10_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_11 = (RuleCall)cGroup_1.eContents().get(11);
		
		//Dockerfile returns Dockerfile:
		//    'Dockerfile'
		//    (BEGIN
		//        'filename' filename=EString
		//        ('dir' dir=EString )?
		//        ('additionalBuildArgs' additionalBuildArgs=EString )?
		//        ('registryUrl' registryUrl=EString )?
		//        ('registryCredentialsId' registryCredentialsId=EString )?
		//        ('label' label=EString )?
		//        ('customWorkspace' customWorkspace=EString )?
		//        ('reuseNode' reuseNode=EString )?
		//        ('args' args=EString)?
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Dockerfile'
		//(BEGIN
		//    'filename' filename=EString
		//    ('dir' dir=EString )?
		//    ('additionalBuildArgs' additionalBuildArgs=EString )?
		//    ('registryUrl' registryUrl=EString )?
		//    ('registryCredentialsId' registryCredentialsId=EString )?
		//    ('label' label=EString )?
		//    ('customWorkspace' customWorkspace=EString )?
		//    ('reuseNode' reuseNode=EString )?
		//    ('args' args=EString)?
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Dockerfile'
		public Keyword getDockerfileKeyword_0() { return cDockerfileKeyword_0; }
		
		//(BEGIN
		//    'filename' filename=EString
		//    ('dir' dir=EString )?
		//    ('additionalBuildArgs' additionalBuildArgs=EString )?
		//    ('registryUrl' registryUrl=EString )?
		//    ('registryCredentialsId' registryCredentialsId=EString )?
		//    ('label' label=EString )?
		//    ('customWorkspace' customWorkspace=EString )?
		//    ('reuseNode' reuseNode=EString )?
		//    ('args' args=EString)?
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'filename'
		public Keyword getFilenameKeyword_1_1() { return cFilenameKeyword_1_1; }
		
		//filename=EString
		public Assignment getFilenameAssignment_1_2() { return cFilenameAssignment_1_2; }
		
		//EString
		public RuleCall getFilenameEStringParserRuleCall_1_2_0() { return cFilenameEStringParserRuleCall_1_2_0; }
		
		//('dir' dir=EString )?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'dir'
		public Keyword getDirKeyword_1_3_0() { return cDirKeyword_1_3_0; }
		
		//dir=EString
		public Assignment getDirAssignment_1_3_1() { return cDirAssignment_1_3_1; }
		
		//EString
		public RuleCall getDirEStringParserRuleCall_1_3_1_0() { return cDirEStringParserRuleCall_1_3_1_0; }
		
		//('additionalBuildArgs' additionalBuildArgs=EString )?
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'additionalBuildArgs'
		public Keyword getAdditionalBuildArgsKeyword_1_4_0() { return cAdditionalBuildArgsKeyword_1_4_0; }
		
		//additionalBuildArgs=EString
		public Assignment getAdditionalBuildArgsAssignment_1_4_1() { return cAdditionalBuildArgsAssignment_1_4_1; }
		
		//EString
		public RuleCall getAdditionalBuildArgsEStringParserRuleCall_1_4_1_0() { return cAdditionalBuildArgsEStringParserRuleCall_1_4_1_0; }
		
		//('registryUrl' registryUrl=EString )?
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'registryUrl'
		public Keyword getRegistryUrlKeyword_1_5_0() { return cRegistryUrlKeyword_1_5_0; }
		
		//registryUrl=EString
		public Assignment getRegistryUrlAssignment_1_5_1() { return cRegistryUrlAssignment_1_5_1; }
		
		//EString
		public RuleCall getRegistryUrlEStringParserRuleCall_1_5_1_0() { return cRegistryUrlEStringParserRuleCall_1_5_1_0; }
		
		//('registryCredentialsId' registryCredentialsId=EString )?
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//'registryCredentialsId'
		public Keyword getRegistryCredentialsIdKeyword_1_6_0() { return cRegistryCredentialsIdKeyword_1_6_0; }
		
		//registryCredentialsId=EString
		public Assignment getRegistryCredentialsIdAssignment_1_6_1() { return cRegistryCredentialsIdAssignment_1_6_1; }
		
		//EString
		public RuleCall getRegistryCredentialsIdEStringParserRuleCall_1_6_1_0() { return cRegistryCredentialsIdEStringParserRuleCall_1_6_1_0; }
		
		//('label' label=EString )?
		public Group getGroup_1_7() { return cGroup_1_7; }
		
		//'label'
		public Keyword getLabelKeyword_1_7_0() { return cLabelKeyword_1_7_0; }
		
		//label=EString
		public Assignment getLabelAssignment_1_7_1() { return cLabelAssignment_1_7_1; }
		
		//EString
		public RuleCall getLabelEStringParserRuleCall_1_7_1_0() { return cLabelEStringParserRuleCall_1_7_1_0; }
		
		//('customWorkspace' customWorkspace=EString )?
		public Group getGroup_1_8() { return cGroup_1_8; }
		
		//'customWorkspace'
		public Keyword getCustomWorkspaceKeyword_1_8_0() { return cCustomWorkspaceKeyword_1_8_0; }
		
		//customWorkspace=EString
		public Assignment getCustomWorkspaceAssignment_1_8_1() { return cCustomWorkspaceAssignment_1_8_1; }
		
		//EString
		public RuleCall getCustomWorkspaceEStringParserRuleCall_1_8_1_0() { return cCustomWorkspaceEStringParserRuleCall_1_8_1_0; }
		
		//('reuseNode' reuseNode=EString )?
		public Group getGroup_1_9() { return cGroup_1_9; }
		
		//'reuseNode'
		public Keyword getReuseNodeKeyword_1_9_0() { return cReuseNodeKeyword_1_9_0; }
		
		//reuseNode=EString
		public Assignment getReuseNodeAssignment_1_9_1() { return cReuseNodeAssignment_1_9_1; }
		
		//EString
		public RuleCall getReuseNodeEStringParserRuleCall_1_9_1_0() { return cReuseNodeEStringParserRuleCall_1_9_1_0; }
		
		//('args' args=EString)?
		public Group getGroup_1_10() { return cGroup_1_10; }
		
		//'args'
		public Keyword getArgsKeyword_1_10_0() { return cArgsKeyword_1_10_0; }
		
		//args=EString
		public Assignment getArgsAssignment_1_10_1() { return cArgsAssignment_1_10_1; }
		
		//EString
		public RuleCall getArgsEStringParserRuleCall_1_10_1_0() { return cArgsEStringParserRuleCall_1_10_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_11() { return cENDTerminalRuleCall_1_11; }
	}
	public class DockerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Docker");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDockerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cImageKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cImageAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cImageEStringParserRuleCall_1_2_0 = (RuleCall)cImageAssignment_1_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cRegistryUrlKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cRegistryUrlAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cRegistryUrlEStringParserRuleCall_1_3_1_0 = (RuleCall)cRegistryUrlAssignment_1_3_1.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final Keyword cRegistryCredentialsIdKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Assignment cRegistryCredentialsIdAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cRegistryCredentialsIdEStringParserRuleCall_1_4_1_0 = (RuleCall)cRegistryCredentialsIdAssignment_1_4_1.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cGroup_1.eContents().get(5);
		private final Keyword cLabelKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Assignment cLabelAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final RuleCall cLabelEStringParserRuleCall_1_5_1_0 = (RuleCall)cLabelAssignment_1_5_1.eContents().get(0);
		private final Group cGroup_1_6 = (Group)cGroup_1.eContents().get(6);
		private final Keyword cCustomWorkspaceKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final Assignment cCustomWorkspaceAssignment_1_6_1 = (Assignment)cGroup_1_6.eContents().get(1);
		private final RuleCall cCustomWorkspaceEStringParserRuleCall_1_6_1_0 = (RuleCall)cCustomWorkspaceAssignment_1_6_1.eContents().get(0);
		private final Group cGroup_1_7 = (Group)cGroup_1.eContents().get(7);
		private final Keyword cReuseNodeKeyword_1_7_0 = (Keyword)cGroup_1_7.eContents().get(0);
		private final Assignment cReuseNodeAssignment_1_7_1 = (Assignment)cGroup_1_7.eContents().get(1);
		private final RuleCall cReuseNodeEStringParserRuleCall_1_7_1_0 = (RuleCall)cReuseNodeAssignment_1_7_1.eContents().get(0);
		private final Group cGroup_1_8 = (Group)cGroup_1.eContents().get(8);
		private final Keyword cArgsKeyword_1_8_0 = (Keyword)cGroup_1_8.eContents().get(0);
		private final Assignment cArgsAssignment_1_8_1 = (Assignment)cGroup_1_8.eContents().get(1);
		private final RuleCall cArgsEStringParserRuleCall_1_8_1_0 = (RuleCall)cArgsAssignment_1_8_1.eContents().get(0);
		private final Assignment cAlwaysPullAssignment_1_9 = (Assignment)cGroup_1.eContents().get(9);
		private final Keyword cAlwaysPullAlwaysPullKeyword_1_9_0 = (Keyword)cAlwaysPullAssignment_1_9.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_10 = (RuleCall)cGroup_1.eContents().get(10);
		
		//Docker returns Docker:
		//    'Docker'
		//    (BEGIN
		//        'image' image=EString
		//        ('registryUrl' registryUrl=EString) ?
		//        ('registryCredentialsId' registryCredentialsId=EString )?
		//        ('label' label=EString )?
		//        ('customWorkspace' customWorkspace=EString )?
		//        ('reuseNode' reuseNode=EString )?
		//        ('args' args=EString )?
		//        (alwaysPull?='alwaysPull')?
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Docker'
		//(BEGIN
		//    'image' image=EString
		//    ('registryUrl' registryUrl=EString) ?
		//    ('registryCredentialsId' registryCredentialsId=EString )?
		//    ('label' label=EString )?
		//    ('customWorkspace' customWorkspace=EString )?
		//    ('reuseNode' reuseNode=EString )?
		//    ('args' args=EString )?
		//    (alwaysPull?='alwaysPull')?
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Docker'
		public Keyword getDockerKeyword_0() { return cDockerKeyword_0; }
		
		//(BEGIN
		//    'image' image=EString
		//    ('registryUrl' registryUrl=EString) ?
		//    ('registryCredentialsId' registryCredentialsId=EString )?
		//    ('label' label=EString )?
		//    ('customWorkspace' customWorkspace=EString )?
		//    ('reuseNode' reuseNode=EString )?
		//    ('args' args=EString )?
		//    (alwaysPull?='alwaysPull')?
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'image'
		public Keyword getImageKeyword_1_1() { return cImageKeyword_1_1; }
		
		//image=EString
		public Assignment getImageAssignment_1_2() { return cImageAssignment_1_2; }
		
		//EString
		public RuleCall getImageEStringParserRuleCall_1_2_0() { return cImageEStringParserRuleCall_1_2_0; }
		
		//('registryUrl' registryUrl=EString) ?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'registryUrl'
		public Keyword getRegistryUrlKeyword_1_3_0() { return cRegistryUrlKeyword_1_3_0; }
		
		//registryUrl=EString
		public Assignment getRegistryUrlAssignment_1_3_1() { return cRegistryUrlAssignment_1_3_1; }
		
		//EString
		public RuleCall getRegistryUrlEStringParserRuleCall_1_3_1_0() { return cRegistryUrlEStringParserRuleCall_1_3_1_0; }
		
		//('registryCredentialsId' registryCredentialsId=EString )?
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'registryCredentialsId'
		public Keyword getRegistryCredentialsIdKeyword_1_4_0() { return cRegistryCredentialsIdKeyword_1_4_0; }
		
		//registryCredentialsId=EString
		public Assignment getRegistryCredentialsIdAssignment_1_4_1() { return cRegistryCredentialsIdAssignment_1_4_1; }
		
		//EString
		public RuleCall getRegistryCredentialsIdEStringParserRuleCall_1_4_1_0() { return cRegistryCredentialsIdEStringParserRuleCall_1_4_1_0; }
		
		//('label' label=EString )?
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'label'
		public Keyword getLabelKeyword_1_5_0() { return cLabelKeyword_1_5_0; }
		
		//label=EString
		public Assignment getLabelAssignment_1_5_1() { return cLabelAssignment_1_5_1; }
		
		//EString
		public RuleCall getLabelEStringParserRuleCall_1_5_1_0() { return cLabelEStringParserRuleCall_1_5_1_0; }
		
		//('customWorkspace' customWorkspace=EString )?
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//'customWorkspace'
		public Keyword getCustomWorkspaceKeyword_1_6_0() { return cCustomWorkspaceKeyword_1_6_0; }
		
		//customWorkspace=EString
		public Assignment getCustomWorkspaceAssignment_1_6_1() { return cCustomWorkspaceAssignment_1_6_1; }
		
		//EString
		public RuleCall getCustomWorkspaceEStringParserRuleCall_1_6_1_0() { return cCustomWorkspaceEStringParserRuleCall_1_6_1_0; }
		
		//('reuseNode' reuseNode=EString )?
		public Group getGroup_1_7() { return cGroup_1_7; }
		
		//'reuseNode'
		public Keyword getReuseNodeKeyword_1_7_0() { return cReuseNodeKeyword_1_7_0; }
		
		//reuseNode=EString
		public Assignment getReuseNodeAssignment_1_7_1() { return cReuseNodeAssignment_1_7_1; }
		
		//EString
		public RuleCall getReuseNodeEStringParserRuleCall_1_7_1_0() { return cReuseNodeEStringParserRuleCall_1_7_1_0; }
		
		//('args' args=EString )?
		public Group getGroup_1_8() { return cGroup_1_8; }
		
		//'args'
		public Keyword getArgsKeyword_1_8_0() { return cArgsKeyword_1_8_0; }
		
		//args=EString
		public Assignment getArgsAssignment_1_8_1() { return cArgsAssignment_1_8_1; }
		
		//EString
		public RuleCall getArgsEStringParserRuleCall_1_8_1_0() { return cArgsEStringParserRuleCall_1_8_1_0; }
		
		//(alwaysPull?='alwaysPull')?
		public Assignment getAlwaysPullAssignment_1_9() { return cAlwaysPullAssignment_1_9; }
		
		//'alwaysPull'
		public Keyword getAlwaysPullAlwaysPullKeyword_1_9_0() { return cAlwaysPullAlwaysPullKeyword_1_9_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_10() { return cENDTerminalRuleCall_1_10; }
	}
	public class LabelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Label");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLabelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cLabelKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cLabelAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cLabelEStringParserRuleCall_1_2_0 = (RuleCall)cLabelAssignment_1_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		
		//Label returns Label:
		//    'Label'
		//    (BEGIN
		//        'label' label=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Label'
		//(BEGIN
		//    'label' label=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Label'
		public Keyword getLabelKeyword_0() { return cLabelKeyword_0; }
		
		//(BEGIN
		//    'label' label=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'label'
		public Keyword getLabelKeyword_1_1() { return cLabelKeyword_1_1; }
		
		//label=EString
		public Assignment getLabelAssignment_1_2() { return cLabelAssignment_1_2; }
		
		//EString
		public RuleCall getLabelEStringParserRuleCall_1_2_0() { return cLabelEStringParserRuleCall_1_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3() { return cENDTerminalRuleCall_1_3; }
	}
	public class CronElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Cron");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCronKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cTimerKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cTimerAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cTimerEStringParserRuleCall_1_2_0 = (RuleCall)cTimerAssignment_1_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		
		//Cron returns Cron:
		//    'Cron'
		//    (BEGIN
		//        'timer' timer=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Cron'
		//(BEGIN
		//    'timer' timer=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Cron'
		public Keyword getCronKeyword_0() { return cCronKeyword_0; }
		
		//(BEGIN
		//    'timer' timer=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'timer'
		public Keyword getTimerKeyword_1_1() { return cTimerKeyword_1_1; }
		
		//timer=EString
		public Assignment getTimerAssignment_1_2() { return cTimerAssignment_1_2; }
		
		//EString
		public RuleCall getTimerEStringParserRuleCall_1_2_0() { return cTimerEStringParserRuleCall_1_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3() { return cENDTerminalRuleCall_1_3; }
	}
	public class PollSCMElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.PollSCM");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPollSCMKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cTimerKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cTimerAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cTimerEStringParserRuleCall_1_2_0 = (RuleCall)cTimerAssignment_1_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		
		//PollSCM returns PollSCM:
		//    'PollSCM'
		//    (BEGIN
		//        'timer' timer=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'PollSCM'
		//(BEGIN
		//    'timer' timer=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'PollSCM'
		public Keyword getPollSCMKeyword_0() { return cPollSCMKeyword_0; }
		
		//(BEGIN
		//    'timer' timer=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'timer'
		public Keyword getTimerKeyword_1_1() { return cTimerKeyword_1_1; }
		
		//timer=EString
		public Assignment getTimerAssignment_1_2() { return cTimerAssignment_1_2; }
		
		//EString
		public RuleCall getTimerEStringParserRuleCall_1_2_0() { return cTimerEStringParserRuleCall_1_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3() { return cENDTerminalRuleCall_1_3; }
	}
	public class UpstreamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.Upstream");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUpstreamKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cJobsKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cJobsAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cJobsEStringParserRuleCall_1_2_0 = (RuleCall)cJobsAssignment_1_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cCommaKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cJobsAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cJobsEStringParserRuleCall_1_3_1_0 = (RuleCall)cJobsAssignment_1_3_1.eContents().get(0);
		private final Keyword cThresholdKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cThresholdAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cThresholdEStringParserRuleCall_1_5_0 = (RuleCall)cThresholdAssignment_1_5.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_6 = (RuleCall)cGroup_1.eContents().get(6);
		
		//Upstream returns Upstream:
		//    'Upstream'
		//    (BEGIN
		//        'jobs' jobs+=EString ( "," jobs+=EString)*
		//        'threshold' threshold=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Upstream'
		//(BEGIN
		//    'jobs' jobs+=EString ( "," jobs+=EString)*
		//    'threshold' threshold=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Upstream'
		public Keyword getUpstreamKeyword_0() { return cUpstreamKeyword_0; }
		
		//(BEGIN
		//    'jobs' jobs+=EString ( "," jobs+=EString)*
		//    'threshold' threshold=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'jobs'
		public Keyword getJobsKeyword_1_1() { return cJobsKeyword_1_1; }
		
		//jobs+=EString
		public Assignment getJobsAssignment_1_2() { return cJobsAssignment_1_2; }
		
		//EString
		public RuleCall getJobsEStringParserRuleCall_1_2_0() { return cJobsEStringParserRuleCall_1_2_0; }
		
		//( "," jobs+=EString)*
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//","
		public Keyword getCommaKeyword_1_3_0() { return cCommaKeyword_1_3_0; }
		
		//jobs+=EString
		public Assignment getJobsAssignment_1_3_1() { return cJobsAssignment_1_3_1; }
		
		//EString
		public RuleCall getJobsEStringParserRuleCall_1_3_1_0() { return cJobsEStringParserRuleCall_1_3_1_0; }
		
		//'threshold'
		public Keyword getThresholdKeyword_1_4() { return cThresholdKeyword_1_4; }
		
		//threshold=EString
		public Assignment getThresholdAssignment_1_5() { return cThresholdAssignment_1_5; }
		
		//EString
		public RuleCall getThresholdEStringParserRuleCall_1_5_0() { return cThresholdEStringParserRuleCall_1_5_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_6() { return cENDTerminalRuleCall_1_6; }
	}
	public class BuildDiscarderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.BuildDiscarder");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBuildDiscarderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cNumToKeepStrKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cNumToKeepStrAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cNumToKeepStrEShortParserRuleCall_1_2_0 = (RuleCall)cNumToKeepStrAssignment_1_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		
		//BuildDiscarder returns BuildDiscarder:
		//    'BuildDiscarder'
		//    (BEGIN
		//        'numToKeepStr' numToKeepStr=EShort
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'BuildDiscarder'
		//(BEGIN
		//    'numToKeepStr' numToKeepStr=EShort
		//END)
		public Group getGroup() { return cGroup; }
		
		//'BuildDiscarder'
		public Keyword getBuildDiscarderKeyword_0() { return cBuildDiscarderKeyword_0; }
		
		//(BEGIN
		//    'numToKeepStr' numToKeepStr=EShort
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'numToKeepStr'
		public Keyword getNumToKeepStrKeyword_1_1() { return cNumToKeepStrKeyword_1_1; }
		
		//numToKeepStr=EShort
		public Assignment getNumToKeepStrAssignment_1_2() { return cNumToKeepStrAssignment_1_2; }
		
		//EShort
		public RuleCall getNumToKeepStrEShortParserRuleCall_1_2_0() { return cNumToKeepStrEShortParserRuleCall_1_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3() { return cENDTerminalRuleCall_1_3; }
	}
	public class CheckoutToSubdirectoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.CheckoutToSubdirectory");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCheckoutToSubdirectoryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cDirectoryKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cDirectoryAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cDirectoryEStringParserRuleCall_1_2_0 = (RuleCall)cDirectoryAssignment_1_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		
		//CheckoutToSubdirectory returns CheckoutToSubdirectory:
		//    'CheckoutToSubdirectory'
		//    (BEGIN
		//        'directory' directory=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'CheckoutToSubdirectory'
		//(BEGIN
		//    'directory' directory=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'CheckoutToSubdirectory'
		public Keyword getCheckoutToSubdirectoryKeyword_0() { return cCheckoutToSubdirectoryKeyword_0; }
		
		//(BEGIN
		//    'directory' directory=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'directory'
		public Keyword getDirectoryKeyword_1_1() { return cDirectoryKeyword_1_1; }
		
		//directory=EString
		public Assignment getDirectoryAssignment_1_2() { return cDirectoryAssignment_1_2; }
		
		//EString
		public RuleCall getDirectoryEStringParserRuleCall_1_2_0() { return cDirectoryEStringParserRuleCall_1_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3() { return cENDTerminalRuleCall_1_3; }
	}
	public class SkipStagesAfterUnstableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.SkipStagesAfterUnstable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSkipStagesAfterUnstableAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSkipStagesAfterUnstableKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//SkipStagesAfterUnstable returns SkipStagesAfterUnstable:
		//    {SkipStagesAfterUnstable}
		//    'SkipStagesAfterUnstable'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{SkipStagesAfterUnstable}
		//'SkipStagesAfterUnstable'
		public Group getGroup() { return cGroup; }
		
		//{SkipStagesAfterUnstable}
		public Action getSkipStagesAfterUnstableAction_0() { return cSkipStagesAfterUnstableAction_0; }
		
		//'SkipStagesAfterUnstable'
		public Keyword getSkipStagesAfterUnstableKeyword_1() { return cSkipStagesAfterUnstableKeyword_1; }
	}
	public class QuietPeriodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.QuietPeriod");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cQuietPeriodAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cQuietPeriodKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Keyword cPeriodKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cPeriodAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cPeriodEShortParserRuleCall_2_2_0 = (RuleCall)cPeriodAssignment_2_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		
		//QuietPeriod returns QuietPeriod:
		//    {QuietPeriod} 'QuietPeriod'
		//    (BEGIN
		//        'period' period=EShort
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//{QuietPeriod} 'QuietPeriod'
		//(BEGIN
		//    'period' period=EShort
		//END)
		public Group getGroup() { return cGroup; }
		
		//{QuietPeriod}
		public Action getQuietPeriodAction_0() { return cQuietPeriodAction_0; }
		
		//'QuietPeriod'
		public Keyword getQuietPeriodKeyword_1() { return cQuietPeriodKeyword_1; }
		
		//(BEGIN
		//    'period' period=EShort
		//END)
		public Group getGroup_2() { return cGroup_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_0() { return cBEGINTerminalRuleCall_2_0; }
		
		//'period'
		public Keyword getPeriodKeyword_2_1() { return cPeriodKeyword_2_1; }
		
		//period=EShort
		public Assignment getPeriodAssignment_2_2() { return cPeriodAssignment_2_2; }
		
		//EShort
		public RuleCall getPeriodEShortParserRuleCall_2_2_0() { return cPeriodEShortParserRuleCall_2_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_3() { return cENDTerminalRuleCall_2_3; }
	}
	public class PreserveStashesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.PreserveStashes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPreserveStashesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPreserveStashesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cBuildCountKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cBuildCountAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cBuildCountEStringParserRuleCall_2_1_1_0 = (RuleCall)cBuildCountAssignment_2_1_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_2 = (RuleCall)cGroup_2.eContents().get(2);
		
		//PreserveStashes returns PreserveStashes:
		//    {PreserveStashes}
		//    'PreserveStashes'
		//    (BEGIN
		//        ('buildCount' buildCount=EString)?
		//    END)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{PreserveStashes}
		//'PreserveStashes'
		//(BEGIN
		//    ('buildCount' buildCount=EString)?
		//END)?
		public Group getGroup() { return cGroup; }
		
		//{PreserveStashes}
		public Action getPreserveStashesAction_0() { return cPreserveStashesAction_0; }
		
		//'PreserveStashes'
		public Keyword getPreserveStashesKeyword_1() { return cPreserveStashesKeyword_1; }
		
		//(BEGIN
		//    ('buildCount' buildCount=EString)?
		//END)?
		public Group getGroup_2() { return cGroup_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_0() { return cBEGINTerminalRuleCall_2_0; }
		
		//('buildCount' buildCount=EString)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'buildCount'
		public Keyword getBuildCountKeyword_2_1_0() { return cBuildCountKeyword_2_1_0; }
		
		//buildCount=EString
		public Assignment getBuildCountAssignment_2_1_1() { return cBuildCountAssignment_2_1_1; }
		
		//EString
		public RuleCall getBuildCountEStringParserRuleCall_2_1_1_0() { return cBuildCountEStringParserRuleCall_2_1_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_2() { return cENDTerminalRuleCall_2_2; }
	}
	public class ParallelsAlwaysFailFastElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.ParallelsAlwaysFailFast");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParallelsAlwaysFailFastAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cParallelsAlwaysFailFastKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ParallelsAlwaysFailFast returns ParallelsAlwaysFailFast:
		//    {ParallelsAlwaysFailFast}
		//    'ParallelsAlwaysFailFast'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{ParallelsAlwaysFailFast}
		//'ParallelsAlwaysFailFast'
		public Group getGroup() { return cGroup; }
		
		//{ParallelsAlwaysFailFast}
		public Action getParallelsAlwaysFailFastAction_0() { return cParallelsAlwaysFailFastAction_0; }
		
		//'ParallelsAlwaysFailFast'
		public Keyword getParallelsAlwaysFailFastKeyword_1() { return cParallelsAlwaysFailFastKeyword_1; }
	}
	public class DisableRestartFromStageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.DisableRestartFromStage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDisableRestartFromStageAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDisableRestartFromStageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//DisableRestartFromStage returns DisableRestartFromStage:
		//    {DisableRestartFromStage}
		//    'DisableRestartFromStage'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{DisableRestartFromStage}
		//'DisableRestartFromStage'
		public Group getGroup() { return cGroup; }
		
		//{DisableRestartFromStage}
		public Action getDisableRestartFromStageAction_0() { return cDisableRestartFromStageAction_0; }
		
		//'DisableRestartFromStage'
		public Keyword getDisableRestartFromStageKeyword_1() { return cDisableRestartFromStageKeyword_1; }
	}
	public class DisableResumeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.DisableResume");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDisableResumeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDisableResumeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//DisableResume returns DisableResume:
		//    {DisableResume}
		//    'DisableResume'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{DisableResume}
		//'DisableResume'
		public Group getGroup() { return cGroup; }
		
		//{DisableResume}
		public Action getDisableResumeAction_0() { return cDisableResumeAction_0; }
		
		//'DisableResume'
		public Keyword getDisableResumeKeyword_1() { return cDisableResumeKeyword_1; }
	}
	public class OverrideIndexTriggersElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.OverrideIndexTriggers");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOverrideIndexTriggersAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cOverrideIndexTriggersKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cOverrideAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final Keyword cOverrideOverrideKeyword_2_1_0 = (Keyword)cOverrideAssignment_2_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_2 = (RuleCall)cGroup_2.eContents().get(2);
		
		//OverrideIndexTriggers returns OverrideIndexTriggers:
		//    {OverrideIndexTriggers} 'OverrideIndexTriggers'
		//    (BEGIN
		//        override?='override'
		//    END)
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{OverrideIndexTriggers} 'OverrideIndexTriggers'
		//(BEGIN
		//    override?='override'
		//END)
		public Group getGroup() { return cGroup; }
		
		//{OverrideIndexTriggers}
		public Action getOverrideIndexTriggersAction_0() { return cOverrideIndexTriggersAction_0; }
		
		//'OverrideIndexTriggers'
		public Keyword getOverrideIndexTriggersKeyword_1() { return cOverrideIndexTriggersKeyword_1; }
		
		//(BEGIN
		//    override?='override'
		//END)
		public Group getGroup_2() { return cGroup_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_0() { return cBEGINTerminalRuleCall_2_0; }
		
		//override?='override'
		public Assignment getOverrideAssignment_2_1() { return cOverrideAssignment_2_1; }
		
		//'override'
		public Keyword getOverrideOverrideKeyword_2_1_0() { return cOverrideOverrideKeyword_2_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_2() { return cENDTerminalRuleCall_2_2; }
	}
	public class NewContainerPerStageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.NewContainerPerStage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNewContainerPerStageAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNewContainerPerStageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//NewContainerPerStage returns NewContainerPerStage:
		//    {NewContainerPerStage}
		//    'NewContainerPerStage'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{NewContainerPerStage}
		//'NewContainerPerStage'
		public Group getGroup() { return cGroup; }
		
		//{NewContainerPerStage}
		public Action getNewContainerPerStageAction_0() { return cNewContainerPerStageAction_0; }
		
		//'NewContainerPerStage'
		public Keyword getNewContainerPerStageKeyword_1() { return cNewContainerPerStageKeyword_1; }
	}
	public class DisableConcurrentBuildsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.DisableConcurrentBuilds");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDisableConcurrentBuildsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDisableConcurrentBuildsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cAbortAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final Keyword cAbortAbortKeyword_2_1_0 = (Keyword)cAbortAssignment_2_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_2 = (RuleCall)cGroup_2.eContents().get(2);
		
		//DisableConcurrentBuilds returns DisableConcurrentBuilds:
		//    {DisableConcurrentBuilds} 'DisableConcurrentBuilds'
		//    (BEGIN
		//        abort?='abort'
		//    END)
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{DisableConcurrentBuilds} 'DisableConcurrentBuilds'
		//(BEGIN
		//    abort?='abort'
		//END)
		public Group getGroup() { return cGroup; }
		
		//{DisableConcurrentBuilds}
		public Action getDisableConcurrentBuildsAction_0() { return cDisableConcurrentBuildsAction_0; }
		
		//'DisableConcurrentBuilds'
		public Keyword getDisableConcurrentBuildsKeyword_1() { return cDisableConcurrentBuildsKeyword_1; }
		
		//(BEGIN
		//    abort?='abort'
		//END)
		public Group getGroup_2() { return cGroup_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_0() { return cBEGINTerminalRuleCall_2_0; }
		
		//abort?='abort'
		public Assignment getAbortAssignment_2_1() { return cAbortAssignment_2_1; }
		
		//'abort'
		public Keyword getAbortAbortKeyword_2_1_0() { return cAbortAbortKeyword_2_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_2() { return cENDTerminalRuleCall_2_2; }
	}
	
	public class COMPARATOR_TYPEElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.COMPARATOR_TYPE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNoneEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNoneNoneKeyword_0_0 = (Keyword)cNoneEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cGlobEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cGlobGlobKeyword_1_0 = (Keyword)cGlobEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cRegexpEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cRegexpRegexpKeyword_2_0 = (Keyword)cRegexpEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cEqualsEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cEqualsEqualsKeyword_3_0 = (Keyword)cEqualsEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum COMPARATOR_TYPE returns COMPARATOR_TYPE:
		//                none = 'none' | glob = 'glob' | regexp = 'regexp' | equals = 'equals';
		public EnumRule getRule() { return rule; }
		
		//none = 'none' | glob = 'glob' | regexp = 'regexp' | equals = 'equals'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//none = 'none'
		public EnumLiteralDeclaration getNoneEnumLiteralDeclaration_0() { return cNoneEnumLiteralDeclaration_0; }
		
		//'none'
		public Keyword getNoneNoneKeyword_0_0() { return cNoneNoneKeyword_0_0; }
		
		//glob = 'glob'
		public EnumLiteralDeclaration getGlobEnumLiteralDeclaration_1() { return cGlobEnumLiteralDeclaration_1; }
		
		//'glob'
		public Keyword getGlobGlobKeyword_1_0() { return cGlobGlobKeyword_1_0; }
		
		//regexp = 'regexp'
		public EnumLiteralDeclaration getRegexpEnumLiteralDeclaration_2() { return cRegexpEnumLiteralDeclaration_2; }
		
		//'regexp'
		public Keyword getRegexpRegexpKeyword_2_0() { return cRegexpRegexpKeyword_2_0; }
		
		//equals = 'equals'
		public EnumLiteralDeclaration getEqualsEnumLiteralDeclaration_3() { return cEqualsEnumLiteralDeclaration_3; }
		
		//'equals'
		public Keyword getEqualsEqualsKeyword_3_0() { return cEqualsEqualsKeyword_3_0; }
	}
	public class ATTRIBUTE_TYPEElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.ATTRIBUTE_TYPE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTargetEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTargetTargetKeyword_0_0 = (Keyword)cTargetEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cBranchEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cBranchBranchKeyword_1_0 = (Keyword)cBranchEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cForkEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cForkForkKeyword_2_0 = (Keyword)cForkEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cUrlEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cUrlUrlKeyword_3_0 = (Keyword)cUrlEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cTitleEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cTitleTitleKeyword_4_0 = (Keyword)cTitleEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cAuthorEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cAuthorAuthorKeyword_5_0 = (Keyword)cAuthorEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cAuthorDisplayNameEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cAuthorDisplayNameAuthorDisplayNameKeyword_6_0 = (Keyword)cAuthorDisplayNameEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cAuthorEmailEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cAuthorEmailAuthorEmailKeyword_7_0 = (Keyword)cAuthorEmailEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cIdEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cIdIdKeyword_8_0 = (Keyword)cIdEnumLiteralDeclaration_8.eContents().get(0);
		
		//enum ATTRIBUTE_TYPE returns ATTRIBUTE_TYPE:
		//                target = 'target' | branch = 'branch' | fork = 'fork' | url = 'url' | title = 'title' | author = 'author' | authorDisplayName = 'authorDisplayName' | authorEmail = 'authorEmail' | id = 'id';
		public EnumRule getRule() { return rule; }
		
		//target = 'target' | branch = 'branch' | fork = 'fork' | url = 'url' | title = 'title' | author = 'author' | authorDisplayName = 'authorDisplayName' | authorEmail = 'authorEmail' | id = 'id'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//target = 'target'
		public EnumLiteralDeclaration getTargetEnumLiteralDeclaration_0() { return cTargetEnumLiteralDeclaration_0; }
		
		//'target'
		public Keyword getTargetTargetKeyword_0_0() { return cTargetTargetKeyword_0_0; }
		
		//branch = 'branch'
		public EnumLiteralDeclaration getBranchEnumLiteralDeclaration_1() { return cBranchEnumLiteralDeclaration_1; }
		
		//'branch'
		public Keyword getBranchBranchKeyword_1_0() { return cBranchBranchKeyword_1_0; }
		
		//fork = 'fork'
		public EnumLiteralDeclaration getForkEnumLiteralDeclaration_2() { return cForkEnumLiteralDeclaration_2; }
		
		//'fork'
		public Keyword getForkForkKeyword_2_0() { return cForkForkKeyword_2_0; }
		
		//url = 'url'
		public EnumLiteralDeclaration getUrlEnumLiteralDeclaration_3() { return cUrlEnumLiteralDeclaration_3; }
		
		//'url'
		public Keyword getUrlUrlKeyword_3_0() { return cUrlUrlKeyword_3_0; }
		
		//title = 'title'
		public EnumLiteralDeclaration getTitleEnumLiteralDeclaration_4() { return cTitleEnumLiteralDeclaration_4; }
		
		//'title'
		public Keyword getTitleTitleKeyword_4_0() { return cTitleTitleKeyword_4_0; }
		
		//author = 'author'
		public EnumLiteralDeclaration getAuthorEnumLiteralDeclaration_5() { return cAuthorEnumLiteralDeclaration_5; }
		
		//'author'
		public Keyword getAuthorAuthorKeyword_5_0() { return cAuthorAuthorKeyword_5_0; }
		
		//authorDisplayName = 'authorDisplayName'
		public EnumLiteralDeclaration getAuthorDisplayNameEnumLiteralDeclaration_6() { return cAuthorDisplayNameEnumLiteralDeclaration_6; }
		
		//'authorDisplayName'
		public Keyword getAuthorDisplayNameAuthorDisplayNameKeyword_6_0() { return cAuthorDisplayNameAuthorDisplayNameKeyword_6_0; }
		
		//authorEmail = 'authorEmail'
		public EnumLiteralDeclaration getAuthorEmailEnumLiteralDeclaration_7() { return cAuthorEmailEnumLiteralDeclaration_7; }
		
		//'authorEmail'
		public Keyword getAuthorEmailAuthorEmailKeyword_7_0() { return cAuthorEmailAuthorEmailKeyword_7_0; }
		
		//id = 'id'
		public EnumLiteralDeclaration getIdEnumLiteralDeclaration_8() { return cIdEnumLiteralDeclaration_8; }
		
		//'id'
		public Keyword getIdIdKeyword_8_0() { return cIdIdKeyword_8_0; }
	}
	public class POST_TYPEElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.POST_TYPE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAlwaysEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAlwaysAlwaysKeyword_0_0 = (Keyword)cAlwaysEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cChangedEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cChangedChangedKeyword_1_0 = (Keyword)cChangedEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cFixedEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cFixedFixedKeyword_2_0 = (Keyword)cFixedEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cRegressionEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cRegressionRegressionKeyword_3_0 = (Keyword)cRegressionEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cAbortedEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cAbortedAbortedKeyword_4_0 = (Keyword)cAbortedEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cFailureEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cFailureFailureKeyword_5_0 = (Keyword)cFailureEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cSuccessEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cSuccessSuccessKeyword_6_0 = (Keyword)cSuccessEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cUnstableEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cUnstableUnstableKeyword_7_0 = (Keyword)cUnstableEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cUnsuccessfulEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cUnsuccessfulUnsuccessfulKeyword_8_0 = (Keyword)cUnsuccessfulEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cCleanupEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cCleanupCleanupKeyword_9_0 = (Keyword)cCleanupEnumLiteralDeclaration_9.eContents().get(0);
		
		//enum POST_TYPE returns POST_TYPE:
		//                always = 'always' | changed = 'changed' | fixed = 'fixed' | regression = 'regression' | aborted = 'aborted' | failure = 'failure' | success = 'success' | unstable = 'unstable' | unsuccessful = 'unsuccessful' | cleanup = 'cleanup';
		public EnumRule getRule() { return rule; }
		
		//always = 'always' | changed = 'changed' | fixed = 'fixed' | regression = 'regression' | aborted = 'aborted' | failure = 'failure' | success = 'success' | unstable = 'unstable' | unsuccessful = 'unsuccessful' | cleanup = 'cleanup'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//always = 'always'
		public EnumLiteralDeclaration getAlwaysEnumLiteralDeclaration_0() { return cAlwaysEnumLiteralDeclaration_0; }
		
		//'always'
		public Keyword getAlwaysAlwaysKeyword_0_0() { return cAlwaysAlwaysKeyword_0_0; }
		
		//changed = 'changed'
		public EnumLiteralDeclaration getChangedEnumLiteralDeclaration_1() { return cChangedEnumLiteralDeclaration_1; }
		
		//'changed'
		public Keyword getChangedChangedKeyword_1_0() { return cChangedChangedKeyword_1_0; }
		
		//fixed = 'fixed'
		public EnumLiteralDeclaration getFixedEnumLiteralDeclaration_2() { return cFixedEnumLiteralDeclaration_2; }
		
		//'fixed'
		public Keyword getFixedFixedKeyword_2_0() { return cFixedFixedKeyword_2_0; }
		
		//regression = 'regression'
		public EnumLiteralDeclaration getRegressionEnumLiteralDeclaration_3() { return cRegressionEnumLiteralDeclaration_3; }
		
		//'regression'
		public Keyword getRegressionRegressionKeyword_3_0() { return cRegressionRegressionKeyword_3_0; }
		
		//aborted = 'aborted'
		public EnumLiteralDeclaration getAbortedEnumLiteralDeclaration_4() { return cAbortedEnumLiteralDeclaration_4; }
		
		//'aborted'
		public Keyword getAbortedAbortedKeyword_4_0() { return cAbortedAbortedKeyword_4_0; }
		
		//failure = 'failure'
		public EnumLiteralDeclaration getFailureEnumLiteralDeclaration_5() { return cFailureEnumLiteralDeclaration_5; }
		
		//'failure'
		public Keyword getFailureFailureKeyword_5_0() { return cFailureFailureKeyword_5_0; }
		
		//success = 'success'
		public EnumLiteralDeclaration getSuccessEnumLiteralDeclaration_6() { return cSuccessEnumLiteralDeclaration_6; }
		
		//'success'
		public Keyword getSuccessSuccessKeyword_6_0() { return cSuccessSuccessKeyword_6_0; }
		
		//unstable = 'unstable'
		public EnumLiteralDeclaration getUnstableEnumLiteralDeclaration_7() { return cUnstableEnumLiteralDeclaration_7; }
		
		//'unstable'
		public Keyword getUnstableUnstableKeyword_7_0() { return cUnstableUnstableKeyword_7_0; }
		
		//unsuccessful = 'unsuccessful'
		public EnumLiteralDeclaration getUnsuccessfulEnumLiteralDeclaration_8() { return cUnsuccessfulEnumLiteralDeclaration_8; }
		
		//'unsuccessful'
		public Keyword getUnsuccessfulUnsuccessfulKeyword_8_0() { return cUnsuccessfulUnsuccessfulKeyword_8_0; }
		
		//cleanup = 'cleanup'
		public EnumLiteralDeclaration getCleanupEnumLiteralDeclaration_9() { return cCleanupEnumLiteralDeclaration_9; }
		
		//'cleanup'
		public Keyword getCleanupCleanupKeyword_9_0() { return cCleanupCleanupKeyword_9_0; }
	}
	public class TOOL_TYPEElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.TOOL_TYPE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMavenEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMavenMavenKeyword_0_0 = (Keyword)cMavenEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cJdkEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cJdkJdkKeyword_1_0 = (Keyword)cJdkEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cGradleEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cGradleGradleKeyword_2_0 = (Keyword)cGradleEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum TOOL_TYPE returns TOOL_TYPE:
		//                maven = 'maven' | jdk = 'jdk' | gradle = 'gradle';
		public EnumRule getRule() { return rule; }
		
		//maven = 'maven' | jdk = 'jdk' | gradle = 'gradle'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//maven = 'maven'
		public EnumLiteralDeclaration getMavenEnumLiteralDeclaration_0() { return cMavenEnumLiteralDeclaration_0; }
		
		//'maven'
		public Keyword getMavenMavenKeyword_0_0() { return cMavenMavenKeyword_0_0; }
		
		//jdk = 'jdk'
		public EnumLiteralDeclaration getJdkEnumLiteralDeclaration_1() { return cJdkEnumLiteralDeclaration_1; }
		
		//'jdk'
		public Keyword getJdkJdkKeyword_1_0() { return cJdkJdkKeyword_1_0; }
		
		//gradle = 'gradle'
		public EnumLiteralDeclaration getGradleEnumLiteralDeclaration_2() { return cGradleEnumLiteralDeclaration_2; }
		
		//'gradle'
		public Keyword getGradleGradleKeyword_2_0() { return cGradleGradleKeyword_2_0; }
	}
	
	private final PipelineElements pPipeline;
	private final Parameter_DirectiveElements pParameter_Directive;
	private final AgentElements pAgent;
	private final TriggerElements pTrigger;
	private final OptionElements pOption;
	private final WhenElements pWhen;
	private final StageOptionElements pStageOption;
	private final EnvironmentElements pEnvironment;
	private final StageElements pStage;
	private final PostElements pPost;
	private final ToolElements pTool;
	private final EStringElements pEString;
	private final StepElements pStep;
	private final InputElements pInput;
	private final EBooleanElements pEBoolean;
	private final MatrixElements pMatrix;
	private final CommandElements pCommand;
	private final Step_ParameterElements pStep_Parameter;
	private final BuildingTagElements pBuildingTag;
	private final BranchElements pBranch;
	private final ChangelogElements pChangelog;
	private final TriggeredByElements pTriggeredBy;
	private final ExpressionElements pExpression;
	private final ChangeSetElements pChangeSet;
	private final NotElements pNot;
	private final AnyOfElements pAnyOf;
	private final TagElements pTag;
	private final When_EnvElements pWhen_Env;
	private final AllOfElements pAllOf;
	private final EqualsElements pEquals;
	private final ChangeRequestElements pChangeRequest;
	private final COMPARATOR_TYPEElements eCOMPARATOR_TYPE;
	private final ATTRIBUTE_TYPEElements eATTRIBUTE_TYPE;
	private final SkipDefaultCheckoutElements pSkipDefaultCheckout;
	private final RetryElements pRetry;
	private final TimeoutElements pTimeout;
	private final TimestampsElements pTimestamps;
	private final EShortElements pEShort;
	private final AxisElements pAxis;
	private final POST_TYPEElements ePOST_TYPE;
	private final StringParamElements pStringParam;
	private final TextParamElements pTextParam;
	private final ChoiceParamElements pChoiceParam;
	private final PasswordParamElements pPasswordParam;
	private final BooleanParamElements pBooleanParam;
	private final TOOL_TYPEElements eTOOL_TYPE;
	private final NodeElements pNode;
	private final AnyElements pAny;
	private final NoneElements pNone;
	private final DockerfileElements pDockerfile;
	private final DockerElements pDocker;
	private final LabelElements pLabel;
	private final CronElements pCron;
	private final PollSCMElements pPollSCM;
	private final UpstreamElements pUpstream;
	private final BuildDiscarderElements pBuildDiscarder;
	private final CheckoutToSubdirectoryElements pCheckoutToSubdirectory;
	private final SkipStagesAfterUnstableElements pSkipStagesAfterUnstable;
	private final QuietPeriodElements pQuietPeriod;
	private final PreserveStashesElements pPreserveStashes;
	private final ParallelsAlwaysFailFastElements pParallelsAlwaysFailFast;
	private final DisableRestartFromStageElements pDisableRestartFromStage;
	private final DisableResumeElements pDisableResume;
	private final OverrideIndexTriggersElements pOverrideIndexTriggers;
	private final NewContainerPerStageElements pNewContainerPerStage;
	private final DisableConcurrentBuildsElements pDisableConcurrentBuilds;
	private final TerminalRule tNEWLINE;
	private final TerminalRule tBEGIN;
	private final TerminalRule tEND;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public JenkinsGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pPipeline = new PipelineElements();
		this.pParameter_Directive = new Parameter_DirectiveElements();
		this.pAgent = new AgentElements();
		this.pTrigger = new TriggerElements();
		this.pOption = new OptionElements();
		this.pWhen = new WhenElements();
		this.pStageOption = new StageOptionElements();
		this.pEnvironment = new EnvironmentElements();
		this.pStage = new StageElements();
		this.pPost = new PostElements();
		this.pTool = new ToolElements();
		this.pEString = new EStringElements();
		this.pStep = new StepElements();
		this.pInput = new InputElements();
		this.pEBoolean = new EBooleanElements();
		this.pMatrix = new MatrixElements();
		this.pCommand = new CommandElements();
		this.pStep_Parameter = new Step_ParameterElements();
		this.pBuildingTag = new BuildingTagElements();
		this.pBranch = new BranchElements();
		this.pChangelog = new ChangelogElements();
		this.pTriggeredBy = new TriggeredByElements();
		this.pExpression = new ExpressionElements();
		this.pChangeSet = new ChangeSetElements();
		this.pNot = new NotElements();
		this.pAnyOf = new AnyOfElements();
		this.pTag = new TagElements();
		this.pWhen_Env = new When_EnvElements();
		this.pAllOf = new AllOfElements();
		this.pEquals = new EqualsElements();
		this.pChangeRequest = new ChangeRequestElements();
		this.eCOMPARATOR_TYPE = new COMPARATOR_TYPEElements();
		this.eATTRIBUTE_TYPE = new ATTRIBUTE_TYPEElements();
		this.pSkipDefaultCheckout = new SkipDefaultCheckoutElements();
		this.pRetry = new RetryElements();
		this.pTimeout = new TimeoutElements();
		this.pTimestamps = new TimestampsElements();
		this.pEShort = new EShortElements();
		this.pAxis = new AxisElements();
		this.ePOST_TYPE = new POST_TYPEElements();
		this.pStringParam = new StringParamElements();
		this.pTextParam = new TextParamElements();
		this.pChoiceParam = new ChoiceParamElements();
		this.pPasswordParam = new PasswordParamElements();
		this.pBooleanParam = new BooleanParamElements();
		this.eTOOL_TYPE = new TOOL_TYPEElements();
		this.pNode = new NodeElements();
		this.pAny = new AnyElements();
		this.pNone = new NoneElements();
		this.pDockerfile = new DockerfileElements();
		this.pDocker = new DockerElements();
		this.pLabel = new LabelElements();
		this.pCron = new CronElements();
		this.pPollSCM = new PollSCMElements();
		this.pUpstream = new UpstreamElements();
		this.pBuildDiscarder = new BuildDiscarderElements();
		this.pCheckoutToSubdirectory = new CheckoutToSubdirectoryElements();
		this.pSkipStagesAfterUnstable = new SkipStagesAfterUnstableElements();
		this.pQuietPeriod = new QuietPeriodElements();
		this.pPreserveStashes = new PreserveStashesElements();
		this.pParallelsAlwaysFailFast = new ParallelsAlwaysFailFastElements();
		this.pDisableRestartFromStage = new DisableRestartFromStageElements();
		this.pDisableResume = new DisableResumeElements();
		this.pOverrideIndexTriggers = new OverrideIndexTriggersElements();
		this.pNewContainerPerStage = new NewContainerPerStageElements();
		this.pDisableConcurrentBuilds = new DisableConcurrentBuildsElements();
		this.tNEWLINE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.NEWLINE");
		this.tBEGIN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.BEGIN");
		this.tEND = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.jenkins.Jenkins.END");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.jenkins.Jenkins".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Pipeline returns Pipeline:
	//    'Pipeline' NEWLINE
	//    ((agents+=Agent)+ NEWLINE?)
	//    ((options+=Option)+ NEWLINE?)?
	//    ((triggers+=Trigger)+ NEWLINE?)?
	//    ((parameter_directives+=Parameter_Directive)+ NEWLINE?)?
	//    ((environments+=Environment)+ NEWLINE?)?
	//    ((tools+=Tool)+ NEWLINE?)?
	//    ((stages+=Stage)+ NEWLINE?)
	//    ((post+=Post)+ NEWLINE?)?
	//;
	public PipelineElements getPipelineAccess() {
		return pPipeline;
	}
	
	public ParserRule getPipelineRule() {
		return getPipelineAccess().getRule();
	}
	
	//Parameter_Directive returns Parameter_Directive:
	//    StringParam | TextParam | ChoiceParam | PasswordParam | BooleanParam;
	public Parameter_DirectiveElements getParameter_DirectiveAccess() {
		return pParameter_Directive;
	}
	
	public ParserRule getParameter_DirectiveRule() {
		return getParameter_DirectiveAccess().getRule();
	}
	
	//Agent returns Agent:
	//    Node | Any | None | Dockerfile | Docker | Label;
	public AgentElements getAgentAccess() {
		return pAgent;
	}
	
	public ParserRule getAgentRule() {
		return getAgentAccess().getRule();
	}
	
	//Trigger returns Trigger:
	//    Cron | PollSCM | Upstream;
	public TriggerElements getTriggerAccess() {
		return pTrigger;
	}
	
	public ParserRule getTriggerRule() {
		return getTriggerAccess().getRule();
	}
	
	//Option returns Option:
	//    BuildDiscarder | CheckoutToSubdirectory | SkipStagesAfterUnstable | SkipDefaultCheckout | Retry | QuietPeriod | PreserveStashes | Timeout | ParallelsAlwaysFailFast | Timestamps | DisableRestartFromStage | DisableResume | OverrideIndexTriggers | NewContainerPerStage | DisableConcurrentBuilds;
	public OptionElements getOptionAccess() {
		return pOption;
	}
	
	public ParserRule getOptionRule() {
		return getOptionAccess().getRule();
	}
	
	//When returns When:
	//    BuildingTag | Branch | Changelog | TriggeredBy | Expression | ChangeSet | Not | AnyOf | Tag | When_Env | AllOf | Equals | ChangeRequest;
	public WhenElements getWhenAccess() {
		return pWhen;
	}
	
	public ParserRule getWhenRule() {
		return getWhenAccess().getRule();
	}
	
	//StageOption returns StageOption:
	//    SkipDefaultCheckout | Retry | Timeout | Timestamps;
	public StageOptionElements getStageOptionAccess() {
		return pStageOption;
	}
	
	public ParserRule getStageOptionRule() {
		return getStageOptionAccess().getRule();
	}
	
	//Environment returns Environment:
	//    'Environment'
	//    (BEGIN
	//        'key' key=EString
	//        'value' value=EString
	//    END);
	public EnvironmentElements getEnvironmentAccess() {
		return pEnvironment;
	}
	
	public ParserRule getEnvironmentRule() {
		return getEnvironmentAccess().getRule();
	}
	
	//Stage returns Stage:
	//    'Stage'
	//    (BEGIN
	//        'name' name=EString
	//        (parallel?='parallel' )?
	//        (failFast?='failFast')?
	//        (stages+=Stage)*
	//        (agents+=Agent)*
	//        (steps+=Step)*
	//        (environments+=Environment)*
	//        (inputs+=Input)*
	//        (when+=When)*
	//        (stage_options+=StageOption)*
	//        matrix=Matrix?
	//    END);
	public StageElements getStageAccess() {
		return pStage;
	}
	
	public ParserRule getStageRule() {
		return getStageAccess().getRule();
	}
	
	//Post returns Post:
	//    'Post'
	//    (BEGIN
	//        'condition' condition=POST_TYPE
	//        (steps+=Step)+
	//    END);
	public PostElements getPostAccess() {
		return pPost;
	}
	
	public ParserRule getPostRule() {
		return getPostAccess().getRule();
	}
	
	//Tool returns Tool:
	//    'Tool'
	//    (BEGIN
	//        'tool' tool=TOOL_TYPE
	//        'tool_name' tool_name=EString
	//    END);
	public ToolElements getToolAccess() {
		return pTool;
	}
	
	public ParserRule getToolRule() {
		return getToolAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Step returns Step:
	//    'Step'
	//    (BEGIN
	//        commands=Command
	//        (step_parameters+=Step_Parameter)*
	//    END);
	public StepElements getStepAccess() {
		return pStep;
	}
	
	public ParserRule getStepRule() {
		return getStepAccess().getRule();
	}
	
	//Input returns Input:
	//    'Input'
	//    (BEGIN
	//        'message' message=EString
	//        ('id' id=EString )?
	//        ('ok' ok=EString )?
	//        ('submitter' submitter=EString )?
	//        ('submitterParameter' submitterParameter=EString )?
	//        (parameter_directives+=Parameter_Directive)*
	//    END);
	public InputElements getInputAccess() {
		return pInput;
	}
	
	public ParserRule getInputRule() {
		return getInputAccess().getRule();
	}
	
	//EBoolean returns ecore::EBoolean:
	//    'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//Matrix returns Matrix:
	//    'Matrix'
	//    (BEGIN
	//        (axis+=Axis)+
	//        (stages+=Stage)+
	//        (inputs+=Input)*
	//        (when+=When)*
	//        (environments+=Environment)*
	//        (agents+=Agent)*
	//        (tools+=Tool)*
	//        (post+=Post)*
	//        (stage_options+=StageOption)*
	//    END);
	public MatrixElements getMatrixAccess() {
		return pMatrix;
	}
	
	public ParserRule getMatrixRule() {
		return getMatrixAccess().getRule();
	}
	
	//Command returns Command:
	//    {Command}
	//    'Command'
	//    (BEGIN
	//        'name' name=EString
	//    END);
	public CommandElements getCommandAccess() {
		return pCommand;
	}
	
	public ParserRule getCommandRule() {
		return getCommandAccess().getRule();
	}
	
	//Step_Parameter returns Step_Parameter:
	//    'Step_Parameter'
	//    (BEGIN
	//        'parameter' parameter=EString
	//    END);
	public Step_ParameterElements getStep_ParameterAccess() {
		return pStep_Parameter;
	}
	
	public ParserRule getStep_ParameterRule() {
		return getStep_ParameterAccess().getRule();
	}
	
	//BuildingTag returns BuildingTag:
	//    {BuildingTag}
	//    'BuildingTag'
	//    ;
	public BuildingTagElements getBuildingTagAccess() {
		return pBuildingTag;
	}
	
	public ParserRule getBuildingTagRule() {
		return getBuildingTagAccess().getRule();
	}
	
	//Branch returns Branch:
	//    'Branch'
	//    (BEGIN
	//        'pattern' pattern=EString
	//        ('comparator' comparator=COMPARATOR_TYPE)?
	//    END);
	public BranchElements getBranchAccess() {
		return pBranch;
	}
	
	public ParserRule getBranchRule() {
		return getBranchAccess().getRule();
	}
	
	//Changelog returns Changelog:
	//    'Changelog'
	//    (BEGIN
	//        'expression' expression=EString
	//    END);
	public ChangelogElements getChangelogAccess() {
		return pChangelog;
	}
	
	public ParserRule getChangelogRule() {
		return getChangelogAccess().getRule();
	}
	
	//TriggeredBy returns TriggeredBy:
	//    'TriggeredBy'
	//    (BEGIN
	//        'parameter' parameter=EString
	//    END);
	public TriggeredByElements getTriggeredByAccess() {
		return pTriggeredBy;
	}
	
	public ParserRule getTriggeredByRule() {
		return getTriggeredByAccess().getRule();
	}
	
	//Expression returns Expression:
	//    'Expression'
	//    (BEGIN
	//        'expression' expression=EString
	//    END);
	public ExpressionElements getExpressionAccess() {
		return pExpression;
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}
	
	//ChangeSet returns ChangeSet:
	//    'ChangeSet'
	//    (BEGIN
	//        'pattern' pattern=EString
	//        ('comparator' comparator=COMPARATOR_TYPE)?
	//    END);
	public ChangeSetElements getChangeSetAccess() {
		return pChangeSet;
	}
	
	public ParserRule getChangeSetRule() {
		return getChangeSetAccess().getRule();
	}
	
	//Not returns Not:
	//    {Not}
	//    'Not'
	//    (BEGIN
	//        (when+=When)+
	//    END);
	public NotElements getNotAccess() {
		return pNot;
	}
	
	public ParserRule getNotRule() {
		return getNotAccess().getRule();
	}
	
	//AnyOf returns AnyOf:
	//    {AnyOf}
	//    'AnyOf'
	//    (BEGIN
	//        (when+=When)+
	//    END);
	public AnyOfElements getAnyOfAccess() {
		return pAnyOf;
	}
	
	public ParserRule getAnyOfRule() {
		return getAnyOfAccess().getRule();
	}
	
	//Tag returns Tag:
	//    'Tag'
	//    (BEGIN
	//        'pattern' pattern=EString
	//        ('comparator' comparator=COMPARATOR_TYPE)?
	//    END);
	public TagElements getTagAccess() {
		return pTag;
	}
	
	public ParserRule getTagRule() {
		return getTagAccess().getRule();
	}
	
	//When_Env returns When_Env:
	//    'When_Env'
	//    (BEGIN
	//        'name' name=EString
	//        'value' value=EString
	//    END);
	public When_EnvElements getWhen_EnvAccess() {
		return pWhen_Env;
	}
	
	public ParserRule getWhen_EnvRule() {
		return getWhen_EnvAccess().getRule();
	}
	
	//AllOf returns AllOf:
	//    'AllOf'
	//    (BEGIN
	//        (when+=When)+
	//    END);
	public AllOfElements getAllOfAccess() {
		return pAllOf;
	}
	
	public ParserRule getAllOfRule() {
		return getAllOfAccess().getRule();
	}
	
	//Equals returns Equals:
	//    'Equals'
	//    (BEGIN
	//        'expected_val' expected_val=EString
	//        'actual_val' actual_val=EString
	//    END);
	public EqualsElements getEqualsAccess() {
		return pEquals;
	}
	
	public ParserRule getEqualsRule() {
		return getEqualsAccess().getRule();
	}
	
	//ChangeRequest returns ChangeRequest:
	//    'ChangeRequest'
	//    (BEGIN
	//        'attribute' attribute=ATTRIBUTE_TYPE
	//        'value' value=EString
	//        ('comparator' comparator=COMPARATOR_TYPE)?
	//    END);
	public ChangeRequestElements getChangeRequestAccess() {
		return pChangeRequest;
	}
	
	public ParserRule getChangeRequestRule() {
		return getChangeRequestAccess().getRule();
	}
	
	//enum COMPARATOR_TYPE returns COMPARATOR_TYPE:
	//                none = 'none' | glob = 'glob' | regexp = 'regexp' | equals = 'equals';
	public COMPARATOR_TYPEElements getCOMPARATOR_TYPEAccess() {
		return eCOMPARATOR_TYPE;
	}
	
	public EnumRule getCOMPARATOR_TYPERule() {
		return getCOMPARATOR_TYPEAccess().getRule();
	}
	
	//enum ATTRIBUTE_TYPE returns ATTRIBUTE_TYPE:
	//                target = 'target' | branch = 'branch' | fork = 'fork' | url = 'url' | title = 'title' | author = 'author' | authorDisplayName = 'authorDisplayName' | authorEmail = 'authorEmail' | id = 'id';
	public ATTRIBUTE_TYPEElements getATTRIBUTE_TYPEAccess() {
		return eATTRIBUTE_TYPE;
	}
	
	public EnumRule getATTRIBUTE_TYPERule() {
		return getATTRIBUTE_TYPEAccess().getRule();
	}
	
	//SkipDefaultCheckout returns SkipDefaultCheckout:
	//    {SkipDefaultCheckout}
	//    'SkipDefaultCheckout'
	//    ;
	public SkipDefaultCheckoutElements getSkipDefaultCheckoutAccess() {
		return pSkipDefaultCheckout;
	}
	
	public ParserRule getSkipDefaultCheckoutRule() {
		return getSkipDefaultCheckoutAccess().getRule();
	}
	
	//Retry returns Retry:
	//    'Retry'
	//    (BEGIN
	//        'retries' retries=EShort
	//    END);
	public RetryElements getRetryAccess() {
		return pRetry;
	}
	
	public ParserRule getRetryRule() {
		return getRetryAccess().getRule();
	}
	
	//Timeout returns Timeout:
	//    'Timeout'
	//    (BEGIN
	//        'time' time=EShort
	//        'unit' unit=EString
	//    END);
	public TimeoutElements getTimeoutAccess() {
		return pTimeout;
	}
	
	public ParserRule getTimeoutRule() {
		return getTimeoutAccess().getRule();
	}
	
	//Timestamps returns Timestamps:
	//    {Timestamps}
	//    'Timestamps'
	//    ;
	public TimestampsElements getTimestampsAccess() {
		return pTimestamps;
	}
	
	public ParserRule getTimestampsRule() {
		return getTimestampsAccess().getRule();
	}
	
	//EShort returns ecore::EShort:
	//    '-'? INT;
	public EShortElements getEShortAccess() {
		return pEShort;
	}
	
	public ParserRule getEShortRule() {
		return getEShortAccess().getRule();
	}
	
	//Axis returns Axis:
	//    'Axis'
	//    (BEGIN
	//        'name' name=EString
	//        'values' values+=EString ( "," values+=EString)*
	//        (exclude?='exclude')?
	//    END);
	public AxisElements getAxisAccess() {
		return pAxis;
	}
	
	public ParserRule getAxisRule() {
		return getAxisAccess().getRule();
	}
	
	//enum POST_TYPE returns POST_TYPE:
	//                always = 'always' | changed = 'changed' | fixed = 'fixed' | regression = 'regression' | aborted = 'aborted' | failure = 'failure' | success = 'success' | unstable = 'unstable' | unsuccessful = 'unsuccessful' | cleanup = 'cleanup';
	public POST_TYPEElements getPOST_TYPEAccess() {
		return ePOST_TYPE;
	}
	
	public EnumRule getPOST_TYPERule() {
		return getPOST_TYPEAccess().getRule();
	}
	
	//StringParam returns StringParam:
	//    'StringParam'
	//    (BEGIN
	//        'name' name=EString
	//        ('description' description=EString )?
	//        'defaultValue' defaultValue=EString
	//    END);
	public StringParamElements getStringParamAccess() {
		return pStringParam;
	}
	
	public ParserRule getStringParamRule() {
		return getStringParamAccess().getRule();
	}
	
	//TextParam returns TextParam:
	//    'TextParam'
	//    (BEGIN
	//        'name' name=EString
	//        ('description' description=EString )?
	//        'defaultValue' defaultValue=EString
	//    END);
	public TextParamElements getTextParamAccess() {
		return pTextParam;
	}
	
	public ParserRule getTextParamRule() {
		return getTextParamAccess().getRule();
	}
	
	//ChoiceParam returns ChoiceParam:
	//    'ChoiceParam'
	//    (BEGIN
	//        'name' name=EString
	//        ('description' description=EString )?
	//        'choices' choices+=EString ( "," choices+=EString)*
	//    END);
	public ChoiceParamElements getChoiceParamAccess() {
		return pChoiceParam;
	}
	
	public ParserRule getChoiceParamRule() {
		return getChoiceParamAccess().getRule();
	}
	
	//PasswordParam returns PasswordParam:
	//    'PasswordParam'
	//    (BEGIN
	//        'name' name=EString
	//        ('description' description=EString )?
	//        'defaultValue' defaultValue=EString
	//    END);
	public PasswordParamElements getPasswordParamAccess() {
		return pPasswordParam;
	}
	
	public ParserRule getPasswordParamRule() {
		return getPasswordParamAccess().getRule();
	}
	
	//BooleanParam returns BooleanParam:
	//    'BooleanParam'
	//    (BEGIN
	//        'name' name=EString
	//        ('description' description=EString )?
	//        defaultValue?='defaultValue'
	//    END);
	public BooleanParamElements getBooleanParamAccess() {
		return pBooleanParam;
	}
	
	public ParserRule getBooleanParamRule() {
		return getBooleanParamAccess().getRule();
	}
	
	//enum TOOL_TYPE returns TOOL_TYPE:
	//                maven = 'maven' | jdk = 'jdk' | gradle = 'gradle';
	public TOOL_TYPEElements getTOOL_TYPEAccess() {
		return eTOOL_TYPE;
	}
	
	public EnumRule getTOOL_TYPERule() {
		return getTOOL_TYPEAccess().getRule();
	}
	
	//Node returns Node:
	//    'Node'
	//    (BEGIN
	//        'label' label=EString
	//        ('customWorkspace' customWorkspace=EString)?
	//    END);
	public NodeElements getNodeAccess() {
		return pNode;
	}
	
	public ParserRule getNodeRule() {
		return getNodeAccess().getRule();
	}
	
	//Any returns Any:
	//    {Any}
	//    'Any'
	//    ;
	public AnyElements getAnyAccess() {
		return pAny;
	}
	
	public ParserRule getAnyRule() {
		return getAnyAccess().getRule();
	}
	
	//None returns None:
	//    {None}
	//    'None'
	//    ;
	public NoneElements getNoneAccess() {
		return pNone;
	}
	
	public ParserRule getNoneRule() {
		return getNoneAccess().getRule();
	}
	
	//Dockerfile returns Dockerfile:
	//    'Dockerfile'
	//    (BEGIN
	//        'filename' filename=EString
	//        ('dir' dir=EString )?
	//        ('additionalBuildArgs' additionalBuildArgs=EString )?
	//        ('registryUrl' registryUrl=EString )?
	//        ('registryCredentialsId' registryCredentialsId=EString )?
	//        ('label' label=EString )?
	//        ('customWorkspace' customWorkspace=EString )?
	//        ('reuseNode' reuseNode=EString )?
	//        ('args' args=EString)?
	//    END);
	public DockerfileElements getDockerfileAccess() {
		return pDockerfile;
	}
	
	public ParserRule getDockerfileRule() {
		return getDockerfileAccess().getRule();
	}
	
	//Docker returns Docker:
	//    'Docker'
	//    (BEGIN
	//        'image' image=EString
	//        ('registryUrl' registryUrl=EString) ?
	//        ('registryCredentialsId' registryCredentialsId=EString )?
	//        ('label' label=EString )?
	//        ('customWorkspace' customWorkspace=EString )?
	//        ('reuseNode' reuseNode=EString )?
	//        ('args' args=EString )?
	//        (alwaysPull?='alwaysPull')?
	//    END);
	public DockerElements getDockerAccess() {
		return pDocker;
	}
	
	public ParserRule getDockerRule() {
		return getDockerAccess().getRule();
	}
	
	//Label returns Label:
	//    'Label'
	//    (BEGIN
	//        'label' label=EString
	//    END);
	public LabelElements getLabelAccess() {
		return pLabel;
	}
	
	public ParserRule getLabelRule() {
		return getLabelAccess().getRule();
	}
	
	//Cron returns Cron:
	//    'Cron'
	//    (BEGIN
	//        'timer' timer=EString
	//    END);
	public CronElements getCronAccess() {
		return pCron;
	}
	
	public ParserRule getCronRule() {
		return getCronAccess().getRule();
	}
	
	//PollSCM returns PollSCM:
	//    'PollSCM'
	//    (BEGIN
	//        'timer' timer=EString
	//    END);
	public PollSCMElements getPollSCMAccess() {
		return pPollSCM;
	}
	
	public ParserRule getPollSCMRule() {
		return getPollSCMAccess().getRule();
	}
	
	//Upstream returns Upstream:
	//    'Upstream'
	//    (BEGIN
	//        'jobs' jobs+=EString ( "," jobs+=EString)*
	//        'threshold' threshold=EString
	//    END);
	public UpstreamElements getUpstreamAccess() {
		return pUpstream;
	}
	
	public ParserRule getUpstreamRule() {
		return getUpstreamAccess().getRule();
	}
	
	//BuildDiscarder returns BuildDiscarder:
	//    'BuildDiscarder'
	//    (BEGIN
	//        'numToKeepStr' numToKeepStr=EShort
	//    END);
	public BuildDiscarderElements getBuildDiscarderAccess() {
		return pBuildDiscarder;
	}
	
	public ParserRule getBuildDiscarderRule() {
		return getBuildDiscarderAccess().getRule();
	}
	
	//CheckoutToSubdirectory returns CheckoutToSubdirectory:
	//    'CheckoutToSubdirectory'
	//    (BEGIN
	//        'directory' directory=EString
	//    END);
	public CheckoutToSubdirectoryElements getCheckoutToSubdirectoryAccess() {
		return pCheckoutToSubdirectory;
	}
	
	public ParserRule getCheckoutToSubdirectoryRule() {
		return getCheckoutToSubdirectoryAccess().getRule();
	}
	
	//SkipStagesAfterUnstable returns SkipStagesAfterUnstable:
	//    {SkipStagesAfterUnstable}
	//    'SkipStagesAfterUnstable'
	//    ;
	public SkipStagesAfterUnstableElements getSkipStagesAfterUnstableAccess() {
		return pSkipStagesAfterUnstable;
	}
	
	public ParserRule getSkipStagesAfterUnstableRule() {
		return getSkipStagesAfterUnstableAccess().getRule();
	}
	
	//QuietPeriod returns QuietPeriod:
	//    {QuietPeriod} 'QuietPeriod'
	//    (BEGIN
	//        'period' period=EShort
	//    END);
	public QuietPeriodElements getQuietPeriodAccess() {
		return pQuietPeriod;
	}
	
	public ParserRule getQuietPeriodRule() {
		return getQuietPeriodAccess().getRule();
	}
	
	//PreserveStashes returns PreserveStashes:
	//    {PreserveStashes}
	//    'PreserveStashes'
	//    (BEGIN
	//        ('buildCount' buildCount=EString)?
	//    END)?;
	public PreserveStashesElements getPreserveStashesAccess() {
		return pPreserveStashes;
	}
	
	public ParserRule getPreserveStashesRule() {
		return getPreserveStashesAccess().getRule();
	}
	
	//ParallelsAlwaysFailFast returns ParallelsAlwaysFailFast:
	//    {ParallelsAlwaysFailFast}
	//    'ParallelsAlwaysFailFast'
	//    ;
	public ParallelsAlwaysFailFastElements getParallelsAlwaysFailFastAccess() {
		return pParallelsAlwaysFailFast;
	}
	
	public ParserRule getParallelsAlwaysFailFastRule() {
		return getParallelsAlwaysFailFastAccess().getRule();
	}
	
	//DisableRestartFromStage returns DisableRestartFromStage:
	//    {DisableRestartFromStage}
	//    'DisableRestartFromStage'
	//    ;
	public DisableRestartFromStageElements getDisableRestartFromStageAccess() {
		return pDisableRestartFromStage;
	}
	
	public ParserRule getDisableRestartFromStageRule() {
		return getDisableRestartFromStageAccess().getRule();
	}
	
	//DisableResume returns DisableResume:
	//    {DisableResume}
	//    'DisableResume'
	//    ;
	public DisableResumeElements getDisableResumeAccess() {
		return pDisableResume;
	}
	
	public ParserRule getDisableResumeRule() {
		return getDisableResumeAccess().getRule();
	}
	
	//OverrideIndexTriggers returns OverrideIndexTriggers:
	//    {OverrideIndexTriggers} 'OverrideIndexTriggers'
	//    (BEGIN
	//        override?='override'
	//    END)
	//    ;
	public OverrideIndexTriggersElements getOverrideIndexTriggersAccess() {
		return pOverrideIndexTriggers;
	}
	
	public ParserRule getOverrideIndexTriggersRule() {
		return getOverrideIndexTriggersAccess().getRule();
	}
	
	//NewContainerPerStage returns NewContainerPerStage:
	//    {NewContainerPerStage}
	//    'NewContainerPerStage'
	//    ;
	public NewContainerPerStageElements getNewContainerPerStageAccess() {
		return pNewContainerPerStage;
	}
	
	public ParserRule getNewContainerPerStageRule() {
		return getNewContainerPerStageAccess().getRule();
	}
	
	//DisableConcurrentBuilds returns DisableConcurrentBuilds:
	//    {DisableConcurrentBuilds} 'DisableConcurrentBuilds'
	//    (BEGIN
	//        abort?='abort'
	//    END)
	//    ;
	public DisableConcurrentBuildsElements getDisableConcurrentBuildsAccess() {
		return pDisableConcurrentBuilds;
	}
	
	public ParserRule getDisableConcurrentBuildsRule() {
		return getDisableConcurrentBuildsAccess().getRule();
	}
	
	//terminal NEWLINE:
	//// New line on DOS or Unix
	//    '\r'? '\n';
	public TerminalRule getNEWLINERule() {
		return tNEWLINE;
	}
	
	//terminal BEGIN: 'synthetic:BEGIN';
	public TerminalRule getBEGINRule() {
		return tBEGIN;
	}
	
	//  // increase indentation
	//terminal END: 'synthetic:END';
	public TerminalRule getENDRule() {
		return tEND;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
