[comment encoding = UTF-8 /]
[module generate('http://www.example.org/devOps')]


[template public generateElement(aPipeline : Pipeline)]
[comment @main/]
[file (aPipeline.Name0 + '.yml', false, 'UTF-8')]
version: "1.0"

[generateJobs(aPipeline)/]
[generateWhen(aPipeline)/]
[/file]
[/template]


[template public generateJobEnvironment(aJob : Job)]
[if (not (aJob.environment->isEmpty())) ]
environment:
[for (e: Environment | aJob.environment)]
  [generateKeyValue(e)/]
[/for]
[/if]
[/template]

[template public generateKeyValue(aEnv : Environment)]
- '[aEnv.Key/]=${{[aEnv.Value/]}}'
[/template]


[template public generateIfStatements(aJob: Job)]
[if (not aJob.ifthenelse->isEmpty())]
[for (i: IfThenElse | aJob.ifthenelse)]
  [generateIfThenELse(i)/]
[/for]
[/if]
[/template]


[template public generateIfThenELse(aIfThenElse: IfThenElse)]
when:
  condition:
    any:
	  "[aIfThenElse.Condition/]"
[/template]


[template public generateToolFrameworkJob(aJob : Job)]
[if aJob.tool_framework_job->notEmpty()]
image: ${{[aJob.tool_framework_job.Name5/]}}
[/if]
[/template]


[template public generateJobs(aPipeline : Pipeline)]
[if aPipeline.job->notEmpty() ]
steps:
[for (j: Job | aPipeline.job)]
  [generateJob(j)/]
[/for]
[/if]
[/template]


[template public generateJob(aJob : Job)]
[aJob.Name1/]:
  [if (aJob.Description1->notEmpty()) ]
  title: [aJob.Description1/]
  [/if]
  [generateToolFrameworkJob(aJob)/]
  [generateSteps(aJob)/]
  [generateJobEnvironment(aJob)/]
  [generateIfStatements(aJob)/]
[/template]


[template public generateSteps(aJob: Job)]
commands:
[for (c: Command | aJob.command)]
  [generateCommand(c)/]
[/for]
[/template]



[template public generateCommand(aCommand: Command)]
- [aCommand.tool.Name5/][generateParameters(aCommand)/]
[/template]

[template public generateParameters(aCommand: Command)]
[for (p: Parameters | aCommand.parameters)] [p.Parameter/] [/for]
[/template]


[template public generateWhen(aPipeline: Pipeline)]
[if (aPipeline.when->notEmpty()) ]
trigger:
  event:
  [for (w: When | aPipeline.when)]
  - [aPipeline.when.Trigger/]
  [/for]
[/if]
[/template]

