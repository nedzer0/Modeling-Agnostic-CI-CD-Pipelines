/*
 * generated by Xtext 2.34.0
 */
lexer grammar InternalJenkinsLexer;

@header {
package org.xtext.example.jenkins.ide.contentassist.antlr.lexer;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

DisableConcurrentBuilds : 'DisableConcurrentBuilds';

DisableRestartFromStage : 'DisableRestartFromStage';

ParallelsAlwaysFailFast : 'ParallelsAlwaysFailFast';

SkipStagesAfterUnstable : 'SkipStagesAfterUnstable';

CheckoutToSubdirectory : 'CheckoutToSubdirectory';

OverrideIndexTriggers : 'OverrideIndexTriggers';

RegistryCredentialsId : 'registryCredentialsId';

NewContainerPerStage : 'NewContainerPerStage';

SkipDefaultCheckout : 'SkipDefaultCheckout';

AdditionalBuildArgs : 'additionalBuildArgs';

SubmitterParameter : 'submitterParameter';

AuthorDisplayName : 'authorDisplayName';

PreserveStashes : 'PreserveStashes';

CustomWorkspace : 'customWorkspace';

BuildDiscarder : 'BuildDiscarder';

Step_Parameter : 'Step_Parameter';

ChangeRequest : 'ChangeRequest';

DisableResume : 'DisableResume';

PasswordParam : 'PasswordParam';

BooleanParam : 'BooleanParam';

DefaultValue : 'defaultValue';

Expected_val : 'expected_val';

NumToKeepStr : 'numToKeepStr';

Unsuccessful : 'unsuccessful';

BuildingTag : 'BuildingTag';

ChoiceParam : 'ChoiceParam';

Environment : 'Environment';

QuietPeriod : 'QuietPeriod';

StringParam : 'StringParam';

TriggeredBy : 'TriggeredBy';

AuthorEmail : 'authorEmail';

Description : 'description';

RegistryUrl : 'registryUrl';

Dockerfile : 'Dockerfile';

Expression : 'Expression';

Timestamps : 'Timestamps';

Actual_val : 'actual_val';

AlwaysPull : 'alwaysPull';

BuildCount : 'buildCount';

Comparator : 'comparator';

Expression_1 : 'expression';

Regression : 'regression';

ChangeSet : 'ChangeSet';

Changelog : 'Changelog';

TextParam : 'TextParam';

Attribute : 'attribute';

Condition : 'condition';

Directory : 'directory';

Parameter : 'parameter';

ReuseNode : 'reuseNode';

Submitter : 'submitter';

Threshold : 'threshold';

Tool_name : 'tool_name';

Pipeline : 'Pipeline';

Upstream : 'Upstream';

When_Env : 'When_Env';

FailFast : 'failFast';

Filename : 'filename';

Override : 'override';

Parallel : 'parallel';

Unstable : 'unstable';

Command : 'Command';

PollSCM : 'PollSCM';

Timeout : 'Timeout';

Aborted : 'aborted';

Changed : 'changed';

Choices : 'choices';

Cleanup : 'cleanup';

Exclude : 'exclude';

Failure : 'failure';

Message : 'message';

Pattern : 'pattern';

Retries : 'retries';

Success : 'success';

Branch : 'Branch';

Docker : 'Docker';

Equals : 'Equals';

Matrix : 'Matrix';

Always : 'always';

Author : 'author';

Branch_1 : 'branch';

Equals_1 : 'equals';

Gradle : 'gradle';

Period : 'period';

Regexp : 'regexp';

Target : 'target';

Values : 'values';

AllOf : 'AllOf';

AnyOf : 'AnyOf';

Input : 'Input';

Label : 'Label';

Retry : 'Retry';

Stage : 'Stage';

Abort : 'abort';

False : 'false';

Fixed : 'fixed';

Image : 'image';

Label_1 : 'label';

Maven : 'maven';

Timer : 'timer';

Title : 'title';

Value : 'value';

Axis : 'Axis';

Cron : 'Cron';

Node : 'Node';

None : 'None';

Post : 'Post';

Step : 'Step';

Tool : 'Tool';

Args : 'args';

Fork : 'fork';

Glob : 'glob';

Jobs : 'jobs';

Name : 'name';

None_1 : 'none';

Time : 'time';

Tool_1 : 'tool';

True : 'true';

Unit : 'unit';

Any : 'Any';

Not : 'Not';

Tag : 'Tag';

Dir : 'dir';

Jdk : 'jdk';

Key : 'key';

Url : 'url';

Id : 'id';

Ok : 'ok';

Comma : ',';

HyphenMinus : '-';

RULE_NEWLINE : '\r'? '\n';

fragment RULE_BEGIN : ;

fragment RULE_END : ;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
