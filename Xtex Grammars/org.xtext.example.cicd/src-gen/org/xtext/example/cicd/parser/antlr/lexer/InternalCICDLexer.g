/*
 * generated by Xtext 2.34.0
 */
lexer grammar InternalCICDLexer;

@header {
package org.xtext.example.cicd.parser.antlr.lexer;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

DockerContainer : 'DockerContainer';

ScheduleTrigger : 'ScheduleTrigger';

AllowFaillure : 'allowFaillure';

MatrixConfig : 'MatrixConfig';

Environment : 'Environment';

Description : 'description';

RequireJobs : 'requireJobs';

Parameters : 'Parameters';

Else_steps : 'else_steps';

Condition : 'condition';

Parameter : 'parameter';

Artifact : 'Artifact';

DOWNLOAD : 'DOWNLOAD';

PASSWORD : 'PASSWORD';

Pipeline : 'Pipeline';

If_steps : 'if_steps';

Parallel : 'parallel';

Password : 'password';

Username : 'username';

BOOLEAN : 'BOOLEAN';

Command : 'Command';

DEFAULT : 'DEFAULT';

EXCLUDE : 'EXCLUDE';

INCLUDE : 'INCLUDE';

Default : 'default';

Message : 'message';

CHOICE : 'CHOICE';

IfStep : 'IfStep';

Matrix : 'Matrix';

NUMBER : 'NUMBER';

Output : 'Output';

SECRET : 'SECRET';

STRING : 'STRING';

UPLOAD : 'UPLOAD';

Labels : 'labels';

Values : 'values';

Agent : 'Agent';

Cache : 'Cache';

Input : 'Input';

STORE : 'STORE';

False : 'false';

Image : 'image';

Paths : 'paths';

Timer : 'timer';

Value : 'value';

BOTH : 'BOTH';

LOAD : 'LOAD';

Step : 'Step';

TEXT : 'TEXT';

Keys : 'keys';

Mode : 'mode';

Name : 'name';

Path : 'path';

True : 'true';

Type : 'type';

Job : 'Job';

Key : 'key';

Comma : ',';

RULE_NEWLINE : '\r'? '\n';

fragment RULE_BEGIN : ;

fragment RULE_END : ;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
