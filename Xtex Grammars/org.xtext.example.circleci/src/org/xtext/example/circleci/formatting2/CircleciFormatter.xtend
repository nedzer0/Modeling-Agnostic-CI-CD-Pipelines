/*
 * generated by Xtext 2.34.0
 */
package org.xtext.example.circleci.formatting2

import circleCI_metamodel.Command
import circleCI_metamodel.Pipeline
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.example.circleci.services.CircleciGrammarAccess

class CircleciFormatter extends AbstractFormatter2 {
	
	@Inject extension CircleciGrammarAccess

	def dispatch void format(Pipeline pipeline, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (orb : pipeline.orbs) {
			orb.format
		}
		for (command : pipeline.commands) {
			command.format
		}
		for (executor : pipeline.executors) {
			executor.format
		}
		for (job : pipeline.jobs) {
			job.format
		}
		for (workflow : pipeline.workflows) {
			workflow.format
		}
	}

	def dispatch void format(Command command, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (parameter : command.parameters) {
			parameter.format
		}
		for (step : command.steps) {
			step.format
		}
	}
	
	// TODO: implement for Workflow, Job, Run, When_Unless, JobWorkflow, Matrix, Machine, MacOs, Docker
}
