/*
 * generated by Xtext 2.34.0
 */
package org.xtext.example.circleci.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class CircleciGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class PipelineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.Pipeline");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPipelineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cSetupAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Keyword cSetupSetupKeyword_1_1_0 = (Keyword)cSetupAssignment_1_1.eContents().get(0);
		private final Keyword cVersionKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cVersionAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cVersionEStringParserRuleCall_1_3_0 = (RuleCall)cVersionAssignment_1_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_4 = (RuleCall)cGroup_1.eContents().get(4);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cOrbsAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cOrbsOrbParserRuleCall_2_0_0 = (RuleCall)cOrbsAssignment_2_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cCommandsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cCommandsCommandParserRuleCall_3_0_0 = (RuleCall)cCommandsAssignment_3_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cExecutorsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cExecutorsExecutorParserRuleCall_4_0_0 = (RuleCall)cExecutorsAssignment_4_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cJobsAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cJobsJobParserRuleCall_5_0_0 = (RuleCall)cJobsAssignment_5_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cWorkflowsAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cWorkflowsWorkflowParserRuleCall_6_0_0 = (RuleCall)cWorkflowsAssignment_6_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		
		//Pipeline returns Pipeline:
		//    'Pipeline'
		//    ((BEGIN (setup?='setup')? 'version' version=EString END))
		//    ((orbs+=Orb)+ NEWLINE?)?
		//    ((commands+=Command)+ NEWLINE?)?
		//    ((executors+=Executor)+ NEWLINE?)?
		//    ((jobs+=Job)+ NEWLINE?)
		//    ((workflows+=Workflow)+ NEWLINE?)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Pipeline'
		//((BEGIN (setup?='setup')? 'version' version=EString END))
		//((orbs+=Orb)+ NEWLINE?)?
		//((commands+=Command)+ NEWLINE?)?
		//((executors+=Executor)+ NEWLINE?)?
		//((jobs+=Job)+ NEWLINE?)
		//((workflows+=Workflow)+ NEWLINE?)?
		public Group getGroup() { return cGroup; }
		
		//'Pipeline'
		public Keyword getPipelineKeyword_0() { return cPipelineKeyword_0; }
		
		//((BEGIN (setup?='setup')? 'version' version=EString END))
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//(setup?='setup')?
		public Assignment getSetupAssignment_1_1() { return cSetupAssignment_1_1; }
		
		//'setup'
		public Keyword getSetupSetupKeyword_1_1_0() { return cSetupSetupKeyword_1_1_0; }
		
		//'version'
		public Keyword getVersionKeyword_1_2() { return cVersionKeyword_1_2; }
		
		//version=EString
		public Assignment getVersionAssignment_1_3() { return cVersionAssignment_1_3; }
		
		//EString
		public RuleCall getVersionEStringParserRuleCall_1_3_0() { return cVersionEStringParserRuleCall_1_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_4() { return cENDTerminalRuleCall_1_4; }
		
		//((orbs+=Orb)+ NEWLINE?)?
		public Group getGroup_2() { return cGroup_2; }
		
		//(orbs+=Orb)+
		public Assignment getOrbsAssignment_2_0() { return cOrbsAssignment_2_0; }
		
		//Orb
		public RuleCall getOrbsOrbParserRuleCall_2_0_0() { return cOrbsOrbParserRuleCall_2_0_0; }
		
		//NEWLINE?
		public RuleCall getNEWLINETerminalRuleCall_2_1() { return cNEWLINETerminalRuleCall_2_1; }
		
		//((commands+=Command)+ NEWLINE?)?
		public Group getGroup_3() { return cGroup_3; }
		
		//(commands+=Command)+
		public Assignment getCommandsAssignment_3_0() { return cCommandsAssignment_3_0; }
		
		//Command
		public RuleCall getCommandsCommandParserRuleCall_3_0_0() { return cCommandsCommandParserRuleCall_3_0_0; }
		
		//NEWLINE?
		public RuleCall getNEWLINETerminalRuleCall_3_1() { return cNEWLINETerminalRuleCall_3_1; }
		
		//((executors+=Executor)+ NEWLINE?)?
		public Group getGroup_4() { return cGroup_4; }
		
		//(executors+=Executor)+
		public Assignment getExecutorsAssignment_4_0() { return cExecutorsAssignment_4_0; }
		
		//Executor
		public RuleCall getExecutorsExecutorParserRuleCall_4_0_0() { return cExecutorsExecutorParserRuleCall_4_0_0; }
		
		//NEWLINE?
		public RuleCall getNEWLINETerminalRuleCall_4_1() { return cNEWLINETerminalRuleCall_4_1; }
		
		//((jobs+=Job)+ NEWLINE?)
		public Group getGroup_5() { return cGroup_5; }
		
		//(jobs+=Job)+
		public Assignment getJobsAssignment_5_0() { return cJobsAssignment_5_0; }
		
		//Job
		public RuleCall getJobsJobParserRuleCall_5_0_0() { return cJobsJobParserRuleCall_5_0_0; }
		
		//NEWLINE?
		public RuleCall getNEWLINETerminalRuleCall_5_1() { return cNEWLINETerminalRuleCall_5_1; }
		
		//((workflows+=Workflow)+ NEWLINE?)?
		public Group getGroup_6() { return cGroup_6; }
		
		//(workflows+=Workflow)+
		public Assignment getWorkflowsAssignment_6_0() { return cWorkflowsAssignment_6_0; }
		
		//Workflow
		public RuleCall getWorkflowsWorkflowParserRuleCall_6_0_0() { return cWorkflowsWorkflowParserRuleCall_6_0_0; }
		
		//NEWLINE?
		public RuleCall getNEWLINETerminalRuleCall_6_1() { return cNEWLINETerminalRuleCall_6_1; }
	}
	public class ExecutorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.Executor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMachineParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMacOsParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDockerParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Executor returns Executor:
		//    Machine | MacOs | Docker;
		@Override public ParserRule getRule() { return rule; }
		
		//Machine | MacOs | Docker
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Machine
		public RuleCall getMachineParserRuleCall_0() { return cMachineParserRuleCall_0; }
		
		//MacOs
		public RuleCall getMacOsParserRuleCall_1() { return cMacOsParserRuleCall_1; }
		
		//Docker
		public RuleCall getDockerParserRuleCall_2() { return cDockerParserRuleCall_2; }
	}
	public class StepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.Step");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRunParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRestoreCacheParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPersistToWorkspaceParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cStoreArtifactParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cStoreTestResultsParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cSetupRemoteDockerParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cAddSSHKeysParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cSaveCacheParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cAttachWorkspaceParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cWhen_UnlessParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cCheckoutParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		
		//Step returns Step:
		//    Run | RestoreCache | PersistToWorkspace | StoreArtifact | StoreTestResults | SetupRemoteDocker | AddSSHKeys | SaveCache | AttachWorkspace | When_Unless | Checkout;
		@Override public ParserRule getRule() { return rule; }
		
		//Run | RestoreCache | PersistToWorkspace | StoreArtifact | StoreTestResults | SetupRemoteDocker | AddSSHKeys | SaveCache | AttachWorkspace | When_Unless | Checkout
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Run
		public RuleCall getRunParserRuleCall_0() { return cRunParserRuleCall_0; }
		
		//RestoreCache
		public RuleCall getRestoreCacheParserRuleCall_1() { return cRestoreCacheParserRuleCall_1; }
		
		//PersistToWorkspace
		public RuleCall getPersistToWorkspaceParserRuleCall_2() { return cPersistToWorkspaceParserRuleCall_2; }
		
		//StoreArtifact
		public RuleCall getStoreArtifactParserRuleCall_3() { return cStoreArtifactParserRuleCall_3; }
		
		//StoreTestResults
		public RuleCall getStoreTestResultsParserRuleCall_4() { return cStoreTestResultsParserRuleCall_4; }
		
		//SetupRemoteDocker
		public RuleCall getSetupRemoteDockerParserRuleCall_5() { return cSetupRemoteDockerParserRuleCall_5; }
		
		//AddSSHKeys
		public RuleCall getAddSSHKeysParserRuleCall_6() { return cAddSSHKeysParserRuleCall_6; }
		
		//SaveCache
		public RuleCall getSaveCacheParserRuleCall_7() { return cSaveCacheParserRuleCall_7; }
		
		//AttachWorkspace
		public RuleCall getAttachWorkspaceParserRuleCall_8() { return cAttachWorkspaceParserRuleCall_8; }
		
		//When_Unless
		public RuleCall getWhen_UnlessParserRuleCall_9() { return cWhen_UnlessParserRuleCall_9; }
		
		//Checkout
		public RuleCall getCheckoutParserRuleCall_10() { return cCheckoutParserRuleCall_10; }
	}
	public class OrbElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.Orb");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOrbKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cKeyKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cKeyAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cKeyEStringParserRuleCall_1_2_0 = (RuleCall)cKeyAssignment_1_2.eContents().get(0);
		private final Keyword cValueKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cValueAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cValueEStringParserRuleCall_1_4_0 = (RuleCall)cValueAssignment_1_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_5 = (RuleCall)cGroup_1.eContents().get(5);
		
		//Orb returns Orb:
		//    'Orb'
		//    (BEGIN
		//        'key' key=EString
		//        'value' value=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Orb'
		//(BEGIN
		//    'key' key=EString
		//    'value' value=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Orb'
		public Keyword getOrbKeyword_0() { return cOrbKeyword_0; }
		
		//(BEGIN
		//    'key' key=EString
		//    'value' value=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'key'
		public Keyword getKeyKeyword_1_1() { return cKeyKeyword_1_1; }
		
		//key=EString
		public Assignment getKeyAssignment_1_2() { return cKeyAssignment_1_2; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_1_2_0() { return cKeyEStringParserRuleCall_1_2_0; }
		
		//'value'
		public Keyword getValueKeyword_1_3() { return cValueKeyword_1_3; }
		
		//value=EString
		public Assignment getValueAssignment_1_4() { return cValueAssignment_1_4; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_1_4_0() { return cValueEStringParserRuleCall_1_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_5() { return cENDTerminalRuleCall_1_5; }
	}
	public class CommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.Command");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCommandKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cNameKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cNameAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_1_2_0 = (RuleCall)cNameAssignment_1_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cDescriptionKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_1_3_1_0 = (RuleCall)cDescriptionAssignment_1_3_1.eContents().get(0);
		private final Assignment cParametersAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cParametersParameterParserRuleCall_1_4_0 = (RuleCall)cParametersAssignment_1_4.eContents().get(0);
		private final Assignment cStepsAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cStepsStepParserRuleCall_1_5_0 = (RuleCall)cStepsAssignment_1_5.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_6 = (RuleCall)cGroup_1.eContents().get(6);
		
		//Command returns Command:
		//    'Command'
		//    (BEGIN
		//        'name' name=EString
		//        ('description' description=EString)?
		//        (parameters+=Parameter)*
		//        (steps+=Step)+
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Command'
		//(BEGIN
		//    'name' name=EString
		//    ('description' description=EString)?
		//    (parameters+=Parameter)*
		//    (steps+=Step)+
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Command'
		public Keyword getCommandKeyword_0() { return cCommandKeyword_0; }
		
		//(BEGIN
		//    'name' name=EString
		//    ('description' description=EString)?
		//    (parameters+=Parameter)*
		//    (steps+=Step)+
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'name'
		public Keyword getNameKeyword_1_1() { return cNameKeyword_1_1; }
		
		//name=EString
		public Assignment getNameAssignment_1_2() { return cNameAssignment_1_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_2_0() { return cNameEStringParserRuleCall_1_2_0; }
		
		//('description' description=EString)?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'description'
		public Keyword getDescriptionKeyword_1_3_0() { return cDescriptionKeyword_1_3_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_1_3_1() { return cDescriptionAssignment_1_3_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_1_3_1_0() { return cDescriptionEStringParserRuleCall_1_3_1_0; }
		
		//(parameters+=Parameter)*
		public Assignment getParametersAssignment_1_4() { return cParametersAssignment_1_4; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_1_4_0() { return cParametersParameterParserRuleCall_1_4_0; }
		
		//(steps+=Step)+
		public Assignment getStepsAssignment_1_5() { return cStepsAssignment_1_5; }
		
		//Step
		public RuleCall getStepsStepParserRuleCall_1_5_0() { return cStepsStepParserRuleCall_1_5_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_6() { return cENDTerminalRuleCall_1_6; }
	}
	public class WorkflowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.Workflow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWorkflowKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cNameKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cNameAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_1_2_0 = (RuleCall)cNameAssignment_1_2.eContents().get(0);
		private final Keyword cVersionKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cVersionAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cVersionEStringParserRuleCall_1_4_0 = (RuleCall)cVersionAssignment_1_4.eContents().get(0);
		private final Assignment cTriggersAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cTriggersTriggerParserRuleCall_1_5_0 = (RuleCall)cTriggersAssignment_1_5.eContents().get(0);
		private final Assignment cBranchesAssignment_1_6 = (Assignment)cGroup_1.eContents().get(6);
		private final RuleCall cBranchesBranchParserRuleCall_1_6_0 = (RuleCall)cBranchesAssignment_1_6.eContents().get(0);
		private final Assignment cWhen_unlessAssignment_1_7 = (Assignment)cGroup_1.eContents().get(7);
		private final RuleCall cWhen_unlessWhen_UnlessParserRuleCall_1_7_0 = (RuleCall)cWhen_unlessAssignment_1_7.eContents().get(0);
		private final Assignment cJobworkflowAssignment_1_8 = (Assignment)cGroup_1.eContents().get(8);
		private final RuleCall cJobworkflowJobWorkflowParserRuleCall_1_8_0 = (RuleCall)cJobworkflowAssignment_1_8.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_9 = (RuleCall)cGroup_1.eContents().get(9);
		
		//Workflow returns Workflow:
		//    'Workflow'
		//    (BEGIN
		//        'name' name=EString
		//        'version' version=EString
		//        (triggers+=Trigger)*
		//        (branches+=Branch)*
		//        (when_unless=When_Unless)?
		//        (jobworkflow+=JobWorkflow)+
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Workflow'
		//(BEGIN
		//    'name' name=EString
		//    'version' version=EString
		//    (triggers+=Trigger)*
		//    (branches+=Branch)*
		//    (when_unless=When_Unless)?
		//    (jobworkflow+=JobWorkflow)+
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Workflow'
		public Keyword getWorkflowKeyword_0() { return cWorkflowKeyword_0; }
		
		//(BEGIN
		//    'name' name=EString
		//    'version' version=EString
		//    (triggers+=Trigger)*
		//    (branches+=Branch)*
		//    (when_unless=When_Unless)?
		//    (jobworkflow+=JobWorkflow)+
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'name'
		public Keyword getNameKeyword_1_1() { return cNameKeyword_1_1; }
		
		//name=EString
		public Assignment getNameAssignment_1_2() { return cNameAssignment_1_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_2_0() { return cNameEStringParserRuleCall_1_2_0; }
		
		//'version'
		public Keyword getVersionKeyword_1_3() { return cVersionKeyword_1_3; }
		
		//version=EString
		public Assignment getVersionAssignment_1_4() { return cVersionAssignment_1_4; }
		
		//EString
		public RuleCall getVersionEStringParserRuleCall_1_4_0() { return cVersionEStringParserRuleCall_1_4_0; }
		
		//(triggers+=Trigger)*
		public Assignment getTriggersAssignment_1_5() { return cTriggersAssignment_1_5; }
		
		//Trigger
		public RuleCall getTriggersTriggerParserRuleCall_1_5_0() { return cTriggersTriggerParserRuleCall_1_5_0; }
		
		//(branches+=Branch)*
		public Assignment getBranchesAssignment_1_6() { return cBranchesAssignment_1_6; }
		
		//Branch
		public RuleCall getBranchesBranchParserRuleCall_1_6_0() { return cBranchesBranchParserRuleCall_1_6_0; }
		
		//(when_unless=When_Unless)?
		public Assignment getWhen_unlessAssignment_1_7() { return cWhen_unlessAssignment_1_7; }
		
		//When_Unless
		public RuleCall getWhen_unlessWhen_UnlessParserRuleCall_1_7_0() { return cWhen_unlessWhen_UnlessParserRuleCall_1_7_0; }
		
		//(jobworkflow+=JobWorkflow)+
		public Assignment getJobworkflowAssignment_1_8() { return cJobworkflowAssignment_1_8; }
		
		//JobWorkflow
		public RuleCall getJobworkflowJobWorkflowParserRuleCall_1_8_0() { return cJobworkflowJobWorkflowParserRuleCall_1_8_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_9() { return cENDTerminalRuleCall_1_9; }
	}
	public class JobElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.Job");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJobKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cNameKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_1_1_0 = (RuleCall)cNameAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cParallelismKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cParallelismAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cParallelismEShortParserRuleCall_1_2_1_0 = (RuleCall)cParallelismAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cReuseExecutorKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cReuseExecutorAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cReuseExecutorEStringParserRuleCall_1_3_1_0 = (RuleCall)cReuseExecutorAssignment_1_3_1.eContents().get(0);
		private final Assignment cExecutorsAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cExecutorsExecutorParserRuleCall_1_4_0 = (RuleCall)cExecutorsAssignment_1_4.eContents().get(0);
		private final Assignment cEnvironmentsAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cEnvironmentsEnvironmentParserRuleCall_1_5_0 = (RuleCall)cEnvironmentsAssignment_1_5.eContents().get(0);
		private final Assignment cParametersAssignment_1_6 = (Assignment)cGroup_1.eContents().get(6);
		private final RuleCall cParametersParameterParserRuleCall_1_6_0 = (RuleCall)cParametersAssignment_1_6.eContents().get(0);
		private final Assignment cStepsAssignment_1_7 = (Assignment)cGroup_1.eContents().get(7);
		private final RuleCall cStepsStepParserRuleCall_1_7_0 = (RuleCall)cStepsAssignment_1_7.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_8 = (RuleCall)cGroup_1.eContents().get(8);
		
		//Job returns Job:
		//    'Job'
		//    (BEGIN
		//        ('name' name=EString)
		//        ('parallelism' parallelism=EShort)?
		//        ('reuseExecutor' reuseExecutor=EString)?
		//        (executors+=Executor)*
		//        (environments+=Environment)*
		//        (parameters+=Parameter)*
		//        (steps+=Step)+
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Job'
		//(BEGIN
		//    ('name' name=EString)
		//    ('parallelism' parallelism=EShort)?
		//    ('reuseExecutor' reuseExecutor=EString)?
		//    (executors+=Executor)*
		//    (environments+=Environment)*
		//    (parameters+=Parameter)*
		//    (steps+=Step)+
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Job'
		public Keyword getJobKeyword_0() { return cJobKeyword_0; }
		
		//(BEGIN
		//    ('name' name=EString)
		//    ('parallelism' parallelism=EShort)?
		//    ('reuseExecutor' reuseExecutor=EString)?
		//    (executors+=Executor)*
		//    (environments+=Environment)*
		//    (parameters+=Parameter)*
		//    (steps+=Step)+
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//('name' name=EString)
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'name'
		public Keyword getNameKeyword_1_1_0() { return cNameKeyword_1_1_0; }
		
		//name=EString
		public Assignment getNameAssignment_1_1_1() { return cNameAssignment_1_1_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_1_1_0() { return cNameEStringParserRuleCall_1_1_1_0; }
		
		//('parallelism' parallelism=EShort)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'parallelism'
		public Keyword getParallelismKeyword_1_2_0() { return cParallelismKeyword_1_2_0; }
		
		//parallelism=EShort
		public Assignment getParallelismAssignment_1_2_1() { return cParallelismAssignment_1_2_1; }
		
		//EShort
		public RuleCall getParallelismEShortParserRuleCall_1_2_1_0() { return cParallelismEShortParserRuleCall_1_2_1_0; }
		
		//('reuseExecutor' reuseExecutor=EString)?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'reuseExecutor'
		public Keyword getReuseExecutorKeyword_1_3_0() { return cReuseExecutorKeyword_1_3_0; }
		
		//reuseExecutor=EString
		public Assignment getReuseExecutorAssignment_1_3_1() { return cReuseExecutorAssignment_1_3_1; }
		
		//EString
		public RuleCall getReuseExecutorEStringParserRuleCall_1_3_1_0() { return cReuseExecutorEStringParserRuleCall_1_3_1_0; }
		
		//(executors+=Executor)*
		public Assignment getExecutorsAssignment_1_4() { return cExecutorsAssignment_1_4; }
		
		//Executor
		public RuleCall getExecutorsExecutorParserRuleCall_1_4_0() { return cExecutorsExecutorParserRuleCall_1_4_0; }
		
		//(environments+=Environment)*
		public Assignment getEnvironmentsAssignment_1_5() { return cEnvironmentsAssignment_1_5; }
		
		//Environment
		public RuleCall getEnvironmentsEnvironmentParserRuleCall_1_5_0() { return cEnvironmentsEnvironmentParserRuleCall_1_5_0; }
		
		//(parameters+=Parameter)*
		public Assignment getParametersAssignment_1_6() { return cParametersAssignment_1_6; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_1_6_0() { return cParametersParameterParserRuleCall_1_6_0; }
		
		//(steps+=Step)+
		public Assignment getStepsAssignment_1_7() { return cStepsAssignment_1_7; }
		
		//Step
		public RuleCall getStepsStepParserRuleCall_1_7_0() { return cStepsStepParserRuleCall_1_7_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_8() { return cENDTerminalRuleCall_1_8; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class EBooleanObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.EBooleanObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBooleanObject returns ecore::EBooleanObject:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParameterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cNameKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cNameAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_1_2_0 = (RuleCall)cNameAssignment_1_2.eContents().get(0);
		private final Keyword cTypeKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cTypeAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cTypePARAMETER_TYPESEnumRuleCall_1_4_0 = (RuleCall)cTypeAssignment_1_4.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cGroup_1.eContents().get(5);
		private final Keyword cDefaultKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Assignment cDefaultAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final RuleCall cDefaultEStringParserRuleCall_1_5_1_0 = (RuleCall)cDefaultAssignment_1_5_1.eContents().get(0);
		private final Group cGroup_1_6 = (Group)cGroup_1.eContents().get(6);
		private final Keyword cDescriptionKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_6_1 = (Assignment)cGroup_1_6.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_1_6_1_0 = (RuleCall)cDescriptionAssignment_1_6_1.eContents().get(0);
		private final Group cGroup_1_7 = (Group)cGroup_1.eContents().get(7);
		private final Keyword cEnumValuesKeyword_1_7_0 = (Keyword)cGroup_1_7.eContents().get(0);
		private final Assignment cEnumValuesAssignment_1_7_1 = (Assignment)cGroup_1_7.eContents().get(1);
		private final RuleCall cEnumValuesEStringParserRuleCall_1_7_1_0 = (RuleCall)cEnumValuesAssignment_1_7_1.eContents().get(0);
		private final Group cGroup_1_7_2 = (Group)cGroup_1_7.eContents().get(2);
		private final Keyword cCommaKeyword_1_7_2_0 = (Keyword)cGroup_1_7_2.eContents().get(0);
		private final Assignment cEnumValuesAssignment_1_7_2_1 = (Assignment)cGroup_1_7_2.eContents().get(1);
		private final RuleCall cEnumValuesEStringParserRuleCall_1_7_2_1_0 = (RuleCall)cEnumValuesAssignment_1_7_2_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_8 = (RuleCall)cGroup_1.eContents().get(8);
		
		//Parameter returns Parameter:
		//    'Parameter'
		//    (BEGIN
		//        'name' name=EString
		//        'type' type=PARAMETER_TYPES
		//        ('default' default=EString )?
		//        ('description' description=EString )?
		//        ('enumValues' enumValues+=EString (',' enumValues+=EString)*)?
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Parameter'
		//(BEGIN
		//    'name' name=EString
		//    'type' type=PARAMETER_TYPES
		//    ('default' default=EString )?
		//    ('description' description=EString )?
		//    ('enumValues' enumValues+=EString (',' enumValues+=EString)*)?
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Parameter'
		public Keyword getParameterKeyword_0() { return cParameterKeyword_0; }
		
		//(BEGIN
		//    'name' name=EString
		//    'type' type=PARAMETER_TYPES
		//    ('default' default=EString )?
		//    ('description' description=EString )?
		//    ('enumValues' enumValues+=EString (',' enumValues+=EString)*)?
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'name'
		public Keyword getNameKeyword_1_1() { return cNameKeyword_1_1; }
		
		//name=EString
		public Assignment getNameAssignment_1_2() { return cNameAssignment_1_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_2_0() { return cNameEStringParserRuleCall_1_2_0; }
		
		//'type'
		public Keyword getTypeKeyword_1_3() { return cTypeKeyword_1_3; }
		
		//type=PARAMETER_TYPES
		public Assignment getTypeAssignment_1_4() { return cTypeAssignment_1_4; }
		
		//PARAMETER_TYPES
		public RuleCall getTypePARAMETER_TYPESEnumRuleCall_1_4_0() { return cTypePARAMETER_TYPESEnumRuleCall_1_4_0; }
		
		//('default' default=EString )?
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'default'
		public Keyword getDefaultKeyword_1_5_0() { return cDefaultKeyword_1_5_0; }
		
		//default=EString
		public Assignment getDefaultAssignment_1_5_1() { return cDefaultAssignment_1_5_1; }
		
		//EString
		public RuleCall getDefaultEStringParserRuleCall_1_5_1_0() { return cDefaultEStringParserRuleCall_1_5_1_0; }
		
		//('description' description=EString )?
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//'description'
		public Keyword getDescriptionKeyword_1_6_0() { return cDescriptionKeyword_1_6_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_1_6_1() { return cDescriptionAssignment_1_6_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_1_6_1_0() { return cDescriptionEStringParserRuleCall_1_6_1_0; }
		
		//('enumValues' enumValues+=EString (',' enumValues+=EString)*)?
		public Group getGroup_1_7() { return cGroup_1_7; }
		
		//'enumValues'
		public Keyword getEnumValuesKeyword_1_7_0() { return cEnumValuesKeyword_1_7_0; }
		
		//enumValues+=EString
		public Assignment getEnumValuesAssignment_1_7_1() { return cEnumValuesAssignment_1_7_1; }
		
		//EString
		public RuleCall getEnumValuesEStringParserRuleCall_1_7_1_0() { return cEnumValuesEStringParserRuleCall_1_7_1_0; }
		
		//(',' enumValues+=EString)*
		public Group getGroup_1_7_2() { return cGroup_1_7_2; }
		
		//','
		public Keyword getCommaKeyword_1_7_2_0() { return cCommaKeyword_1_7_2_0; }
		
		//enumValues+=EString
		public Assignment getEnumValuesAssignment_1_7_2_1() { return cEnumValuesAssignment_1_7_2_1; }
		
		//EString
		public RuleCall getEnumValuesEStringParserRuleCall_1_7_2_1_0() { return cEnumValuesEStringParserRuleCall_1_7_2_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_8() { return cENDTerminalRuleCall_1_8; }
	}
	public class RunElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.Run");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRunKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cNameKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_1_1_0 = (RuleCall)cNameAssignment_1_1_1.eContents().get(0);
		private final Assignment cBackgroundAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final Keyword cBackgroundBackgroundKeyword_1_2_0 = (Keyword)cBackgroundAssignment_1_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cWhenKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cWhenAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cWhenWHEN_TYPEEnumRuleCall_1_3_1_0 = (RuleCall)cWhenAssignment_1_3_1.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final Keyword cWorking_directoryKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Assignment cWorking_directoryAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cWorking_directoryEStringParserRuleCall_1_4_1_0 = (RuleCall)cWorking_directoryAssignment_1_4_1.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cGroup_1.eContents().get(5);
		private final Keyword cNo_output_timeoutKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Assignment cNo_output_timeoutAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final RuleCall cNo_output_timeoutEStringParserRuleCall_1_5_1_0 = (RuleCall)cNo_output_timeoutAssignment_1_5_1.eContents().get(0);
		private final Group cGroup_1_6 = (Group)cGroup_1.eContents().get(6);
		private final Keyword cShellKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final Assignment cShellAssignment_1_6_1 = (Assignment)cGroup_1_6.eContents().get(1);
		private final RuleCall cShellEStringParserRuleCall_1_6_1_0 = (RuleCall)cShellAssignment_1_6_1.eContents().get(0);
		private final Assignment cEnvironmentsAssignment_1_7 = (Assignment)cGroup_1.eContents().get(7);
		private final RuleCall cEnvironmentsEnvironmentParserRuleCall_1_7_0 = (RuleCall)cEnvironmentsAssignment_1_7.eContents().get(0);
		private final Assignment cRun_commandsAssignment_1_8 = (Assignment)cGroup_1.eContents().get(8);
		private final RuleCall cRun_commandsRunCommandParserRuleCall_1_8_0 = (RuleCall)cRun_commandsAssignment_1_8.eContents().get(0);
		private final Assignment cParametersAssignment_1_9 = (Assignment)cGroup_1.eContents().get(9);
		private final RuleCall cParametersParametersParserRuleCall_1_9_0 = (RuleCall)cParametersAssignment_1_9.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_10 = (RuleCall)cGroup_1.eContents().get(10);
		
		//Run returns Run:
		//    'Run'
		//    (BEGIN
		//        ('name' name=EString)?
		//        (background?='background')?
		//        ('when' when=WHEN_TYPE)?
		//        ('working_directory' working_directory=EString)?
		//        ('no_output_timeout' no_output_timeout=EString)?
		//        ('shell' shell=EString)?
		//        (environments+=Environment)*
		//        (run_commands+=RunCommand)+
		//        (parameters+=Parameters)*
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Run'
		//(BEGIN
		//    ('name' name=EString)?
		//    (background?='background')?
		//    ('when' when=WHEN_TYPE)?
		//    ('working_directory' working_directory=EString)?
		//    ('no_output_timeout' no_output_timeout=EString)?
		//    ('shell' shell=EString)?
		//    (environments+=Environment)*
		//    (run_commands+=RunCommand)+
		//    (parameters+=Parameters)*
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Run'
		public Keyword getRunKeyword_0() { return cRunKeyword_0; }
		
		//(BEGIN
		//    ('name' name=EString)?
		//    (background?='background')?
		//    ('when' when=WHEN_TYPE)?
		//    ('working_directory' working_directory=EString)?
		//    ('no_output_timeout' no_output_timeout=EString)?
		//    ('shell' shell=EString)?
		//    (environments+=Environment)*
		//    (run_commands+=RunCommand)+
		//    (parameters+=Parameters)*
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//('name' name=EString)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'name'
		public Keyword getNameKeyword_1_1_0() { return cNameKeyword_1_1_0; }
		
		//name=EString
		public Assignment getNameAssignment_1_1_1() { return cNameAssignment_1_1_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_1_1_0() { return cNameEStringParserRuleCall_1_1_1_0; }
		
		//(background?='background')?
		public Assignment getBackgroundAssignment_1_2() { return cBackgroundAssignment_1_2; }
		
		//'background'
		public Keyword getBackgroundBackgroundKeyword_1_2_0() { return cBackgroundBackgroundKeyword_1_2_0; }
		
		//('when' when=WHEN_TYPE)?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'when'
		public Keyword getWhenKeyword_1_3_0() { return cWhenKeyword_1_3_0; }
		
		//when=WHEN_TYPE
		public Assignment getWhenAssignment_1_3_1() { return cWhenAssignment_1_3_1; }
		
		//WHEN_TYPE
		public RuleCall getWhenWHEN_TYPEEnumRuleCall_1_3_1_0() { return cWhenWHEN_TYPEEnumRuleCall_1_3_1_0; }
		
		//('working_directory' working_directory=EString)?
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'working_directory'
		public Keyword getWorking_directoryKeyword_1_4_0() { return cWorking_directoryKeyword_1_4_0; }
		
		//working_directory=EString
		public Assignment getWorking_directoryAssignment_1_4_1() { return cWorking_directoryAssignment_1_4_1; }
		
		//EString
		public RuleCall getWorking_directoryEStringParserRuleCall_1_4_1_0() { return cWorking_directoryEStringParserRuleCall_1_4_1_0; }
		
		//('no_output_timeout' no_output_timeout=EString)?
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'no_output_timeout'
		public Keyword getNo_output_timeoutKeyword_1_5_0() { return cNo_output_timeoutKeyword_1_5_0; }
		
		//no_output_timeout=EString
		public Assignment getNo_output_timeoutAssignment_1_5_1() { return cNo_output_timeoutAssignment_1_5_1; }
		
		//EString
		public RuleCall getNo_output_timeoutEStringParserRuleCall_1_5_1_0() { return cNo_output_timeoutEStringParserRuleCall_1_5_1_0; }
		
		//('shell' shell=EString)?
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//'shell'
		public Keyword getShellKeyword_1_6_0() { return cShellKeyword_1_6_0; }
		
		//shell=EString
		public Assignment getShellAssignment_1_6_1() { return cShellAssignment_1_6_1; }
		
		//EString
		public RuleCall getShellEStringParserRuleCall_1_6_1_0() { return cShellEStringParserRuleCall_1_6_1_0; }
		
		//(environments+=Environment)*
		public Assignment getEnvironmentsAssignment_1_7() { return cEnvironmentsAssignment_1_7; }
		
		//Environment
		public RuleCall getEnvironmentsEnvironmentParserRuleCall_1_7_0() { return cEnvironmentsEnvironmentParserRuleCall_1_7_0; }
		
		//(run_commands+=RunCommand)+
		public Assignment getRun_commandsAssignment_1_8() { return cRun_commandsAssignment_1_8; }
		
		//RunCommand
		public RuleCall getRun_commandsRunCommandParserRuleCall_1_8_0() { return cRun_commandsRunCommandParserRuleCall_1_8_0; }
		
		//(parameters+=Parameters)*
		public Assignment getParametersAssignment_1_9() { return cParametersAssignment_1_9; }
		
		//Parameters
		public RuleCall getParametersParametersParserRuleCall_1_9_0() { return cParametersParametersParserRuleCall_1_9_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_10() { return cENDTerminalRuleCall_1_10; }
	}
	public class RestoreCacheElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.RestoreCache");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRestoreCacheAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRestoreCacheKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cNameKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cNameAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_2_1_1_0 = (RuleCall)cNameAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cKeyKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cKeyAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cKeyEStringParserRuleCall_2_2_1_0 = (RuleCall)cKeyAssignment_2_2_1.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Keyword cKeysKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cKeysAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cKeysEStringParserRuleCall_2_3_1_0 = (RuleCall)cKeysAssignment_2_3_1.eContents().get(0);
		private final Group cGroup_2_3_2 = (Group)cGroup_2_3.eContents().get(2);
		private final Keyword cCommaKeyword_2_3_2_0 = (Keyword)cGroup_2_3_2.eContents().get(0);
		private final Assignment cKeysAssignment_2_3_2_1 = (Assignment)cGroup_2_3_2.eContents().get(1);
		private final RuleCall cKeysEStringParserRuleCall_2_3_2_1_0 = (RuleCall)cKeysAssignment_2_3_2_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_4 = (RuleCall)cGroup_2.eContents().get(4);
		
		//RestoreCache returns RestoreCache:
		//    {RestoreCache}
		//    'RestoreCache'
		//    (BEGIN
		//        ('name' name=EString)?
		//        ('key' key=EString)?
		//        ('keys' keys+=EString (',' keys+=EString)*)?
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//{RestoreCache}
		//'RestoreCache'
		//(BEGIN
		//    ('name' name=EString)?
		//    ('key' key=EString)?
		//    ('keys' keys+=EString (',' keys+=EString)*)?
		//END)
		public Group getGroup() { return cGroup; }
		
		//{RestoreCache}
		public Action getRestoreCacheAction_0() { return cRestoreCacheAction_0; }
		
		//'RestoreCache'
		public Keyword getRestoreCacheKeyword_1() { return cRestoreCacheKeyword_1; }
		
		//(BEGIN
		//    ('name' name=EString)?
		//    ('key' key=EString)?
		//    ('keys' keys+=EString (',' keys+=EString)*)?
		//END)
		public Group getGroup_2() { return cGroup_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_0() { return cBEGINTerminalRuleCall_2_0; }
		
		//('name' name=EString)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'name'
		public Keyword getNameKeyword_2_1_0() { return cNameKeyword_2_1_0; }
		
		//name=EString
		public Assignment getNameAssignment_2_1_1() { return cNameAssignment_2_1_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_1_1_0() { return cNameEStringParserRuleCall_2_1_1_0; }
		
		//('key' key=EString)?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'key'
		public Keyword getKeyKeyword_2_2_0() { return cKeyKeyword_2_2_0; }
		
		//key=EString
		public Assignment getKeyAssignment_2_2_1() { return cKeyAssignment_2_2_1; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_2_2_1_0() { return cKeyEStringParserRuleCall_2_2_1_0; }
		
		//('keys' keys+=EString (',' keys+=EString)*)?
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//'keys'
		public Keyword getKeysKeyword_2_3_0() { return cKeysKeyword_2_3_0; }
		
		//keys+=EString
		public Assignment getKeysAssignment_2_3_1() { return cKeysAssignment_2_3_1; }
		
		//EString
		public RuleCall getKeysEStringParserRuleCall_2_3_1_0() { return cKeysEStringParserRuleCall_2_3_1_0; }
		
		//(',' keys+=EString)*
		public Group getGroup_2_3_2() { return cGroup_2_3_2; }
		
		//','
		public Keyword getCommaKeyword_2_3_2_0() { return cCommaKeyword_2_3_2_0; }
		
		//keys+=EString
		public Assignment getKeysAssignment_2_3_2_1() { return cKeysAssignment_2_3_2_1; }
		
		//EString
		public RuleCall getKeysEStringParserRuleCall_2_3_2_1_0() { return cKeysEStringParserRuleCall_2_3_2_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_4() { return cENDTerminalRuleCall_2_4; }
	}
	public class PersistToWorkspaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.PersistToWorkspace");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPersistToWorkspaceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cNameKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_1_1_0 = (RuleCall)cNameAssignment_1_1_1.eContents().get(0);
		private final Keyword cRootKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cRootAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cRootEStringParserRuleCall_1_3_0 = (RuleCall)cRootAssignment_1_3.eContents().get(0);
		private final Keyword cPathsKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cPathsAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cPathsEStringParserRuleCall_1_5_0 = (RuleCall)cPathsAssignment_1_5.eContents().get(0);
		private final Group cGroup_1_6 = (Group)cGroup_1.eContents().get(6);
		private final Keyword cCommaKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final Assignment cPathsAssignment_1_6_1 = (Assignment)cGroup_1_6.eContents().get(1);
		private final RuleCall cPathsEStringParserRuleCall_1_6_1_0 = (RuleCall)cPathsAssignment_1_6_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_7 = (RuleCall)cGroup_1.eContents().get(7);
		
		//PersistToWorkspace returns PersistToWorkspace:
		//    'PersistToWorkspace'
		//    (BEGIN
		//        ('name' name=EString)?
		//        'root' root=EString
		//        'paths' paths+=EString (',' paths+=EString)*
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'PersistToWorkspace'
		//(BEGIN
		//    ('name' name=EString)?
		//    'root' root=EString
		//    'paths' paths+=EString (',' paths+=EString)*
		//END)
		public Group getGroup() { return cGroup; }
		
		//'PersistToWorkspace'
		public Keyword getPersistToWorkspaceKeyword_0() { return cPersistToWorkspaceKeyword_0; }
		
		//(BEGIN
		//    ('name' name=EString)?
		//    'root' root=EString
		//    'paths' paths+=EString (',' paths+=EString)*
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//('name' name=EString)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'name'
		public Keyword getNameKeyword_1_1_0() { return cNameKeyword_1_1_0; }
		
		//name=EString
		public Assignment getNameAssignment_1_1_1() { return cNameAssignment_1_1_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_1_1_0() { return cNameEStringParserRuleCall_1_1_1_0; }
		
		//'root'
		public Keyword getRootKeyword_1_2() { return cRootKeyword_1_2; }
		
		//root=EString
		public Assignment getRootAssignment_1_3() { return cRootAssignment_1_3; }
		
		//EString
		public RuleCall getRootEStringParserRuleCall_1_3_0() { return cRootEStringParserRuleCall_1_3_0; }
		
		//'paths'
		public Keyword getPathsKeyword_1_4() { return cPathsKeyword_1_4; }
		
		//paths+=EString
		public Assignment getPathsAssignment_1_5() { return cPathsAssignment_1_5; }
		
		//EString
		public RuleCall getPathsEStringParserRuleCall_1_5_0() { return cPathsEStringParserRuleCall_1_5_0; }
		
		//(',' paths+=EString)*
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//','
		public Keyword getCommaKeyword_1_6_0() { return cCommaKeyword_1_6_0; }
		
		//paths+=EString
		public Assignment getPathsAssignment_1_6_1() { return cPathsAssignment_1_6_1; }
		
		//EString
		public RuleCall getPathsEStringParserRuleCall_1_6_1_0() { return cPathsEStringParserRuleCall_1_6_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_7() { return cENDTerminalRuleCall_1_7; }
	}
	public class StoreArtifactElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.StoreArtifact");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStoreArtifactKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cNameKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_1_1_0 = (RuleCall)cNameAssignment_1_1_1.eContents().get(0);
		private final Keyword cPathKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cPathAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cPathEStringParserRuleCall_1_3_0 = (RuleCall)cPathAssignment_1_3.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final Keyword cDestinationKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Assignment cDestinationAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cDestinationEStringParserRuleCall_1_4_1_0 = (RuleCall)cDestinationAssignment_1_4_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_5 = (RuleCall)cGroup_1.eContents().get(5);
		
		//StoreArtifact returns StoreArtifact:
		//    'StoreArtifact'
		//    (BEGIN
		//        ('name' name=EString)?
		//        'path' path=EString
		//        ('destination' destination=EString)?
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'StoreArtifact'
		//(BEGIN
		//    ('name' name=EString)?
		//    'path' path=EString
		//    ('destination' destination=EString)?
		//END)
		public Group getGroup() { return cGroup; }
		
		//'StoreArtifact'
		public Keyword getStoreArtifactKeyword_0() { return cStoreArtifactKeyword_0; }
		
		//(BEGIN
		//    ('name' name=EString)?
		//    'path' path=EString
		//    ('destination' destination=EString)?
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//('name' name=EString)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'name'
		public Keyword getNameKeyword_1_1_0() { return cNameKeyword_1_1_0; }
		
		//name=EString
		public Assignment getNameAssignment_1_1_1() { return cNameAssignment_1_1_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_1_1_0() { return cNameEStringParserRuleCall_1_1_1_0; }
		
		//'path'
		public Keyword getPathKeyword_1_2() { return cPathKeyword_1_2; }
		
		//path=EString
		public Assignment getPathAssignment_1_3() { return cPathAssignment_1_3; }
		
		//EString
		public RuleCall getPathEStringParserRuleCall_1_3_0() { return cPathEStringParserRuleCall_1_3_0; }
		
		//('destination' destination=EString)?
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'destination'
		public Keyword getDestinationKeyword_1_4_0() { return cDestinationKeyword_1_4_0; }
		
		//destination=EString
		public Assignment getDestinationAssignment_1_4_1() { return cDestinationAssignment_1_4_1; }
		
		//EString
		public RuleCall getDestinationEStringParserRuleCall_1_4_1_0() { return cDestinationEStringParserRuleCall_1_4_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_5() { return cENDTerminalRuleCall_1_5; }
	}
	public class StoreTestResultsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.StoreTestResults");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStoreTestResultsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cNameKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_1_1_0 = (RuleCall)cNameAssignment_1_1_1.eContents().get(0);
		private final Keyword cPathKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cPathAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cPathEStringParserRuleCall_1_3_0 = (RuleCall)cPathAssignment_1_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_4 = (RuleCall)cGroup_1.eContents().get(4);
		
		//StoreTestResults returns StoreTestResults:
		//    'StoreTestResults'
		//    (BEGIN
		//        ('name' name=EString )?
		//        'path' path=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'StoreTestResults'
		//(BEGIN
		//    ('name' name=EString )?
		//    'path' path=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'StoreTestResults'
		public Keyword getStoreTestResultsKeyword_0() { return cStoreTestResultsKeyword_0; }
		
		//(BEGIN
		//    ('name' name=EString )?
		//    'path' path=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//('name' name=EString )?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'name'
		public Keyword getNameKeyword_1_1_0() { return cNameKeyword_1_1_0; }
		
		//name=EString
		public Assignment getNameAssignment_1_1_1() { return cNameAssignment_1_1_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_1_1_0() { return cNameEStringParserRuleCall_1_1_1_0; }
		
		//'path'
		public Keyword getPathKeyword_1_2() { return cPathKeyword_1_2; }
		
		//path=EString
		public Assignment getPathAssignment_1_3() { return cPathAssignment_1_3; }
		
		//EString
		public RuleCall getPathEStringParserRuleCall_1_3_0() { return cPathEStringParserRuleCall_1_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_4() { return cENDTerminalRuleCall_1_4; }
	}
	public class SetupRemoteDockerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.SetupRemoteDocker");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSetupRemoteDockerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSetupRemoteDockerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cNameKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cNameAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_2_1_1_0 = (RuleCall)cNameAssignment_2_1_1.eContents().get(0);
		private final Assignment cDocker_layer_cachingAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final Keyword cDocker_layer_cachingDocker_layer_cachingKeyword_2_2_0 = (Keyword)cDocker_layer_cachingAssignment_2_2.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Keyword cVersionKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cVersionAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cVersionEStringParserRuleCall_2_3_1_0 = (RuleCall)cVersionAssignment_2_3_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_4 = (RuleCall)cGroup_2.eContents().get(4);
		
		//SetupRemoteDocker returns SetupRemoteDocker:
		//    {SetupRemoteDocker}
		//    'SetupRemoteDocker'
		//    (BEGIN
		//        ('name' name=EString)?
		//        (docker_layer_caching?='docker_layer_caching' )?
		//        ('version' version=EString)?
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//{SetupRemoteDocker}
		//'SetupRemoteDocker'
		//(BEGIN
		//    ('name' name=EString)?
		//    (docker_layer_caching?='docker_layer_caching' )?
		//    ('version' version=EString)?
		//END)
		public Group getGroup() { return cGroup; }
		
		//{SetupRemoteDocker}
		public Action getSetupRemoteDockerAction_0() { return cSetupRemoteDockerAction_0; }
		
		//'SetupRemoteDocker'
		public Keyword getSetupRemoteDockerKeyword_1() { return cSetupRemoteDockerKeyword_1; }
		
		//(BEGIN
		//    ('name' name=EString)?
		//    (docker_layer_caching?='docker_layer_caching' )?
		//    ('version' version=EString)?
		//END)
		public Group getGroup_2() { return cGroup_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_0() { return cBEGINTerminalRuleCall_2_0; }
		
		//('name' name=EString)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'name'
		public Keyword getNameKeyword_2_1_0() { return cNameKeyword_2_1_0; }
		
		//name=EString
		public Assignment getNameAssignment_2_1_1() { return cNameAssignment_2_1_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_1_1_0() { return cNameEStringParserRuleCall_2_1_1_0; }
		
		//(docker_layer_caching?='docker_layer_caching' )?
		public Assignment getDocker_layer_cachingAssignment_2_2() { return cDocker_layer_cachingAssignment_2_2; }
		
		//'docker_layer_caching'
		public Keyword getDocker_layer_cachingDocker_layer_cachingKeyword_2_2_0() { return cDocker_layer_cachingDocker_layer_cachingKeyword_2_2_0; }
		
		//('version' version=EString)?
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//'version'
		public Keyword getVersionKeyword_2_3_0() { return cVersionKeyword_2_3_0; }
		
		//version=EString
		public Assignment getVersionAssignment_2_3_1() { return cVersionAssignment_2_3_1; }
		
		//EString
		public RuleCall getVersionEStringParserRuleCall_2_3_1_0() { return cVersionEStringParserRuleCall_2_3_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_4() { return cENDTerminalRuleCall_2_4; }
	}
	public class AddSSHKeysElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.AddSSHKeys");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAddSSHKeysAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAddSSHKeysKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cNameKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cNameAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_2_1_1_0 = (RuleCall)cNameAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cFingerprintsKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cFingerprintsAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cFingerprintsEStringParserRuleCall_2_2_1_0 = (RuleCall)cFingerprintsAssignment_2_2_1.eContents().get(0);
		private final Group cGroup_2_2_2 = (Group)cGroup_2_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_2_0 = (Keyword)cGroup_2_2_2.eContents().get(0);
		private final Assignment cFingerprintsAssignment_2_2_2_1 = (Assignment)cGroup_2_2_2.eContents().get(1);
		private final RuleCall cFingerprintsEStringParserRuleCall_2_2_2_1_0 = (RuleCall)cFingerprintsAssignment_2_2_2_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		
		//AddSSHKeys returns AddSSHKeys:
		//    {AddSSHKeys}
		//    'AddSSHKeys'
		//    (BEGIN
		//        ('name' name=EString)?
		//        ('fingerprints' fingerprints+=EString (',' fingerprints+=EString) )?
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//{AddSSHKeys}
		//'AddSSHKeys'
		//(BEGIN
		//    ('name' name=EString)?
		//    ('fingerprints' fingerprints+=EString (',' fingerprints+=EString) )?
		//END)
		public Group getGroup() { return cGroup; }
		
		//{AddSSHKeys}
		public Action getAddSSHKeysAction_0() { return cAddSSHKeysAction_0; }
		
		//'AddSSHKeys'
		public Keyword getAddSSHKeysKeyword_1() { return cAddSSHKeysKeyword_1; }
		
		//(BEGIN
		//    ('name' name=EString)?
		//    ('fingerprints' fingerprints+=EString (',' fingerprints+=EString) )?
		//END)
		public Group getGroup_2() { return cGroup_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_0() { return cBEGINTerminalRuleCall_2_0; }
		
		//('name' name=EString)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'name'
		public Keyword getNameKeyword_2_1_0() { return cNameKeyword_2_1_0; }
		
		//name=EString
		public Assignment getNameAssignment_2_1_1() { return cNameAssignment_2_1_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_1_1_0() { return cNameEStringParserRuleCall_2_1_1_0; }
		
		//('fingerprints' fingerprints+=EString (',' fingerprints+=EString) )?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'fingerprints'
		public Keyword getFingerprintsKeyword_2_2_0() { return cFingerprintsKeyword_2_2_0; }
		
		//fingerprints+=EString
		public Assignment getFingerprintsAssignment_2_2_1() { return cFingerprintsAssignment_2_2_1; }
		
		//EString
		public RuleCall getFingerprintsEStringParserRuleCall_2_2_1_0() { return cFingerprintsEStringParserRuleCall_2_2_1_0; }
		
		//(',' fingerprints+=EString)
		public Group getGroup_2_2_2() { return cGroup_2_2_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_2_0() { return cCommaKeyword_2_2_2_0; }
		
		//fingerprints+=EString
		public Assignment getFingerprintsAssignment_2_2_2_1() { return cFingerprintsAssignment_2_2_2_1; }
		
		//EString
		public RuleCall getFingerprintsEStringParserRuleCall_2_2_2_1_0() { return cFingerprintsEStringParserRuleCall_2_2_2_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_3() { return cENDTerminalRuleCall_2_3; }
	}
	public class SaveCacheElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.SaveCache");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSaveCacheKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cNameKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_1_1_0 = (RuleCall)cNameAssignment_1_1_1.eContents().get(0);
		private final Keyword cPathsKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cPathsAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cPathsEStringParserRuleCall_1_3_0 = (RuleCall)cPathsAssignment_1_3.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final Keyword cCommaKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Assignment cPathsAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cPathsEStringParserRuleCall_1_4_1_0 = (RuleCall)cPathsAssignment_1_4_1.eContents().get(0);
		private final Keyword cKeyKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Assignment cKeyAssignment_1_6 = (Assignment)cGroup_1.eContents().get(6);
		private final RuleCall cKeyEStringParserRuleCall_1_6_0 = (RuleCall)cKeyAssignment_1_6.eContents().get(0);
		private final Group cGroup_1_7 = (Group)cGroup_1.eContents().get(7);
		private final Keyword cWhenKeyword_1_7_0 = (Keyword)cGroup_1_7.eContents().get(0);
		private final Assignment cWhenAssignment_1_7_1 = (Assignment)cGroup_1_7.eContents().get(1);
		private final RuleCall cWhenWHEN_TYPEEnumRuleCall_1_7_1_0 = (RuleCall)cWhenAssignment_1_7_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_8 = (RuleCall)cGroup_1.eContents().get(8);
		
		//SaveCache returns SaveCache:
		//    'SaveCache'
		//    (BEGIN
		//        ('name' name=EString)?
		//        'paths' paths+=EString (',' paths+=EString)*
		//        'key' key=EString
		//        ('when' when=WHEN_TYPE)?
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'SaveCache'
		//(BEGIN
		//    ('name' name=EString)?
		//    'paths' paths+=EString (',' paths+=EString)*
		//    'key' key=EString
		//    ('when' when=WHEN_TYPE)?
		//END)
		public Group getGroup() { return cGroup; }
		
		//'SaveCache'
		public Keyword getSaveCacheKeyword_0() { return cSaveCacheKeyword_0; }
		
		//(BEGIN
		//    ('name' name=EString)?
		//    'paths' paths+=EString (',' paths+=EString)*
		//    'key' key=EString
		//    ('when' when=WHEN_TYPE)?
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//('name' name=EString)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'name'
		public Keyword getNameKeyword_1_1_0() { return cNameKeyword_1_1_0; }
		
		//name=EString
		public Assignment getNameAssignment_1_1_1() { return cNameAssignment_1_1_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_1_1_0() { return cNameEStringParserRuleCall_1_1_1_0; }
		
		//'paths'
		public Keyword getPathsKeyword_1_2() { return cPathsKeyword_1_2; }
		
		//paths+=EString
		public Assignment getPathsAssignment_1_3() { return cPathsAssignment_1_3; }
		
		//EString
		public RuleCall getPathsEStringParserRuleCall_1_3_0() { return cPathsEStringParserRuleCall_1_3_0; }
		
		//(',' paths+=EString)*
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//','
		public Keyword getCommaKeyword_1_4_0() { return cCommaKeyword_1_4_0; }
		
		//paths+=EString
		public Assignment getPathsAssignment_1_4_1() { return cPathsAssignment_1_4_1; }
		
		//EString
		public RuleCall getPathsEStringParserRuleCall_1_4_1_0() { return cPathsEStringParserRuleCall_1_4_1_0; }
		
		//'key'
		public Keyword getKeyKeyword_1_5() { return cKeyKeyword_1_5; }
		
		//key=EString
		public Assignment getKeyAssignment_1_6() { return cKeyAssignment_1_6; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_1_6_0() { return cKeyEStringParserRuleCall_1_6_0; }
		
		//('when' when=WHEN_TYPE)?
		public Group getGroup_1_7() { return cGroup_1_7; }
		
		//'when'
		public Keyword getWhenKeyword_1_7_0() { return cWhenKeyword_1_7_0; }
		
		//when=WHEN_TYPE
		public Assignment getWhenAssignment_1_7_1() { return cWhenAssignment_1_7_1; }
		
		//WHEN_TYPE
		public RuleCall getWhenWHEN_TYPEEnumRuleCall_1_7_1_0() { return cWhenWHEN_TYPEEnumRuleCall_1_7_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_8() { return cENDTerminalRuleCall_1_8; }
	}
	public class AttachWorkspaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.AttachWorkspace");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttachWorkspaceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cNameKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_1_1_0 = (RuleCall)cNameAssignment_1_1_1.eContents().get(0);
		private final Keyword cAtKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cAtAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cAtEStringParserRuleCall_1_3_0 = (RuleCall)cAtAssignment_1_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_4 = (RuleCall)cGroup_1.eContents().get(4);
		
		//AttachWorkspace returns AttachWorkspace:
		//    'AttachWorkspace'
		//    (BEGIN
		//        ('name' name=EString)?
		//        'at' at=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'AttachWorkspace'
		//(BEGIN
		//    ('name' name=EString)?
		//    'at' at=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'AttachWorkspace'
		public Keyword getAttachWorkspaceKeyword_0() { return cAttachWorkspaceKeyword_0; }
		
		//(BEGIN
		//    ('name' name=EString)?
		//    'at' at=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//('name' name=EString)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'name'
		public Keyword getNameKeyword_1_1_0() { return cNameKeyword_1_1_0; }
		
		//name=EString
		public Assignment getNameAssignment_1_1_1() { return cNameAssignment_1_1_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_1_1_0() { return cNameEStringParserRuleCall_1_1_1_0; }
		
		//'at'
		public Keyword getAtKeyword_1_2() { return cAtKeyword_1_2; }
		
		//at=EString
		public Assignment getAtAssignment_1_3() { return cAtAssignment_1_3; }
		
		//EString
		public RuleCall getAtEStringParserRuleCall_1_3_0() { return cAtEStringParserRuleCall_1_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_4() { return cENDTerminalRuleCall_1_4; }
	}
	public class When_UnlessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.When_Unless");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWhen_UnlessKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cNameKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_1_1_0 = (RuleCall)cNameAssignment_1_1_1.eContents().get(0);
		private final Keyword cConditionKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cConditionAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cConditionEStringParserRuleCall_1_3_0 = (RuleCall)cConditionAssignment_1_3.eContents().get(0);
		private final Keyword cWhen_stepKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Group cGroup_1_5 = (Group)cGroup_1.eContents().get(5);
		private final RuleCall cBEGINTerminalRuleCall_1_5_0 = (RuleCall)cGroup_1_5.eContents().get(0);
		private final Assignment cWhen_stepAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final RuleCall cWhen_stepStepParserRuleCall_1_5_1_0 = (RuleCall)cWhen_stepAssignment_1_5_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_5_2 = (RuleCall)cGroup_1_5.eContents().get(2);
		private final Group cGroup_1_6 = (Group)cGroup_1.eContents().get(6);
		private final Keyword cUnless_stepKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final Group cGroup_1_6_1 = (Group)cGroup_1_6.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_6_1_0 = (RuleCall)cGroup_1_6_1.eContents().get(0);
		private final Assignment cUnless_stepAssignment_1_6_1_1 = (Assignment)cGroup_1_6_1.eContents().get(1);
		private final RuleCall cUnless_stepStepParserRuleCall_1_6_1_1_0 = (RuleCall)cUnless_stepAssignment_1_6_1_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_6_1_2 = (RuleCall)cGroup_1_6_1.eContents().get(2);
		private final RuleCall cENDTerminalRuleCall_1_7 = (RuleCall)cGroup_1.eContents().get(7);
		
		//When_Unless returns When_Unless:
		//    'When_Unless'
		//    (BEGIN
		//        ('name' name=EString)?
		//        'condition' condition=EString
		//        'when_step' (BEGIN (when_step+=Step)+ END)
		//        ('unless_step' (BEGIN (unless_step+=Step)+ END) )?
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'When_Unless'
		//(BEGIN
		//    ('name' name=EString)?
		//    'condition' condition=EString
		//    'when_step' (BEGIN (when_step+=Step)+ END)
		//    ('unless_step' (BEGIN (unless_step+=Step)+ END) )?
		//END)
		public Group getGroup() { return cGroup; }
		
		//'When_Unless'
		public Keyword getWhen_UnlessKeyword_0() { return cWhen_UnlessKeyword_0; }
		
		//(BEGIN
		//    ('name' name=EString)?
		//    'condition' condition=EString
		//    'when_step' (BEGIN (when_step+=Step)+ END)
		//    ('unless_step' (BEGIN (unless_step+=Step)+ END) )?
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//('name' name=EString)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'name'
		public Keyword getNameKeyword_1_1_0() { return cNameKeyword_1_1_0; }
		
		//name=EString
		public Assignment getNameAssignment_1_1_1() { return cNameAssignment_1_1_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_1_1_0() { return cNameEStringParserRuleCall_1_1_1_0; }
		
		//'condition'
		public Keyword getConditionKeyword_1_2() { return cConditionKeyword_1_2; }
		
		//condition=EString
		public Assignment getConditionAssignment_1_3() { return cConditionAssignment_1_3; }
		
		//EString
		public RuleCall getConditionEStringParserRuleCall_1_3_0() { return cConditionEStringParserRuleCall_1_3_0; }
		
		//'when_step'
		public Keyword getWhen_stepKeyword_1_4() { return cWhen_stepKeyword_1_4; }
		
		//(BEGIN (when_step+=Step)+ END)
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_5_0() { return cBEGINTerminalRuleCall_1_5_0; }
		
		//(when_step+=Step)+
		public Assignment getWhen_stepAssignment_1_5_1() { return cWhen_stepAssignment_1_5_1; }
		
		//Step
		public RuleCall getWhen_stepStepParserRuleCall_1_5_1_0() { return cWhen_stepStepParserRuleCall_1_5_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_5_2() { return cENDTerminalRuleCall_1_5_2; }
		
		//('unless_step' (BEGIN (unless_step+=Step)+ END) )?
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//'unless_step'
		public Keyword getUnless_stepKeyword_1_6_0() { return cUnless_stepKeyword_1_6_0; }
		
		//(BEGIN (unless_step+=Step)+ END)
		public Group getGroup_1_6_1() { return cGroup_1_6_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_6_1_0() { return cBEGINTerminalRuleCall_1_6_1_0; }
		
		//(unless_step+=Step)+
		public Assignment getUnless_stepAssignment_1_6_1_1() { return cUnless_stepAssignment_1_6_1_1; }
		
		//Step
		public RuleCall getUnless_stepStepParserRuleCall_1_6_1_1_0() { return cUnless_stepStepParserRuleCall_1_6_1_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_6_1_2() { return cENDTerminalRuleCall_1_6_1_2; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_7() { return cENDTerminalRuleCall_1_7; }
	}
	public class CheckoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.Checkout");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCheckoutAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCheckoutKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cNameKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cNameAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_2_1_1_0 = (RuleCall)cNameAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cPathKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cPathAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cPathEStringParserRuleCall_2_2_1_0 = (RuleCall)cPathAssignment_2_2_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		
		//Checkout returns Checkout:
		//    {Checkout}
		//    'Checkout'
		//    (BEGIN
		//        ('name' name=EString)?
		//        ('path' path=EString)?
		//    END)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Checkout}
		//'Checkout'
		//(BEGIN
		//    ('name' name=EString)?
		//    ('path' path=EString)?
		//END)?
		public Group getGroup() { return cGroup; }
		
		//{Checkout}
		public Action getCheckoutAction_0() { return cCheckoutAction_0; }
		
		//'Checkout'
		public Keyword getCheckoutKeyword_1() { return cCheckoutKeyword_1; }
		
		//(BEGIN
		//    ('name' name=EString)?
		//    ('path' path=EString)?
		//END)?
		public Group getGroup_2() { return cGroup_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_0() { return cBEGINTerminalRuleCall_2_0; }
		
		//('name' name=EString)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'name'
		public Keyword getNameKeyword_2_1_0() { return cNameKeyword_2_1_0; }
		
		//name=EString
		public Assignment getNameAssignment_2_1_1() { return cNameAssignment_2_1_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_1_1_0() { return cNameEStringParserRuleCall_2_1_1_0; }
		
		//('path' path=EString)?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'path'
		public Keyword getPathKeyword_2_2_0() { return cPathKeyword_2_2_0; }
		
		//path=EString
		public Assignment getPathAssignment_2_2_1() { return cPathAssignment_2_2_1; }
		
		//EString
		public RuleCall getPathEStringParserRuleCall_2_2_1_0() { return cPathEStringParserRuleCall_2_2_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_3() { return cENDTerminalRuleCall_2_3; }
	}
	public class EnvironmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.Environment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnvironmentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cKeyKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cKeyAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cKeyEStringParserRuleCall_1_2_0 = (RuleCall)cKeyAssignment_1_2.eContents().get(0);
		private final Keyword cValueKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cValueAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cValueEStringParserRuleCall_1_4_0 = (RuleCall)cValueAssignment_1_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_5 = (RuleCall)cGroup_1.eContents().get(5);
		
		//Environment returns Environment:
		//    'Environment'
		//    (BEGIN
		//        'key' key=EString
		//        'value' value=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Environment'
		//(BEGIN
		//    'key' key=EString
		//    'value' value=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Environment'
		public Keyword getEnvironmentKeyword_0() { return cEnvironmentKeyword_0; }
		
		//(BEGIN
		//    'key' key=EString
		//    'value' value=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'key'
		public Keyword getKeyKeyword_1_1() { return cKeyKeyword_1_1; }
		
		//key=EString
		public Assignment getKeyAssignment_1_2() { return cKeyAssignment_1_2; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_1_2_0() { return cKeyEStringParserRuleCall_1_2_0; }
		
		//'value'
		public Keyword getValueKeyword_1_3() { return cValueKeyword_1_3; }
		
		//value=EString
		public Assignment getValueAssignment_1_4() { return cValueAssignment_1_4; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_1_4_0() { return cValueEStringParserRuleCall_1_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_5() { return cENDTerminalRuleCall_1_5; }
	}
	public class RunCommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.RunCommand");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRunCommandAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRunCommandKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Keyword cNameKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cNameAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_2_0 = (RuleCall)cNameAssignment_2_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		
		//RunCommand returns RunCommand:
		//    {RunCommand}
		//    'RunCommand'
		//    (BEGIN
		//        'name' name=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//{RunCommand}
		//'RunCommand'
		//(BEGIN
		//    'name' name=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//{RunCommand}
		public Action getRunCommandAction_0() { return cRunCommandAction_0; }
		
		//'RunCommand'
		public Keyword getRunCommandKeyword_1() { return cRunCommandKeyword_1; }
		
		//(BEGIN
		//    'name' name=EString
		//END)
		public Group getGroup_2() { return cGroup_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_0() { return cBEGINTerminalRuleCall_2_0; }
		
		//'name'
		public Keyword getNameKeyword_2_1() { return cNameKeyword_2_1; }
		
		//name=EString
		public Assignment getNameAssignment_2_2() { return cNameAssignment_2_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_2_0() { return cNameEStringParserRuleCall_2_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_3() { return cENDTerminalRuleCall_2_3; }
	}
	public class ParametersElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.Parameters");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParametersKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cParameterKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cParameterAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cParameterEStringParserRuleCall_1_2_0 = (RuleCall)cParameterAssignment_1_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		
		//Parameters returns Parameters:
		//    'Parameters'
		//    (BEGIN
		//        'parameter' parameter=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Parameters'
		//(BEGIN
		//    'parameter' parameter=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Parameters'
		public Keyword getParametersKeyword_0() { return cParametersKeyword_0; }
		
		//(BEGIN
		//    'parameter' parameter=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'parameter'
		public Keyword getParameterKeyword_1_1() { return cParameterKeyword_1_1; }
		
		//parameter=EString
		public Assignment getParameterAssignment_1_2() { return cParameterAssignment_1_2; }
		
		//EString
		public RuleCall getParameterEStringParserRuleCall_1_2_0() { return cParameterEStringParserRuleCall_1_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3() { return cENDTerminalRuleCall_1_3; }
	}
	public class TriggerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.Trigger");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTriggerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cCronKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cCronAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cCronEStringParserRuleCall_1_2_0 = (RuleCall)cCronAssignment_1_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		
		//Trigger returns Trigger:
		//    'Trigger'
		//    (BEGIN
		//        'cron' cron=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Trigger'
		//(BEGIN
		//    'cron' cron=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Trigger'
		public Keyword getTriggerKeyword_0() { return cTriggerKeyword_0; }
		
		//(BEGIN
		//    'cron' cron=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'cron'
		public Keyword getCronKeyword_1_1() { return cCronKeyword_1_1; }
		
		//cron=EString
		public Assignment getCronAssignment_1_2() { return cCronAssignment_1_2; }
		
		//EString
		public RuleCall getCronEStringParserRuleCall_1_2_0() { return cCronEStringParserRuleCall_1_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3() { return cENDTerminalRuleCall_1_3; }
	}
	public class BranchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.Branch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBranchKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cNameKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cNameAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_1_2_0 = (RuleCall)cNameAssignment_1_2.eContents().get(0);
		private final Keyword cBranchKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cBranchAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cBranchBRANCH_TYPEEnumRuleCall_1_4_0 = (RuleCall)cBranchAssignment_1_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_5 = (RuleCall)cGroup_1.eContents().get(5);
		
		//Branch returns Branch:
		//    'Branch'
		//    (BEGIN
		//        'name' name=EString
		//        'branch' branch=BRANCH_TYPE
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Branch'
		//(BEGIN
		//    'name' name=EString
		//    'branch' branch=BRANCH_TYPE
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Branch'
		public Keyword getBranchKeyword_0() { return cBranchKeyword_0; }
		
		//(BEGIN
		//    'name' name=EString
		//    'branch' branch=BRANCH_TYPE
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'name'
		public Keyword getNameKeyword_1_1() { return cNameKeyword_1_1; }
		
		//name=EString
		public Assignment getNameAssignment_1_2() { return cNameAssignment_1_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_2_0() { return cNameEStringParserRuleCall_1_2_0; }
		
		//'branch'
		public Keyword getBranchKeyword_1_3() { return cBranchKeyword_1_3; }
		
		//branch=BRANCH_TYPE
		public Assignment getBranchAssignment_1_4() { return cBranchAssignment_1_4; }
		
		//BRANCH_TYPE
		public RuleCall getBranchBRANCH_TYPEEnumRuleCall_1_4_0() { return cBranchBRANCH_TYPEEnumRuleCall_1_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_5() { return cENDTerminalRuleCall_1_5; }
	}
	public class JobWorkflowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.JobWorkflow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cJobWorkflowAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cJobWorkflowKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Keyword cNameKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cNameAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_2_0 = (RuleCall)cNameAssignment_2_2.eContents().get(0);
		private final Assignment cApprovalJobAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final Keyword cApprovalJobApprovalJobKeyword_2_3_0 = (Keyword)cApprovalJobAssignment_2_3.eContents().get(0);
		private final Group cGroup_2_4 = (Group)cGroup_2.eContents().get(4);
		private final Keyword cRequiresKeyword_2_4_0 = (Keyword)cGroup_2_4.eContents().get(0);
		private final Assignment cRequiresAssignment_2_4_1 = (Assignment)cGroup_2_4.eContents().get(1);
		private final RuleCall cRequiresEStringParserRuleCall_2_4_1_0 = (RuleCall)cRequiresAssignment_2_4_1.eContents().get(0);
		private final Group cGroup_2_4_2 = (Group)cGroup_2_4.eContents().get(2);
		private final Keyword cCommaKeyword_2_4_2_0 = (Keyword)cGroup_2_4_2.eContents().get(0);
		private final Assignment cRequiresAssignment_2_4_2_1 = (Assignment)cGroup_2_4_2.eContents().get(1);
		private final RuleCall cRequiresEStringParserRuleCall_2_4_2_1_0 = (RuleCall)cRequiresAssignment_2_4_2_1.eContents().get(0);
		private final Group cGroup_2_5 = (Group)cGroup_2.eContents().get(5);
		private final Keyword cContextKeyword_2_5_0 = (Keyword)cGroup_2_5.eContents().get(0);
		private final Assignment cContextAssignment_2_5_1 = (Assignment)cGroup_2_5.eContents().get(1);
		private final RuleCall cContextEStringParserRuleCall_2_5_1_0 = (RuleCall)cContextAssignment_2_5_1.eContents().get(0);
		private final Group cGroup_2_5_2 = (Group)cGroup_2_5.eContents().get(2);
		private final Keyword cCommaKeyword_2_5_2_0 = (Keyword)cGroup_2_5_2.eContents().get(0);
		private final Assignment cContextAssignment_2_5_2_1 = (Assignment)cGroup_2_5_2.eContents().get(1);
		private final RuleCall cContextEStringParserRuleCall_2_5_2_1_0 = (RuleCall)cContextAssignment_2_5_2_1.eContents().get(0);
		private final Assignment cBranchesAssignment_2_6 = (Assignment)cGroup_2.eContents().get(6);
		private final RuleCall cBranchesBranchParserRuleCall_2_6_0 = (RuleCall)cBranchesAssignment_2_6.eContents().get(0);
		private final Assignment cMatrixAssignment_2_7 = (Assignment)cGroup_2.eContents().get(7);
		private final RuleCall cMatrixMatrixParserRuleCall_2_7_0 = (RuleCall)cMatrixAssignment_2_7.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_8 = (RuleCall)cGroup_2.eContents().get(8);
		
		//JobWorkflow returns JobWorkflow:
		//    {JobWorkflow}
		//    'JobWorkflow'
		//    (BEGIN
		//        'name' name=EString
		//        (approvalJob?='approvalJob' )?
		//        ('requires'requires+=EString (',' requires+=EString)* )?
		//        ('context' context+=EString (',' context+=EString)* )?
		//        (branches+=Branch)*
		//        (matrix=Matrix)?
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//{JobWorkflow}
		//'JobWorkflow'
		//(BEGIN
		//    'name' name=EString
		//    (approvalJob?='approvalJob' )?
		//    ('requires'requires+=EString (',' requires+=EString)* )?
		//    ('context' context+=EString (',' context+=EString)* )?
		//    (branches+=Branch)*
		//    (matrix=Matrix)?
		//END)
		public Group getGroup() { return cGroup; }
		
		//{JobWorkflow}
		public Action getJobWorkflowAction_0() { return cJobWorkflowAction_0; }
		
		//'JobWorkflow'
		public Keyword getJobWorkflowKeyword_1() { return cJobWorkflowKeyword_1; }
		
		//(BEGIN
		//    'name' name=EString
		//    (approvalJob?='approvalJob' )?
		//    ('requires'requires+=EString (',' requires+=EString)* )?
		//    ('context' context+=EString (',' context+=EString)* )?
		//    (branches+=Branch)*
		//    (matrix=Matrix)?
		//END)
		public Group getGroup_2() { return cGroup_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_0() { return cBEGINTerminalRuleCall_2_0; }
		
		//'name'
		public Keyword getNameKeyword_2_1() { return cNameKeyword_2_1; }
		
		//name=EString
		public Assignment getNameAssignment_2_2() { return cNameAssignment_2_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_2_0() { return cNameEStringParserRuleCall_2_2_0; }
		
		//(approvalJob?='approvalJob' )?
		public Assignment getApprovalJobAssignment_2_3() { return cApprovalJobAssignment_2_3; }
		
		//'approvalJob'
		public Keyword getApprovalJobApprovalJobKeyword_2_3_0() { return cApprovalJobApprovalJobKeyword_2_3_0; }
		
		//('requires'requires+=EString (',' requires+=EString)* )?
		public Group getGroup_2_4() { return cGroup_2_4; }
		
		//'requires'
		public Keyword getRequiresKeyword_2_4_0() { return cRequiresKeyword_2_4_0; }
		
		//requires+=EString
		public Assignment getRequiresAssignment_2_4_1() { return cRequiresAssignment_2_4_1; }
		
		//EString
		public RuleCall getRequiresEStringParserRuleCall_2_4_1_0() { return cRequiresEStringParserRuleCall_2_4_1_0; }
		
		//(',' requires+=EString)*
		public Group getGroup_2_4_2() { return cGroup_2_4_2; }
		
		//','
		public Keyword getCommaKeyword_2_4_2_0() { return cCommaKeyword_2_4_2_0; }
		
		//requires+=EString
		public Assignment getRequiresAssignment_2_4_2_1() { return cRequiresAssignment_2_4_2_1; }
		
		//EString
		public RuleCall getRequiresEStringParserRuleCall_2_4_2_1_0() { return cRequiresEStringParserRuleCall_2_4_2_1_0; }
		
		//('context' context+=EString (',' context+=EString)* )?
		public Group getGroup_2_5() { return cGroup_2_5; }
		
		//'context'
		public Keyword getContextKeyword_2_5_0() { return cContextKeyword_2_5_0; }
		
		//context+=EString
		public Assignment getContextAssignment_2_5_1() { return cContextAssignment_2_5_1; }
		
		//EString
		public RuleCall getContextEStringParserRuleCall_2_5_1_0() { return cContextEStringParserRuleCall_2_5_1_0; }
		
		//(',' context+=EString)*
		public Group getGroup_2_5_2() { return cGroup_2_5_2; }
		
		//','
		public Keyword getCommaKeyword_2_5_2_0() { return cCommaKeyword_2_5_2_0; }
		
		//context+=EString
		public Assignment getContextAssignment_2_5_2_1() { return cContextAssignment_2_5_2_1; }
		
		//EString
		public RuleCall getContextEStringParserRuleCall_2_5_2_1_0() { return cContextEStringParserRuleCall_2_5_2_1_0; }
		
		//(branches+=Branch)*
		public Assignment getBranchesAssignment_2_6() { return cBranchesAssignment_2_6; }
		
		//Branch
		public RuleCall getBranchesBranchParserRuleCall_2_6_0() { return cBranchesBranchParserRuleCall_2_6_0; }
		
		//(matrix=Matrix)?
		public Assignment getMatrixAssignment_2_7() { return cMatrixAssignment_2_7; }
		
		//Matrix
		public RuleCall getMatrixMatrixParserRuleCall_2_7_0() { return cMatrixMatrixParserRuleCall_2_7_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_8() { return cENDTerminalRuleCall_2_8; }
	}
	public class MatrixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.Matrix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMatrixKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cAliasKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cAliasAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cAliasEStringParserRuleCall_1_1_1_0 = (RuleCall)cAliasAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cMatrix_excludeKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Group cGroup_1_2_1 = (Group)cGroup_1_2.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_2_1_0 = (RuleCall)cGroup_1_2_1.eContents().get(0);
		private final Assignment cMatrix_excludeAssignment_1_2_1_1 = (Assignment)cGroup_1_2_1.eContents().get(1);
		private final RuleCall cMatrix_excludeMatrixParamsParserRuleCall_1_2_1_1_0 = (RuleCall)cMatrix_excludeAssignment_1_2_1_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_2_1_2 = (RuleCall)cGroup_1_2_1.eContents().get(2);
		private final Keyword cMatrix_paramsKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final RuleCall cBEGINTerminalRuleCall_1_4_0 = (RuleCall)cGroup_1_4.eContents().get(0);
		private final Assignment cMatrix_paramsAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cMatrix_paramsMatrixParamsParserRuleCall_1_4_1_0 = (RuleCall)cMatrix_paramsAssignment_1_4_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_4_2 = (RuleCall)cGroup_1_4.eContents().get(2);
		private final RuleCall cENDTerminalRuleCall_1_5 = (RuleCall)cGroup_1.eContents().get(5);
		
		//Matrix returns Matrix:
		//    'Matrix'
		//    (BEGIN
		//        ('alias' alias=EString )?
		//        ('matrix_exclude' (BEGIN (matrix_exclude+=MatrixParams)* END) )?
		//        'matrix_params' (BEGIN (matrix_params+=MatrixParams)+ END)
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Matrix'
		//(BEGIN
		//    ('alias' alias=EString )?
		//    ('matrix_exclude' (BEGIN (matrix_exclude+=MatrixParams)* END) )?
		//    'matrix_params' (BEGIN (matrix_params+=MatrixParams)+ END)
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Matrix'
		public Keyword getMatrixKeyword_0() { return cMatrixKeyword_0; }
		
		//(BEGIN
		//    ('alias' alias=EString )?
		//    ('matrix_exclude' (BEGIN (matrix_exclude+=MatrixParams)* END) )?
		//    'matrix_params' (BEGIN (matrix_params+=MatrixParams)+ END)
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//('alias' alias=EString )?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'alias'
		public Keyword getAliasKeyword_1_1_0() { return cAliasKeyword_1_1_0; }
		
		//alias=EString
		public Assignment getAliasAssignment_1_1_1() { return cAliasAssignment_1_1_1; }
		
		//EString
		public RuleCall getAliasEStringParserRuleCall_1_1_1_0() { return cAliasEStringParserRuleCall_1_1_1_0; }
		
		//('matrix_exclude' (BEGIN (matrix_exclude+=MatrixParams)* END) )?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'matrix_exclude'
		public Keyword getMatrix_excludeKeyword_1_2_0() { return cMatrix_excludeKeyword_1_2_0; }
		
		//(BEGIN (matrix_exclude+=MatrixParams)* END)
		public Group getGroup_1_2_1() { return cGroup_1_2_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_2_1_0() { return cBEGINTerminalRuleCall_1_2_1_0; }
		
		//(matrix_exclude+=MatrixParams)*
		public Assignment getMatrix_excludeAssignment_1_2_1_1() { return cMatrix_excludeAssignment_1_2_1_1; }
		
		//MatrixParams
		public RuleCall getMatrix_excludeMatrixParamsParserRuleCall_1_2_1_1_0() { return cMatrix_excludeMatrixParamsParserRuleCall_1_2_1_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_2_1_2() { return cENDTerminalRuleCall_1_2_1_2; }
		
		//'matrix_params'
		public Keyword getMatrix_paramsKeyword_1_3() { return cMatrix_paramsKeyword_1_3; }
		
		//(BEGIN (matrix_params+=MatrixParams)+ END)
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_4_0() { return cBEGINTerminalRuleCall_1_4_0; }
		
		//(matrix_params+=MatrixParams)+
		public Assignment getMatrix_paramsAssignment_1_4_1() { return cMatrix_paramsAssignment_1_4_1; }
		
		//MatrixParams
		public RuleCall getMatrix_paramsMatrixParamsParserRuleCall_1_4_1_0() { return cMatrix_paramsMatrixParamsParserRuleCall_1_4_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_4_2() { return cENDTerminalRuleCall_1_4_2; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_5() { return cENDTerminalRuleCall_1_5; }
	}
	public class MatrixParamsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.MatrixParams");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMatrixParamsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cKeyKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cKeyAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cKeyEStringParserRuleCall_1_2_0 = (RuleCall)cKeyAssignment_1_2.eContents().get(0);
		private final Keyword cValuesKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cValuesAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cValuesEStringParserRuleCall_1_4_0 = (RuleCall)cValuesAssignment_1_4.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cGroup_1.eContents().get(5);
		private final Keyword cCommaKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Assignment cValuesAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final RuleCall cValuesEStringParserRuleCall_1_5_1_0 = (RuleCall)cValuesAssignment_1_5_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_6 = (RuleCall)cGroup_1.eContents().get(6);
		
		//MatrixParams returns MatrixParams:
		//    'MatrixParams'
		//    (BEGIN
		//        'key' key=EString
		//        'values' values+=EString (',' values+=EString)*
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'MatrixParams'
		//(BEGIN
		//    'key' key=EString
		//    'values' values+=EString (',' values+=EString)*
		//END)
		public Group getGroup() { return cGroup; }
		
		//'MatrixParams'
		public Keyword getMatrixParamsKeyword_0() { return cMatrixParamsKeyword_0; }
		
		//(BEGIN
		//    'key' key=EString
		//    'values' values+=EString (',' values+=EString)*
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'key'
		public Keyword getKeyKeyword_1_1() { return cKeyKeyword_1_1; }
		
		//key=EString
		public Assignment getKeyAssignment_1_2() { return cKeyAssignment_1_2; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_1_2_0() { return cKeyEStringParserRuleCall_1_2_0; }
		
		//'values'
		public Keyword getValuesKeyword_1_3() { return cValuesKeyword_1_3; }
		
		//values+=EString
		public Assignment getValuesAssignment_1_4() { return cValuesAssignment_1_4; }
		
		//EString
		public RuleCall getValuesEStringParserRuleCall_1_4_0() { return cValuesEStringParserRuleCall_1_4_0; }
		
		//(',' values+=EString)*
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//','
		public Keyword getCommaKeyword_1_5_0() { return cCommaKeyword_1_5_0; }
		
		//values+=EString
		public Assignment getValuesAssignment_1_5_1() { return cValuesAssignment_1_5_1; }
		
		//EString
		public RuleCall getValuesEStringParserRuleCall_1_5_1_0() { return cValuesEStringParserRuleCall_1_5_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_6() { return cENDTerminalRuleCall_1_6; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class EShortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.EShort");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EShort returns ecore::EShort:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class MachineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.Machine");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMachineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cNameKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_1_1_0 = (RuleCall)cNameAssignment_1_1_1.eContents().get(0);
		private final Keyword cImageKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cImageAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cImageEStringParserRuleCall_1_3_0 = (RuleCall)cImageAssignment_1_3.eContents().get(0);
		private final Assignment cDocker_layer_cachingAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final Keyword cDocker_layer_cachingDocker_layer_cachingKeyword_1_4_0 = (Keyword)cDocker_layer_cachingAssignment_1_4.eContents().get(0);
		private final Keyword cResourceClassKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Assignment cResourceClassAssignment_1_6 = (Assignment)cGroup_1.eContents().get(6);
		private final RuleCall cResourceClassMACHINE_RESOURCE_TYPEEnumRuleCall_1_6_0 = (RuleCall)cResourceClassAssignment_1_6.eContents().get(0);
		private final Group cGroup_1_7 = (Group)cGroup_1.eContents().get(7);
		private final Keyword cShellKeyword_1_7_0 = (Keyword)cGroup_1_7.eContents().get(0);
		private final Assignment cShellAssignment_1_7_1 = (Assignment)cGroup_1_7.eContents().get(1);
		private final RuleCall cShellEStringParserRuleCall_1_7_1_0 = (RuleCall)cShellAssignment_1_7_1.eContents().get(0);
		private final Group cGroup_1_8 = (Group)cGroup_1.eContents().get(8);
		private final Keyword cWorking_directoryKeyword_1_8_0 = (Keyword)cGroup_1_8.eContents().get(0);
		private final Assignment cWorking_directoryAssignment_1_8_1 = (Assignment)cGroup_1_8.eContents().get(1);
		private final RuleCall cWorking_directoryEStringParserRuleCall_1_8_1_0 = (RuleCall)cWorking_directoryAssignment_1_8_1.eContents().get(0);
		private final Assignment cEnvironmentsAssignment_1_9 = (Assignment)cGroup_1.eContents().get(9);
		private final RuleCall cEnvironmentsEnvironmentParserRuleCall_1_9_0 = (RuleCall)cEnvironmentsAssignment_1_9.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_10 = (RuleCall)cGroup_1.eContents().get(10);
		
		//Machine returns Machine:
		//    'Machine'
		//    (BEGIN
		//        ('name' name=EString)?
		//        'image' image=EString
		//        (docker_layer_caching?='docker_layer_caching')?
		//        'resourceClass' resourceClass=MACHINE_RESOURCE_TYPE
		//        ('shell' shell=EString )?
		//        ('working_directory' working_directory=EString )?
		//        (environments+=Environment)*
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Machine'
		//(BEGIN
		//    ('name' name=EString)?
		//    'image' image=EString
		//    (docker_layer_caching?='docker_layer_caching')?
		//    'resourceClass' resourceClass=MACHINE_RESOURCE_TYPE
		//    ('shell' shell=EString )?
		//    ('working_directory' working_directory=EString )?
		//    (environments+=Environment)*
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Machine'
		public Keyword getMachineKeyword_0() { return cMachineKeyword_0; }
		
		//(BEGIN
		//    ('name' name=EString)?
		//    'image' image=EString
		//    (docker_layer_caching?='docker_layer_caching')?
		//    'resourceClass' resourceClass=MACHINE_RESOURCE_TYPE
		//    ('shell' shell=EString )?
		//    ('working_directory' working_directory=EString )?
		//    (environments+=Environment)*
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//('name' name=EString)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'name'
		public Keyword getNameKeyword_1_1_0() { return cNameKeyword_1_1_0; }
		
		//name=EString
		public Assignment getNameAssignment_1_1_1() { return cNameAssignment_1_1_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_1_1_0() { return cNameEStringParserRuleCall_1_1_1_0; }
		
		//'image'
		public Keyword getImageKeyword_1_2() { return cImageKeyword_1_2; }
		
		//image=EString
		public Assignment getImageAssignment_1_3() { return cImageAssignment_1_3; }
		
		//EString
		public RuleCall getImageEStringParserRuleCall_1_3_0() { return cImageEStringParserRuleCall_1_3_0; }
		
		//(docker_layer_caching?='docker_layer_caching')?
		public Assignment getDocker_layer_cachingAssignment_1_4() { return cDocker_layer_cachingAssignment_1_4; }
		
		//'docker_layer_caching'
		public Keyword getDocker_layer_cachingDocker_layer_cachingKeyword_1_4_0() { return cDocker_layer_cachingDocker_layer_cachingKeyword_1_4_0; }
		
		//'resourceClass'
		public Keyword getResourceClassKeyword_1_5() { return cResourceClassKeyword_1_5; }
		
		//resourceClass=MACHINE_RESOURCE_TYPE
		public Assignment getResourceClassAssignment_1_6() { return cResourceClassAssignment_1_6; }
		
		//MACHINE_RESOURCE_TYPE
		public RuleCall getResourceClassMACHINE_RESOURCE_TYPEEnumRuleCall_1_6_0() { return cResourceClassMACHINE_RESOURCE_TYPEEnumRuleCall_1_6_0; }
		
		//('shell' shell=EString )?
		public Group getGroup_1_7() { return cGroup_1_7; }
		
		//'shell'
		public Keyword getShellKeyword_1_7_0() { return cShellKeyword_1_7_0; }
		
		//shell=EString
		public Assignment getShellAssignment_1_7_1() { return cShellAssignment_1_7_1; }
		
		//EString
		public RuleCall getShellEStringParserRuleCall_1_7_1_0() { return cShellEStringParserRuleCall_1_7_1_0; }
		
		//('working_directory' working_directory=EString )?
		public Group getGroup_1_8() { return cGroup_1_8; }
		
		//'working_directory'
		public Keyword getWorking_directoryKeyword_1_8_0() { return cWorking_directoryKeyword_1_8_0; }
		
		//working_directory=EString
		public Assignment getWorking_directoryAssignment_1_8_1() { return cWorking_directoryAssignment_1_8_1; }
		
		//EString
		public RuleCall getWorking_directoryEStringParserRuleCall_1_8_1_0() { return cWorking_directoryEStringParserRuleCall_1_8_1_0; }
		
		//(environments+=Environment)*
		public Assignment getEnvironmentsAssignment_1_9() { return cEnvironmentsAssignment_1_9; }
		
		//Environment
		public RuleCall getEnvironmentsEnvironmentParserRuleCall_1_9_0() { return cEnvironmentsEnvironmentParserRuleCall_1_9_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_10() { return cENDTerminalRuleCall_1_10; }
	}
	public class MacOsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.MacOs");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMacOsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cNameKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_1_1_0 = (RuleCall)cNameAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cXcodeKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cXcodeAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cXcodeEStringParserRuleCall_1_2_1_0 = (RuleCall)cXcodeAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cResourceClassKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cResourceClassAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cResourceClassMACOS_RESOURCE_TYPEEnumRuleCall_1_3_1_0 = (RuleCall)cResourceClassAssignment_1_3_1.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final Keyword cShellKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Assignment cShellAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cShellEStringParserRuleCall_1_4_1_0 = (RuleCall)cShellAssignment_1_4_1.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cGroup_1.eContents().get(5);
		private final Keyword cWorking_directoryKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Assignment cWorking_directoryAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final RuleCall cWorking_directoryEStringParserRuleCall_1_5_1_0 = (RuleCall)cWorking_directoryAssignment_1_5_1.eContents().get(0);
		private final Assignment cEnvironmentsAssignment_1_6 = (Assignment)cGroup_1.eContents().get(6);
		private final RuleCall cEnvironmentsEnvironmentParserRuleCall_1_6_0 = (RuleCall)cEnvironmentsAssignment_1_6.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_7 = (RuleCall)cGroup_1.eContents().get(7);
		
		//MacOs returns MacOs:
		//    'MacOs'
		//    (BEGIN
		//        ('name' name=EString)?
		//        ('xcode' xcode=EString)
		//        ('resourceClass' resourceClass=MACOS_RESOURCE_TYPE)
		//        ('shell' shell=EString)?
		//        ('working_directory' working_directory=EString)?
		//        (environments+=Environment)*
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'MacOs'
		//(BEGIN
		//    ('name' name=EString)?
		//    ('xcode' xcode=EString)
		//    ('resourceClass' resourceClass=MACOS_RESOURCE_TYPE)
		//    ('shell' shell=EString)?
		//    ('working_directory' working_directory=EString)?
		//    (environments+=Environment)*
		//END)
		public Group getGroup() { return cGroup; }
		
		//'MacOs'
		public Keyword getMacOsKeyword_0() { return cMacOsKeyword_0; }
		
		//(BEGIN
		//    ('name' name=EString)?
		//    ('xcode' xcode=EString)
		//    ('resourceClass' resourceClass=MACOS_RESOURCE_TYPE)
		//    ('shell' shell=EString)?
		//    ('working_directory' working_directory=EString)?
		//    (environments+=Environment)*
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//('name' name=EString)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'name'
		public Keyword getNameKeyword_1_1_0() { return cNameKeyword_1_1_0; }
		
		//name=EString
		public Assignment getNameAssignment_1_1_1() { return cNameAssignment_1_1_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_1_1_0() { return cNameEStringParserRuleCall_1_1_1_0; }
		
		//('xcode' xcode=EString)
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'xcode'
		public Keyword getXcodeKeyword_1_2_0() { return cXcodeKeyword_1_2_0; }
		
		//xcode=EString
		public Assignment getXcodeAssignment_1_2_1() { return cXcodeAssignment_1_2_1; }
		
		//EString
		public RuleCall getXcodeEStringParserRuleCall_1_2_1_0() { return cXcodeEStringParserRuleCall_1_2_1_0; }
		
		//('resourceClass' resourceClass=MACOS_RESOURCE_TYPE)
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'resourceClass'
		public Keyword getResourceClassKeyword_1_3_0() { return cResourceClassKeyword_1_3_0; }
		
		//resourceClass=MACOS_RESOURCE_TYPE
		public Assignment getResourceClassAssignment_1_3_1() { return cResourceClassAssignment_1_3_1; }
		
		//MACOS_RESOURCE_TYPE
		public RuleCall getResourceClassMACOS_RESOURCE_TYPEEnumRuleCall_1_3_1_0() { return cResourceClassMACOS_RESOURCE_TYPEEnumRuleCall_1_3_1_0; }
		
		//('shell' shell=EString)?
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'shell'
		public Keyword getShellKeyword_1_4_0() { return cShellKeyword_1_4_0; }
		
		//shell=EString
		public Assignment getShellAssignment_1_4_1() { return cShellAssignment_1_4_1; }
		
		//EString
		public RuleCall getShellEStringParserRuleCall_1_4_1_0() { return cShellEStringParserRuleCall_1_4_1_0; }
		
		//('working_directory' working_directory=EString)?
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'working_directory'
		public Keyword getWorking_directoryKeyword_1_5_0() { return cWorking_directoryKeyword_1_5_0; }
		
		//working_directory=EString
		public Assignment getWorking_directoryAssignment_1_5_1() { return cWorking_directoryAssignment_1_5_1; }
		
		//EString
		public RuleCall getWorking_directoryEStringParserRuleCall_1_5_1_0() { return cWorking_directoryEStringParserRuleCall_1_5_1_0; }
		
		//(environments+=Environment)*
		public Assignment getEnvironmentsAssignment_1_6() { return cEnvironmentsAssignment_1_6; }
		
		//Environment
		public RuleCall getEnvironmentsEnvironmentParserRuleCall_1_6_0() { return cEnvironmentsEnvironmentParserRuleCall_1_6_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_7() { return cENDTerminalRuleCall_1_7; }
	}
	public class DockerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.Docker");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDockerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cNameKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_1_1_0 = (RuleCall)cNameAssignment_1_1_1.eContents().get(0);
		private final Keyword cImageKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cImageAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cImageEStringParserRuleCall_1_3_0 = (RuleCall)cImageAssignment_1_3.eContents().get(0);
		private final Keyword cResourceClassKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cResourceClassAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cResourceClassDOCKER_RESOURCE_TYPEEnumRuleCall_1_5_0 = (RuleCall)cResourceClassAssignment_1_5.eContents().get(0);
		private final Group cGroup_1_6 = (Group)cGroup_1.eContents().get(6);
		private final Keyword cShellKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final Assignment cShellAssignment_1_6_1 = (Assignment)cGroup_1_6.eContents().get(1);
		private final RuleCall cShellEStringParserRuleCall_1_6_1_0 = (RuleCall)cShellAssignment_1_6_1.eContents().get(0);
		private final Group cGroup_1_7 = (Group)cGroup_1.eContents().get(7);
		private final Keyword cWorking_directoryKeyword_1_7_0 = (Keyword)cGroup_1_7.eContents().get(0);
		private final Assignment cWorking_directoryAssignment_1_7_1 = (Assignment)cGroup_1_7.eContents().get(1);
		private final RuleCall cWorking_directoryEStringParserRuleCall_1_7_1_0 = (RuleCall)cWorking_directoryAssignment_1_7_1.eContents().get(0);
		private final Group cGroup_1_8 = (Group)cGroup_1.eContents().get(8);
		private final Keyword cEntrypointKeyword_1_8_0 = (Keyword)cGroup_1_8.eContents().get(0);
		private final Assignment cEntrypointAssignment_1_8_1 = (Assignment)cGroup_1_8.eContents().get(1);
		private final RuleCall cEntrypointEStringParserRuleCall_1_8_1_0 = (RuleCall)cEntrypointAssignment_1_8_1.eContents().get(0);
		private final Group cGroup_1_8_2 = (Group)cGroup_1_8.eContents().get(2);
		private final Keyword cCommaKeyword_1_8_2_0 = (Keyword)cGroup_1_8_2.eContents().get(0);
		private final Assignment cEntrypointAssignment_1_8_2_1 = (Assignment)cGroup_1_8_2.eContents().get(1);
		private final RuleCall cEntrypointEStringParserRuleCall_1_8_2_1_0 = (RuleCall)cEntrypointAssignment_1_8_2_1.eContents().get(0);
		private final Group cGroup_1_9 = (Group)cGroup_1.eContents().get(9);
		private final Keyword cCommandKeyword_1_9_0 = (Keyword)cGroup_1_9.eContents().get(0);
		private final Assignment cCommandAssignment_1_9_1 = (Assignment)cGroup_1_9.eContents().get(1);
		private final RuleCall cCommandEStringParserRuleCall_1_9_1_0 = (RuleCall)cCommandAssignment_1_9_1.eContents().get(0);
		private final Group cGroup_1_9_2 = (Group)cGroup_1_9.eContents().get(2);
		private final Keyword cCommaKeyword_1_9_2_0 = (Keyword)cGroup_1_9_2.eContents().get(0);
		private final Assignment cCommandAssignment_1_9_2_1 = (Assignment)cGroup_1_9_2.eContents().get(1);
		private final RuleCall cCommandEStringParserRuleCall_1_9_2_1_0 = (RuleCall)cCommandAssignment_1_9_2_1.eContents().get(0);
		private final Group cGroup_1_10 = (Group)cGroup_1.eContents().get(10);
		private final Keyword cUserKeyword_1_10_0 = (Keyword)cGroup_1_10.eContents().get(0);
		private final Assignment cUserAssignment_1_10_1 = (Assignment)cGroup_1_10.eContents().get(1);
		private final RuleCall cUserEStringParserRuleCall_1_10_1_0 = (RuleCall)cUserAssignment_1_10_1.eContents().get(0);
		private final Assignment cEnvironmentsAssignment_1_11 = (Assignment)cGroup_1.eContents().get(11);
		private final RuleCall cEnvironmentsEnvironmentParserRuleCall_1_11_0 = (RuleCall)cEnvironmentsAssignment_1_11.eContents().get(0);
		private final Assignment cDocker_authAssignment_1_12 = (Assignment)cGroup_1.eContents().get(12);
		private final RuleCall cDocker_authDocker_AuthParserRuleCall_1_12_0 = (RuleCall)cDocker_authAssignment_1_12.eContents().get(0);
		private final Assignment cDocker_aws_authAssignment_1_13 = (Assignment)cGroup_1.eContents().get(13);
		private final RuleCall cDocker_aws_authDocker_Aws_AuthsParserRuleCall_1_13_0 = (RuleCall)cDocker_aws_authAssignment_1_13.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_14 = (RuleCall)cGroup_1.eContents().get(14);
		
		//Docker returns Docker:
		//    'Docker'
		//    (BEGIN
		//        ('name' name=EString)?
		//        'image' image=EString
		//        'resourceClass' resourceClass=DOCKER_RESOURCE_TYPE
		//        ('shell' shell=EString )?
		//        ('working_directory' working_directory=EString )?
		//        ('entrypoint' entrypoint+=EString (',' entrypoint+=EString)* )?
		//        ('command' command+=EString (',' command+=EString)* )?
		//        ('user' user=EString )?
		//        (environments+=Environment)*
		//        (docker_auth=Docker_Auth)?
		//        (docker_aws_auth=Docker_Aws_Auths)?
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Docker'
		//(BEGIN
		//    ('name' name=EString)?
		//    'image' image=EString
		//    'resourceClass' resourceClass=DOCKER_RESOURCE_TYPE
		//    ('shell' shell=EString )?
		//    ('working_directory' working_directory=EString )?
		//    ('entrypoint' entrypoint+=EString (',' entrypoint+=EString)* )?
		//    ('command' command+=EString (',' command+=EString)* )?
		//    ('user' user=EString )?
		//    (environments+=Environment)*
		//    (docker_auth=Docker_Auth)?
		//    (docker_aws_auth=Docker_Aws_Auths)?
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Docker'
		public Keyword getDockerKeyword_0() { return cDockerKeyword_0; }
		
		//(BEGIN
		//    ('name' name=EString)?
		//    'image' image=EString
		//    'resourceClass' resourceClass=DOCKER_RESOURCE_TYPE
		//    ('shell' shell=EString )?
		//    ('working_directory' working_directory=EString )?
		//    ('entrypoint' entrypoint+=EString (',' entrypoint+=EString)* )?
		//    ('command' command+=EString (',' command+=EString)* )?
		//    ('user' user=EString )?
		//    (environments+=Environment)*
		//    (docker_auth=Docker_Auth)?
		//    (docker_aws_auth=Docker_Aws_Auths)?
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//('name' name=EString)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'name'
		public Keyword getNameKeyword_1_1_0() { return cNameKeyword_1_1_0; }
		
		//name=EString
		public Assignment getNameAssignment_1_1_1() { return cNameAssignment_1_1_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_1_1_0() { return cNameEStringParserRuleCall_1_1_1_0; }
		
		//'image'
		public Keyword getImageKeyword_1_2() { return cImageKeyword_1_2; }
		
		//image=EString
		public Assignment getImageAssignment_1_3() { return cImageAssignment_1_3; }
		
		//EString
		public RuleCall getImageEStringParserRuleCall_1_3_0() { return cImageEStringParserRuleCall_1_3_0; }
		
		//'resourceClass'
		public Keyword getResourceClassKeyword_1_4() { return cResourceClassKeyword_1_4; }
		
		//resourceClass=DOCKER_RESOURCE_TYPE
		public Assignment getResourceClassAssignment_1_5() { return cResourceClassAssignment_1_5; }
		
		//DOCKER_RESOURCE_TYPE
		public RuleCall getResourceClassDOCKER_RESOURCE_TYPEEnumRuleCall_1_5_0() { return cResourceClassDOCKER_RESOURCE_TYPEEnumRuleCall_1_5_0; }
		
		//('shell' shell=EString )?
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//'shell'
		public Keyword getShellKeyword_1_6_0() { return cShellKeyword_1_6_0; }
		
		//shell=EString
		public Assignment getShellAssignment_1_6_1() { return cShellAssignment_1_6_1; }
		
		//EString
		public RuleCall getShellEStringParserRuleCall_1_6_1_0() { return cShellEStringParserRuleCall_1_6_1_0; }
		
		//('working_directory' working_directory=EString )?
		public Group getGroup_1_7() { return cGroup_1_7; }
		
		//'working_directory'
		public Keyword getWorking_directoryKeyword_1_7_0() { return cWorking_directoryKeyword_1_7_0; }
		
		//working_directory=EString
		public Assignment getWorking_directoryAssignment_1_7_1() { return cWorking_directoryAssignment_1_7_1; }
		
		//EString
		public RuleCall getWorking_directoryEStringParserRuleCall_1_7_1_0() { return cWorking_directoryEStringParserRuleCall_1_7_1_0; }
		
		//('entrypoint' entrypoint+=EString (',' entrypoint+=EString)* )?
		public Group getGroup_1_8() { return cGroup_1_8; }
		
		//'entrypoint'
		public Keyword getEntrypointKeyword_1_8_0() { return cEntrypointKeyword_1_8_0; }
		
		//entrypoint+=EString
		public Assignment getEntrypointAssignment_1_8_1() { return cEntrypointAssignment_1_8_1; }
		
		//EString
		public RuleCall getEntrypointEStringParserRuleCall_1_8_1_0() { return cEntrypointEStringParserRuleCall_1_8_1_0; }
		
		//(',' entrypoint+=EString)*
		public Group getGroup_1_8_2() { return cGroup_1_8_2; }
		
		//','
		public Keyword getCommaKeyword_1_8_2_0() { return cCommaKeyword_1_8_2_0; }
		
		//entrypoint+=EString
		public Assignment getEntrypointAssignment_1_8_2_1() { return cEntrypointAssignment_1_8_2_1; }
		
		//EString
		public RuleCall getEntrypointEStringParserRuleCall_1_8_2_1_0() { return cEntrypointEStringParserRuleCall_1_8_2_1_0; }
		
		//('command' command+=EString (',' command+=EString)* )?
		public Group getGroup_1_9() { return cGroup_1_9; }
		
		//'command'
		public Keyword getCommandKeyword_1_9_0() { return cCommandKeyword_1_9_0; }
		
		//command+=EString
		public Assignment getCommandAssignment_1_9_1() { return cCommandAssignment_1_9_1; }
		
		//EString
		public RuleCall getCommandEStringParserRuleCall_1_9_1_0() { return cCommandEStringParserRuleCall_1_9_1_0; }
		
		//(',' command+=EString)*
		public Group getGroup_1_9_2() { return cGroup_1_9_2; }
		
		//','
		public Keyword getCommaKeyword_1_9_2_0() { return cCommaKeyword_1_9_2_0; }
		
		//command+=EString
		public Assignment getCommandAssignment_1_9_2_1() { return cCommandAssignment_1_9_2_1; }
		
		//EString
		public RuleCall getCommandEStringParserRuleCall_1_9_2_1_0() { return cCommandEStringParserRuleCall_1_9_2_1_0; }
		
		//('user' user=EString )?
		public Group getGroup_1_10() { return cGroup_1_10; }
		
		//'user'
		public Keyword getUserKeyword_1_10_0() { return cUserKeyword_1_10_0; }
		
		//user=EString
		public Assignment getUserAssignment_1_10_1() { return cUserAssignment_1_10_1; }
		
		//EString
		public RuleCall getUserEStringParserRuleCall_1_10_1_0() { return cUserEStringParserRuleCall_1_10_1_0; }
		
		//(environments+=Environment)*
		public Assignment getEnvironmentsAssignment_1_11() { return cEnvironmentsAssignment_1_11; }
		
		//Environment
		public RuleCall getEnvironmentsEnvironmentParserRuleCall_1_11_0() { return cEnvironmentsEnvironmentParserRuleCall_1_11_0; }
		
		//(docker_auth=Docker_Auth)?
		public Assignment getDocker_authAssignment_1_12() { return cDocker_authAssignment_1_12; }
		
		//Docker_Auth
		public RuleCall getDocker_authDocker_AuthParserRuleCall_1_12_0() { return cDocker_authDocker_AuthParserRuleCall_1_12_0; }
		
		//(docker_aws_auth=Docker_Aws_Auths)?
		public Assignment getDocker_aws_authAssignment_1_13() { return cDocker_aws_authAssignment_1_13; }
		
		//Docker_Aws_Auths
		public RuleCall getDocker_aws_authDocker_Aws_AuthsParserRuleCall_1_13_0() { return cDocker_aws_authDocker_Aws_AuthsParserRuleCall_1_13_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_14() { return cENDTerminalRuleCall_1_14; }
	}
	public class Docker_AuthElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.Docker_Auth");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDocker_AuthKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cUsernameKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cUsernameAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cUsernameEStringParserRuleCall_1_2_0 = (RuleCall)cUsernameAssignment_1_2.eContents().get(0);
		private final Keyword cPasswordKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cPasswordAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cPasswordEStringParserRuleCall_1_4_0 = (RuleCall)cPasswordAssignment_1_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_5 = (RuleCall)cGroup_1.eContents().get(5);
		
		//Docker_Auth returns Docker_Auth:
		//    'Docker_Auth'
		//    (BEGIN
		//        'username' username=EString
		//        'password' password=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Docker_Auth'
		//(BEGIN
		//    'username' username=EString
		//    'password' password=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Docker_Auth'
		public Keyword getDocker_AuthKeyword_0() { return cDocker_AuthKeyword_0; }
		
		//(BEGIN
		//    'username' username=EString
		//    'password' password=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'username'
		public Keyword getUsernameKeyword_1_1() { return cUsernameKeyword_1_1; }
		
		//username=EString
		public Assignment getUsernameAssignment_1_2() { return cUsernameAssignment_1_2; }
		
		//EString
		public RuleCall getUsernameEStringParserRuleCall_1_2_0() { return cUsernameEStringParserRuleCall_1_2_0; }
		
		//'password'
		public Keyword getPasswordKeyword_1_3() { return cPasswordKeyword_1_3; }
		
		//password=EString
		public Assignment getPasswordAssignment_1_4() { return cPasswordAssignment_1_4; }
		
		//EString
		public RuleCall getPasswordEStringParserRuleCall_1_4_0() { return cPasswordEStringParserRuleCall_1_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_5() { return cENDTerminalRuleCall_1_5; }
	}
	public class Docker_Aws_AuthsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.Docker_Aws_Auths");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDocker_Aws_AuthsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cAws_access_key_idKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cAws_access_key_idAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cAws_access_key_idEStringParserRuleCall_1_2_0 = (RuleCall)cAws_access_key_idAssignment_1_2.eContents().get(0);
		private final Keyword cAws_secret_access_keyKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cAws_secret_access_keyAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cAws_secret_access_keyEStringParserRuleCall_1_4_0 = (RuleCall)cAws_secret_access_keyAssignment_1_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_5 = (RuleCall)cGroup_1.eContents().get(5);
		
		//Docker_Aws_Auths returns Docker_Aws_Auths:
		//    'Docker_Aws_Auths'
		//    (BEGIN
		//        'aws_access_key_id' aws_access_key_id=EString
		//        'aws_secret_access_key' aws_secret_access_key=EString
		//    END);
		@Override public ParserRule getRule() { return rule; }
		
		//'Docker_Aws_Auths'
		//(BEGIN
		//    'aws_access_key_id' aws_access_key_id=EString
		//    'aws_secret_access_key' aws_secret_access_key=EString
		//END)
		public Group getGroup() { return cGroup; }
		
		//'Docker_Aws_Auths'
		public Keyword getDocker_Aws_AuthsKeyword_0() { return cDocker_Aws_AuthsKeyword_0; }
		
		//(BEGIN
		//    'aws_access_key_id' aws_access_key_id=EString
		//    'aws_secret_access_key' aws_secret_access_key=EString
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'aws_access_key_id'
		public Keyword getAws_access_key_idKeyword_1_1() { return cAws_access_key_idKeyword_1_1; }
		
		//aws_access_key_id=EString
		public Assignment getAws_access_key_idAssignment_1_2() { return cAws_access_key_idAssignment_1_2; }
		
		//EString
		public RuleCall getAws_access_key_idEStringParserRuleCall_1_2_0() { return cAws_access_key_idEStringParserRuleCall_1_2_0; }
		
		//'aws_secret_access_key'
		public Keyword getAws_secret_access_keyKeyword_1_3() { return cAws_secret_access_keyKeyword_1_3; }
		
		//aws_secret_access_key=EString
		public Assignment getAws_secret_access_keyAssignment_1_4() { return cAws_secret_access_keyAssignment_1_4; }
		
		//EString
		public RuleCall getAws_secret_access_keyEStringParserRuleCall_1_4_0() { return cAws_secret_access_keyEStringParserRuleCall_1_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_5() { return cENDTerminalRuleCall_1_5; }
	}
	
	public class MACHINE_RESOURCE_TYPEElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.MACHINE_RESOURCE_TYPE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMEDIUMEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMEDIUMMediumKeyword_0_0 = (Keyword)cMEDIUMEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cLARGEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cLARGELargeKeyword_1_0 = (Keyword)cLARGEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cXLARGEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cXLARGEXlargeKeyword_2_0 = (Keyword)cXLARGEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cTWO_XLARGEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cTWO_XLARGE2xlargeKeyword_3_0 = (Keyword)cTWO_XLARGEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cTWO_XLARGE_PLUSEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cTWO_XLARGE_PLUS2xlargeKeyword_4_0 = (Keyword)cTWO_XLARGE_PLUSEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum MACHINE_RESOURCE_TYPE returns MACHINE_RESOURCE_TYPE:
		//                MEDIUM = 'medium' | LARGE = 'large' | XLARGE = 'xlarge' | TWO_XLARGE = '2xlarge' | TWO_XLARGE_PLUS = '2xlarge+';
		public EnumRule getRule() { return rule; }
		
		//MEDIUM = 'medium' | LARGE = 'large' | XLARGE = 'xlarge' | TWO_XLARGE = '2xlarge' | TWO_XLARGE_PLUS = '2xlarge+'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MEDIUM = 'medium'
		public EnumLiteralDeclaration getMEDIUMEnumLiteralDeclaration_0() { return cMEDIUMEnumLiteralDeclaration_0; }
		
		//'medium'
		public Keyword getMEDIUMMediumKeyword_0_0() { return cMEDIUMMediumKeyword_0_0; }
		
		//LARGE = 'large'
		public EnumLiteralDeclaration getLARGEEnumLiteralDeclaration_1() { return cLARGEEnumLiteralDeclaration_1; }
		
		//'large'
		public Keyword getLARGELargeKeyword_1_0() { return cLARGELargeKeyword_1_0; }
		
		//XLARGE = 'xlarge'
		public EnumLiteralDeclaration getXLARGEEnumLiteralDeclaration_2() { return cXLARGEEnumLiteralDeclaration_2; }
		
		//'xlarge'
		public Keyword getXLARGEXlargeKeyword_2_0() { return cXLARGEXlargeKeyword_2_0; }
		
		//TWO_XLARGE = '2xlarge'
		public EnumLiteralDeclaration getTWO_XLARGEEnumLiteralDeclaration_3() { return cTWO_XLARGEEnumLiteralDeclaration_3; }
		
		//'2xlarge'
		public Keyword getTWO_XLARGE2xlargeKeyword_3_0() { return cTWO_XLARGE2xlargeKeyword_3_0; }
		
		//TWO_XLARGE_PLUS = '2xlarge+'
		public EnumLiteralDeclaration getTWO_XLARGE_PLUSEnumLiteralDeclaration_4() { return cTWO_XLARGE_PLUSEnumLiteralDeclaration_4; }
		
		//'2xlarge+'
		public Keyword getTWO_XLARGE_PLUS2xlargeKeyword_4_0() { return cTWO_XLARGE_PLUS2xlargeKeyword_4_0; }
	}
	public class MACOS_RESOURCE_TYPEElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.MACOS_RESOURCE_TYPE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMACOS_X86_MEDIUM_GEN2EnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMACOS_X86_MEDIUM_GEN2MacosX86MediumGen2Keyword_0_0 = (Keyword)cMACOS_X86_MEDIUM_GEN2EnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMACOS_M1_MEDIUM_GENEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMACOS_M1_MEDIUM_GENMacosM1MediumGenKeyword_1_0 = (Keyword)cMACOS_M1_MEDIUM_GENEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMACOS_M1_LARGE_GEN1EnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMACOS_M1_LARGE_GEN1MacosM1LargeGen1Keyword_2_0 = (Keyword)cMACOS_M1_LARGE_GEN1EnumLiteralDeclaration_2.eContents().get(0);
		
		//enum MACOS_RESOURCE_TYPE returns MACOS_RESOURCE_TYPE:
		//                MACOS_X86_MEDIUM_GEN2 = 'macos.x86.medium.gen2*' | MACOS_M1_MEDIUM_GEN = 'macos.m1.medium.gen' | MACOS_M1_LARGE_GEN1 = 'macos.m1.large.gen1';
		public EnumRule getRule() { return rule; }
		
		//MACOS_X86_MEDIUM_GEN2 = 'macos.x86.medium.gen2*' | MACOS_M1_MEDIUM_GEN = 'macos.m1.medium.gen' | MACOS_M1_LARGE_GEN1 = 'macos.m1.large.gen1'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MACOS_X86_MEDIUM_GEN2 = 'macos.x86.medium.gen2*'
		public EnumLiteralDeclaration getMACOS_X86_MEDIUM_GEN2EnumLiteralDeclaration_0() { return cMACOS_X86_MEDIUM_GEN2EnumLiteralDeclaration_0; }
		
		//'macos.x86.medium.gen2*'
		public Keyword getMACOS_X86_MEDIUM_GEN2MacosX86MediumGen2Keyword_0_0() { return cMACOS_X86_MEDIUM_GEN2MacosX86MediumGen2Keyword_0_0; }
		
		//MACOS_M1_MEDIUM_GEN = 'macos.m1.medium.gen'
		public EnumLiteralDeclaration getMACOS_M1_MEDIUM_GENEnumLiteralDeclaration_1() { return cMACOS_M1_MEDIUM_GENEnumLiteralDeclaration_1; }
		
		//'macos.m1.medium.gen'
		public Keyword getMACOS_M1_MEDIUM_GENMacosM1MediumGenKeyword_1_0() { return cMACOS_M1_MEDIUM_GENMacosM1MediumGenKeyword_1_0; }
		
		//MACOS_M1_LARGE_GEN1 = 'macos.m1.large.gen1'
		public EnumLiteralDeclaration getMACOS_M1_LARGE_GEN1EnumLiteralDeclaration_2() { return cMACOS_M1_LARGE_GEN1EnumLiteralDeclaration_2; }
		
		//'macos.m1.large.gen1'
		public Keyword getMACOS_M1_LARGE_GEN1MacosM1LargeGen1Keyword_2_0() { return cMACOS_M1_LARGE_GEN1MacosM1LargeGen1Keyword_2_0; }
	}
	public class DOCKER_RESOURCE_TYPEElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.DOCKER_RESOURCE_TYPE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSMALLEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSMALLSmallKeyword_0_0 = (Keyword)cSMALLEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMEDIUMEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMEDIUMMediumKeyword_1_0 = (Keyword)cMEDIUMEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMEDIUM_PLUSEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMEDIUM_PLUSMediumKeyword_2_0 = (Keyword)cMEDIUM_PLUSEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cLARGEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cLARGELargeKeyword_3_0 = (Keyword)cLARGEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cXLARGEEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cXLARGEXlargeKeyword_4_0 = (Keyword)cXLARGEEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cTWO_XLARGEEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cTWO_XLARGE2xlargeKeyword_5_0 = (Keyword)cTWO_XLARGEEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cTWO_XLARGE_PLUSEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cTWO_XLARGE_PLUS2xlargeKeyword_6_0 = (Keyword)cTWO_XLARGE_PLUSEnumLiteralDeclaration_6.eContents().get(0);
		
		//enum DOCKER_RESOURCE_TYPE returns DOCKER_RESOURCE_TYPE:
		//                SMALL = 'small' | MEDIUM = 'medium' | MEDIUM_PLUS = 'medium+' | LARGE = 'large' | XLARGE = 'xlarge' | TWO_XLARGE = '2xlarge' | TWO_XLARGE_PLUS = '2xlarge+';
		public EnumRule getRule() { return rule; }
		
		//SMALL = 'small' | MEDIUM = 'medium' | MEDIUM_PLUS = 'medium+' | LARGE = 'large' | XLARGE = 'xlarge' | TWO_XLARGE = '2xlarge' | TWO_XLARGE_PLUS = '2xlarge+'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SMALL = 'small'
		public EnumLiteralDeclaration getSMALLEnumLiteralDeclaration_0() { return cSMALLEnumLiteralDeclaration_0; }
		
		//'small'
		public Keyword getSMALLSmallKeyword_0_0() { return cSMALLSmallKeyword_0_0; }
		
		//MEDIUM = 'medium'
		public EnumLiteralDeclaration getMEDIUMEnumLiteralDeclaration_1() { return cMEDIUMEnumLiteralDeclaration_1; }
		
		//'medium'
		public Keyword getMEDIUMMediumKeyword_1_0() { return cMEDIUMMediumKeyword_1_0; }
		
		//MEDIUM_PLUS = 'medium+'
		public EnumLiteralDeclaration getMEDIUM_PLUSEnumLiteralDeclaration_2() { return cMEDIUM_PLUSEnumLiteralDeclaration_2; }
		
		//'medium+'
		public Keyword getMEDIUM_PLUSMediumKeyword_2_0() { return cMEDIUM_PLUSMediumKeyword_2_0; }
		
		//LARGE = 'large'
		public EnumLiteralDeclaration getLARGEEnumLiteralDeclaration_3() { return cLARGEEnumLiteralDeclaration_3; }
		
		//'large'
		public Keyword getLARGELargeKeyword_3_0() { return cLARGELargeKeyword_3_0; }
		
		//XLARGE = 'xlarge'
		public EnumLiteralDeclaration getXLARGEEnumLiteralDeclaration_4() { return cXLARGEEnumLiteralDeclaration_4; }
		
		//'xlarge'
		public Keyword getXLARGEXlargeKeyword_4_0() { return cXLARGEXlargeKeyword_4_0; }
		
		//TWO_XLARGE = '2xlarge'
		public EnumLiteralDeclaration getTWO_XLARGEEnumLiteralDeclaration_5() { return cTWO_XLARGEEnumLiteralDeclaration_5; }
		
		//'2xlarge'
		public Keyword getTWO_XLARGE2xlargeKeyword_5_0() { return cTWO_XLARGE2xlargeKeyword_5_0; }
		
		//TWO_XLARGE_PLUS = '2xlarge+'
		public EnumLiteralDeclaration getTWO_XLARGE_PLUSEnumLiteralDeclaration_6() { return cTWO_XLARGE_PLUSEnumLiteralDeclaration_6; }
		
		//'2xlarge+'
		public Keyword getTWO_XLARGE_PLUS2xlargeKeyword_6_0() { return cTWO_XLARGE_PLUS2xlargeKeyword_6_0; }
	}
	public class WHEN_TYPEElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.WHEN_TYPE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cOn_successEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cOn_successOn_successKeyword_0_0 = (Keyword)cOn_successEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cAlwaysEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cAlwaysAlwaysKeyword_1_0 = (Keyword)cAlwaysEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cOn_failEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cOn_failOn_failKeyword_2_0 = (Keyword)cOn_failEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum WHEN_TYPE returns WHEN_TYPE:
		//                on_success = 'on_success' | always = 'always' | on_fail = 'on_fail';
		public EnumRule getRule() { return rule; }
		
		//on_success = 'on_success' | always = 'always' | on_fail = 'on_fail'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//on_success = 'on_success'
		public EnumLiteralDeclaration getOn_successEnumLiteralDeclaration_0() { return cOn_successEnumLiteralDeclaration_0; }
		
		//'on_success'
		public Keyword getOn_successOn_successKeyword_0_0() { return cOn_successOn_successKeyword_0_0; }
		
		//always = 'always'
		public EnumLiteralDeclaration getAlwaysEnumLiteralDeclaration_1() { return cAlwaysEnumLiteralDeclaration_1; }
		
		//'always'
		public Keyword getAlwaysAlwaysKeyword_1_0() { return cAlwaysAlwaysKeyword_1_0; }
		
		//on_fail = 'on_fail'
		public EnumLiteralDeclaration getOn_failEnumLiteralDeclaration_2() { return cOn_failEnumLiteralDeclaration_2; }
		
		//'on_fail'
		public Keyword getOn_failOn_failKeyword_2_0() { return cOn_failOn_failKeyword_2_0; }
	}
	public class PARAMETER_TYPESElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.PARAMETER_TYPES");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSTRINGEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSTRINGSTRINGKeyword_0_0 = (Keyword)cSTRINGEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cBOOLEANEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cBOOLEANBOOLEANKeyword_1_0 = (Keyword)cBOOLEANEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cINTEGEREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cINTEGERINTEGERKeyword_2_0 = (Keyword)cINTEGEREnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cENUMEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cENUMENUMKeyword_3_0 = (Keyword)cENUMEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cEXECUTOREnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cEXECUTOREXECUTORKeyword_4_0 = (Keyword)cEXECUTOREnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cSTEPSEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cSTEPSSTEPSKeyword_5_0 = (Keyword)cSTEPSEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cENVIRONMENT_VARIABLE_NAMEEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cENVIRONMENT_VARIABLE_NAMEENVIRONMENT_VARIABLE_NAMEKeyword_6_0 = (Keyword)cENVIRONMENT_VARIABLE_NAMEEnumLiteralDeclaration_6.eContents().get(0);
		
		//enum PARAMETER_TYPES returns PARAMETER_TYPES:
		//                STRING = 'STRING' | BOOLEAN = 'BOOLEAN' | INTEGER = 'INTEGER' | ENUM = 'ENUM' | EXECUTOR = 'EXECUTOR' | STEPS = 'STEPS' | ENVIRONMENT_VARIABLE_NAME = 'ENVIRONMENT_VARIABLE_NAME';
		public EnumRule getRule() { return rule; }
		
		//STRING = 'STRING' | BOOLEAN = 'BOOLEAN' | INTEGER = 'INTEGER' | ENUM = 'ENUM' | EXECUTOR = 'EXECUTOR' | STEPS = 'STEPS' | ENVIRONMENT_VARIABLE_NAME = 'ENVIRONMENT_VARIABLE_NAME'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING = 'STRING'
		public EnumLiteralDeclaration getSTRINGEnumLiteralDeclaration_0() { return cSTRINGEnumLiteralDeclaration_0; }
		
		//'STRING'
		public Keyword getSTRINGSTRINGKeyword_0_0() { return cSTRINGSTRINGKeyword_0_0; }
		
		//BOOLEAN = 'BOOLEAN'
		public EnumLiteralDeclaration getBOOLEANEnumLiteralDeclaration_1() { return cBOOLEANEnumLiteralDeclaration_1; }
		
		//'BOOLEAN'
		public Keyword getBOOLEANBOOLEANKeyword_1_0() { return cBOOLEANBOOLEANKeyword_1_0; }
		
		//INTEGER = 'INTEGER'
		public EnumLiteralDeclaration getINTEGEREnumLiteralDeclaration_2() { return cINTEGEREnumLiteralDeclaration_2; }
		
		//'INTEGER'
		public Keyword getINTEGERINTEGERKeyword_2_0() { return cINTEGERINTEGERKeyword_2_0; }
		
		//ENUM = 'ENUM'
		public EnumLiteralDeclaration getENUMEnumLiteralDeclaration_3() { return cENUMEnumLiteralDeclaration_3; }
		
		//'ENUM'
		public Keyword getENUMENUMKeyword_3_0() { return cENUMENUMKeyword_3_0; }
		
		//EXECUTOR = 'EXECUTOR'
		public EnumLiteralDeclaration getEXECUTOREnumLiteralDeclaration_4() { return cEXECUTOREnumLiteralDeclaration_4; }
		
		//'EXECUTOR'
		public Keyword getEXECUTOREXECUTORKeyword_4_0() { return cEXECUTOREXECUTORKeyword_4_0; }
		
		//STEPS = 'STEPS'
		public EnumLiteralDeclaration getSTEPSEnumLiteralDeclaration_5() { return cSTEPSEnumLiteralDeclaration_5; }
		
		//'STEPS'
		public Keyword getSTEPSSTEPSKeyword_5_0() { return cSTEPSSTEPSKeyword_5_0; }
		
		//ENVIRONMENT_VARIABLE_NAME = 'ENVIRONMENT_VARIABLE_NAME'
		public EnumLiteralDeclaration getENVIRONMENT_VARIABLE_NAMEEnumLiteralDeclaration_6() { return cENVIRONMENT_VARIABLE_NAMEEnumLiteralDeclaration_6; }
		
		//'ENVIRONMENT_VARIABLE_NAME'
		public Keyword getENVIRONMENT_VARIABLE_NAMEENVIRONMENT_VARIABLE_NAMEKeyword_6_0() { return cENVIRONMENT_VARIABLE_NAMEENVIRONMENT_VARIABLE_NAMEKeyword_6_0; }
	}
	public class BRANCH_TYPEElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.BRANCH_TYPE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cOnlyEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cOnlyOnlyKeyword_0_0 = (Keyword)cOnlyEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cIgnoreEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cIgnoreIgnoreKeyword_1_0 = (Keyword)cIgnoreEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum BRANCH_TYPE returns BRANCH_TYPE:
		//                only = 'only' | ignore = 'ignore';
		public EnumRule getRule() { return rule; }
		
		//only = 'only' | ignore = 'ignore'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//only = 'only'
		public EnumLiteralDeclaration getOnlyEnumLiteralDeclaration_0() { return cOnlyEnumLiteralDeclaration_0; }
		
		//'only'
		public Keyword getOnlyOnlyKeyword_0_0() { return cOnlyOnlyKeyword_0_0; }
		
		//ignore = 'ignore'
		public EnumLiteralDeclaration getIgnoreEnumLiteralDeclaration_1() { return cIgnoreEnumLiteralDeclaration_1; }
		
		//'ignore'
		public Keyword getIgnoreIgnoreKeyword_1_0() { return cIgnoreIgnoreKeyword_1_0; }
	}
	
	private final PipelineElements pPipeline;
	private final ExecutorElements pExecutor;
	private final MACHINE_RESOURCE_TYPEElements eMACHINE_RESOURCE_TYPE;
	private final MACOS_RESOURCE_TYPEElements eMACOS_RESOURCE_TYPE;
	private final DOCKER_RESOURCE_TYPEElements eDOCKER_RESOURCE_TYPE;
	private final StepElements pStep;
	private final OrbElements pOrb;
	private final CommandElements pCommand;
	private final WorkflowElements pWorkflow;
	private final JobElements pJob;
	private final EStringElements pEString;
	private final EBooleanObjectElements pEBooleanObject;
	private final ParameterElements pParameter;
	private final RunElements pRun;
	private final RestoreCacheElements pRestoreCache;
	private final PersistToWorkspaceElements pPersistToWorkspace;
	private final StoreArtifactElements pStoreArtifact;
	private final StoreTestResultsElements pStoreTestResults;
	private final SetupRemoteDockerElements pSetupRemoteDocker;
	private final AddSSHKeysElements pAddSSHKeys;
	private final SaveCacheElements pSaveCache;
	private final AttachWorkspaceElements pAttachWorkspace;
	private final When_UnlessElements pWhen_Unless;
	private final CheckoutElements pCheckout;
	private final WHEN_TYPEElements eWHEN_TYPE;
	private final EnvironmentElements pEnvironment;
	private final RunCommandElements pRunCommand;
	private final ParametersElements pParameters;
	private final PARAMETER_TYPESElements ePARAMETER_TYPES;
	private final TriggerElements pTrigger;
	private final BranchElements pBranch;
	private final JobWorkflowElements pJobWorkflow;
	private final BRANCH_TYPEElements eBRANCH_TYPE;
	private final MatrixElements pMatrix;
	private final MatrixParamsElements pMatrixParams;
	private final EIntElements pEInt;
	private final EShortElements pEShort;
	private final MachineElements pMachine;
	private final MacOsElements pMacOs;
	private final DockerElements pDocker;
	private final Docker_AuthElements pDocker_Auth;
	private final Docker_Aws_AuthsElements pDocker_Aws_Auths;
	private final TerminalRule tNEWLINE;
	private final TerminalRule tBEGIN;
	private final TerminalRule tEND;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public CircleciGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pPipeline = new PipelineElements();
		this.pExecutor = new ExecutorElements();
		this.eMACHINE_RESOURCE_TYPE = new MACHINE_RESOURCE_TYPEElements();
		this.eMACOS_RESOURCE_TYPE = new MACOS_RESOURCE_TYPEElements();
		this.eDOCKER_RESOURCE_TYPE = new DOCKER_RESOURCE_TYPEElements();
		this.pStep = new StepElements();
		this.pOrb = new OrbElements();
		this.pCommand = new CommandElements();
		this.pWorkflow = new WorkflowElements();
		this.pJob = new JobElements();
		this.pEString = new EStringElements();
		this.pEBooleanObject = new EBooleanObjectElements();
		this.pParameter = new ParameterElements();
		this.pRun = new RunElements();
		this.pRestoreCache = new RestoreCacheElements();
		this.pPersistToWorkspace = new PersistToWorkspaceElements();
		this.pStoreArtifact = new StoreArtifactElements();
		this.pStoreTestResults = new StoreTestResultsElements();
		this.pSetupRemoteDocker = new SetupRemoteDockerElements();
		this.pAddSSHKeys = new AddSSHKeysElements();
		this.pSaveCache = new SaveCacheElements();
		this.pAttachWorkspace = new AttachWorkspaceElements();
		this.pWhen_Unless = new When_UnlessElements();
		this.pCheckout = new CheckoutElements();
		this.eWHEN_TYPE = new WHEN_TYPEElements();
		this.pEnvironment = new EnvironmentElements();
		this.pRunCommand = new RunCommandElements();
		this.pParameters = new ParametersElements();
		this.ePARAMETER_TYPES = new PARAMETER_TYPESElements();
		this.pTrigger = new TriggerElements();
		this.pBranch = new BranchElements();
		this.pJobWorkflow = new JobWorkflowElements();
		this.eBRANCH_TYPE = new BRANCH_TYPEElements();
		this.pMatrix = new MatrixElements();
		this.pMatrixParams = new MatrixParamsElements();
		this.pEInt = new EIntElements();
		this.pEShort = new EShortElements();
		this.pMachine = new MachineElements();
		this.pMacOs = new MacOsElements();
		this.pDocker = new DockerElements();
		this.pDocker_Auth = new Docker_AuthElements();
		this.pDocker_Aws_Auths = new Docker_Aws_AuthsElements();
		this.tNEWLINE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.NEWLINE");
		this.tBEGIN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.BEGIN");
		this.tEND = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.circleci.Circleci.END");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.circleci.Circleci".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Pipeline returns Pipeline:
	//    'Pipeline'
	//    ((BEGIN (setup?='setup')? 'version' version=EString END))
	//    ((orbs+=Orb)+ NEWLINE?)?
	//    ((commands+=Command)+ NEWLINE?)?
	//    ((executors+=Executor)+ NEWLINE?)?
	//    ((jobs+=Job)+ NEWLINE?)
	//    ((workflows+=Workflow)+ NEWLINE?)?
	//;
	public PipelineElements getPipelineAccess() {
		return pPipeline;
	}
	
	public ParserRule getPipelineRule() {
		return getPipelineAccess().getRule();
	}
	
	//Executor returns Executor:
	//    Machine | MacOs | Docker;
	public ExecutorElements getExecutorAccess() {
		return pExecutor;
	}
	
	public ParserRule getExecutorRule() {
		return getExecutorAccess().getRule();
	}
	
	//enum MACHINE_RESOURCE_TYPE returns MACHINE_RESOURCE_TYPE:
	//                MEDIUM = 'medium' | LARGE = 'large' | XLARGE = 'xlarge' | TWO_XLARGE = '2xlarge' | TWO_XLARGE_PLUS = '2xlarge+';
	public MACHINE_RESOURCE_TYPEElements getMACHINE_RESOURCE_TYPEAccess() {
		return eMACHINE_RESOURCE_TYPE;
	}
	
	public EnumRule getMACHINE_RESOURCE_TYPERule() {
		return getMACHINE_RESOURCE_TYPEAccess().getRule();
	}
	
	//enum MACOS_RESOURCE_TYPE returns MACOS_RESOURCE_TYPE:
	//                MACOS_X86_MEDIUM_GEN2 = 'macos.x86.medium.gen2*' | MACOS_M1_MEDIUM_GEN = 'macos.m1.medium.gen' | MACOS_M1_LARGE_GEN1 = 'macos.m1.large.gen1';
	public MACOS_RESOURCE_TYPEElements getMACOS_RESOURCE_TYPEAccess() {
		return eMACOS_RESOURCE_TYPE;
	}
	
	public EnumRule getMACOS_RESOURCE_TYPERule() {
		return getMACOS_RESOURCE_TYPEAccess().getRule();
	}
	
	//enum DOCKER_RESOURCE_TYPE returns DOCKER_RESOURCE_TYPE:
	//                SMALL = 'small' | MEDIUM = 'medium' | MEDIUM_PLUS = 'medium+' | LARGE = 'large' | XLARGE = 'xlarge' | TWO_XLARGE = '2xlarge' | TWO_XLARGE_PLUS = '2xlarge+';
	public DOCKER_RESOURCE_TYPEElements getDOCKER_RESOURCE_TYPEAccess() {
		return eDOCKER_RESOURCE_TYPE;
	}
	
	public EnumRule getDOCKER_RESOURCE_TYPERule() {
		return getDOCKER_RESOURCE_TYPEAccess().getRule();
	}
	
	//Step returns Step:
	//    Run | RestoreCache | PersistToWorkspace | StoreArtifact | StoreTestResults | SetupRemoteDocker | AddSSHKeys | SaveCache | AttachWorkspace | When_Unless | Checkout;
	public StepElements getStepAccess() {
		return pStep;
	}
	
	public ParserRule getStepRule() {
		return getStepAccess().getRule();
	}
	
	//Orb returns Orb:
	//    'Orb'
	//    (BEGIN
	//        'key' key=EString
	//        'value' value=EString
	//    END);
	public OrbElements getOrbAccess() {
		return pOrb;
	}
	
	public ParserRule getOrbRule() {
		return getOrbAccess().getRule();
	}
	
	//Command returns Command:
	//    'Command'
	//    (BEGIN
	//        'name' name=EString
	//        ('description' description=EString)?
	//        (parameters+=Parameter)*
	//        (steps+=Step)+
	//    END);
	public CommandElements getCommandAccess() {
		return pCommand;
	}
	
	public ParserRule getCommandRule() {
		return getCommandAccess().getRule();
	}
	
	//Workflow returns Workflow:
	//    'Workflow'
	//    (BEGIN
	//        'name' name=EString
	//        'version' version=EString
	//        (triggers+=Trigger)*
	//        (branches+=Branch)*
	//        (when_unless=When_Unless)?
	//        (jobworkflow+=JobWorkflow)+
	//    END);
	public WorkflowElements getWorkflowAccess() {
		return pWorkflow;
	}
	
	public ParserRule getWorkflowRule() {
		return getWorkflowAccess().getRule();
	}
	
	//Job returns Job:
	//    'Job'
	//    (BEGIN
	//        ('name' name=EString)
	//        ('parallelism' parallelism=EShort)?
	//        ('reuseExecutor' reuseExecutor=EString)?
	//        (executors+=Executor)*
	//        (environments+=Environment)*
	//        (parameters+=Parameter)*
	//        (steps+=Step)+
	//    END);
	public JobElements getJobAccess() {
		return pJob;
	}
	
	public ParserRule getJobRule() {
		return getJobAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//EBooleanObject returns ecore::EBooleanObject:
	//    'true' | 'false';
	public EBooleanObjectElements getEBooleanObjectAccess() {
		return pEBooleanObject;
	}
	
	public ParserRule getEBooleanObjectRule() {
		return getEBooleanObjectAccess().getRule();
	}
	
	//Parameter returns Parameter:
	//    'Parameter'
	//    (BEGIN
	//        'name' name=EString
	//        'type' type=PARAMETER_TYPES
	//        ('default' default=EString )?
	//        ('description' description=EString )?
	//        ('enumValues' enumValues+=EString (',' enumValues+=EString)*)?
	//    END);
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//Run returns Run:
	//    'Run'
	//    (BEGIN
	//        ('name' name=EString)?
	//        (background?='background')?
	//        ('when' when=WHEN_TYPE)?
	//        ('working_directory' working_directory=EString)?
	//        ('no_output_timeout' no_output_timeout=EString)?
	//        ('shell' shell=EString)?
	//        (environments+=Environment)*
	//        (run_commands+=RunCommand)+
	//        (parameters+=Parameters)*
	//    END);
	public RunElements getRunAccess() {
		return pRun;
	}
	
	public ParserRule getRunRule() {
		return getRunAccess().getRule();
	}
	
	//RestoreCache returns RestoreCache:
	//    {RestoreCache}
	//    'RestoreCache'
	//    (BEGIN
	//        ('name' name=EString)?
	//        ('key' key=EString)?
	//        ('keys' keys+=EString (',' keys+=EString)*)?
	//    END);
	public RestoreCacheElements getRestoreCacheAccess() {
		return pRestoreCache;
	}
	
	public ParserRule getRestoreCacheRule() {
		return getRestoreCacheAccess().getRule();
	}
	
	//PersistToWorkspace returns PersistToWorkspace:
	//    'PersistToWorkspace'
	//    (BEGIN
	//        ('name' name=EString)?
	//        'root' root=EString
	//        'paths' paths+=EString (',' paths+=EString)*
	//    END);
	public PersistToWorkspaceElements getPersistToWorkspaceAccess() {
		return pPersistToWorkspace;
	}
	
	public ParserRule getPersistToWorkspaceRule() {
		return getPersistToWorkspaceAccess().getRule();
	}
	
	//StoreArtifact returns StoreArtifact:
	//    'StoreArtifact'
	//    (BEGIN
	//        ('name' name=EString)?
	//        'path' path=EString
	//        ('destination' destination=EString)?
	//    END);
	public StoreArtifactElements getStoreArtifactAccess() {
		return pStoreArtifact;
	}
	
	public ParserRule getStoreArtifactRule() {
		return getStoreArtifactAccess().getRule();
	}
	
	//StoreTestResults returns StoreTestResults:
	//    'StoreTestResults'
	//    (BEGIN
	//        ('name' name=EString )?
	//        'path' path=EString
	//    END);
	public StoreTestResultsElements getStoreTestResultsAccess() {
		return pStoreTestResults;
	}
	
	public ParserRule getStoreTestResultsRule() {
		return getStoreTestResultsAccess().getRule();
	}
	
	//SetupRemoteDocker returns SetupRemoteDocker:
	//    {SetupRemoteDocker}
	//    'SetupRemoteDocker'
	//    (BEGIN
	//        ('name' name=EString)?
	//        (docker_layer_caching?='docker_layer_caching' )?
	//        ('version' version=EString)?
	//    END);
	public SetupRemoteDockerElements getSetupRemoteDockerAccess() {
		return pSetupRemoteDocker;
	}
	
	public ParserRule getSetupRemoteDockerRule() {
		return getSetupRemoteDockerAccess().getRule();
	}
	
	//AddSSHKeys returns AddSSHKeys:
	//    {AddSSHKeys}
	//    'AddSSHKeys'
	//    (BEGIN
	//        ('name' name=EString)?
	//        ('fingerprints' fingerprints+=EString (',' fingerprints+=EString) )?
	//    END);
	public AddSSHKeysElements getAddSSHKeysAccess() {
		return pAddSSHKeys;
	}
	
	public ParserRule getAddSSHKeysRule() {
		return getAddSSHKeysAccess().getRule();
	}
	
	//SaveCache returns SaveCache:
	//    'SaveCache'
	//    (BEGIN
	//        ('name' name=EString)?
	//        'paths' paths+=EString (',' paths+=EString)*
	//        'key' key=EString
	//        ('when' when=WHEN_TYPE)?
	//    END);
	public SaveCacheElements getSaveCacheAccess() {
		return pSaveCache;
	}
	
	public ParserRule getSaveCacheRule() {
		return getSaveCacheAccess().getRule();
	}
	
	//AttachWorkspace returns AttachWorkspace:
	//    'AttachWorkspace'
	//    (BEGIN
	//        ('name' name=EString)?
	//        'at' at=EString
	//    END);
	public AttachWorkspaceElements getAttachWorkspaceAccess() {
		return pAttachWorkspace;
	}
	
	public ParserRule getAttachWorkspaceRule() {
		return getAttachWorkspaceAccess().getRule();
	}
	
	//When_Unless returns When_Unless:
	//    'When_Unless'
	//    (BEGIN
	//        ('name' name=EString)?
	//        'condition' condition=EString
	//        'when_step' (BEGIN (when_step+=Step)+ END)
	//        ('unless_step' (BEGIN (unless_step+=Step)+ END) )?
	//    END);
	public When_UnlessElements getWhen_UnlessAccess() {
		return pWhen_Unless;
	}
	
	public ParserRule getWhen_UnlessRule() {
		return getWhen_UnlessAccess().getRule();
	}
	
	//Checkout returns Checkout:
	//    {Checkout}
	//    'Checkout'
	//    (BEGIN
	//        ('name' name=EString)?
	//        ('path' path=EString)?
	//    END)?;
	public CheckoutElements getCheckoutAccess() {
		return pCheckout;
	}
	
	public ParserRule getCheckoutRule() {
		return getCheckoutAccess().getRule();
	}
	
	//enum WHEN_TYPE returns WHEN_TYPE:
	//                on_success = 'on_success' | always = 'always' | on_fail = 'on_fail';
	public WHEN_TYPEElements getWHEN_TYPEAccess() {
		return eWHEN_TYPE;
	}
	
	public EnumRule getWHEN_TYPERule() {
		return getWHEN_TYPEAccess().getRule();
	}
	
	//Environment returns Environment:
	//    'Environment'
	//    (BEGIN
	//        'key' key=EString
	//        'value' value=EString
	//    END);
	public EnvironmentElements getEnvironmentAccess() {
		return pEnvironment;
	}
	
	public ParserRule getEnvironmentRule() {
		return getEnvironmentAccess().getRule();
	}
	
	//RunCommand returns RunCommand:
	//    {RunCommand}
	//    'RunCommand'
	//    (BEGIN
	//        'name' name=EString
	//    END);
	public RunCommandElements getRunCommandAccess() {
		return pRunCommand;
	}
	
	public ParserRule getRunCommandRule() {
		return getRunCommandAccess().getRule();
	}
	
	//Parameters returns Parameters:
	//    'Parameters'
	//    (BEGIN
	//        'parameter' parameter=EString
	//    END);
	public ParametersElements getParametersAccess() {
		return pParameters;
	}
	
	public ParserRule getParametersRule() {
		return getParametersAccess().getRule();
	}
	
	//enum PARAMETER_TYPES returns PARAMETER_TYPES:
	//                STRING = 'STRING' | BOOLEAN = 'BOOLEAN' | INTEGER = 'INTEGER' | ENUM = 'ENUM' | EXECUTOR = 'EXECUTOR' | STEPS = 'STEPS' | ENVIRONMENT_VARIABLE_NAME = 'ENVIRONMENT_VARIABLE_NAME';
	public PARAMETER_TYPESElements getPARAMETER_TYPESAccess() {
		return ePARAMETER_TYPES;
	}
	
	public EnumRule getPARAMETER_TYPESRule() {
		return getPARAMETER_TYPESAccess().getRule();
	}
	
	//Trigger returns Trigger:
	//    'Trigger'
	//    (BEGIN
	//        'cron' cron=EString
	//    END);
	public TriggerElements getTriggerAccess() {
		return pTrigger;
	}
	
	public ParserRule getTriggerRule() {
		return getTriggerAccess().getRule();
	}
	
	//Branch returns Branch:
	//    'Branch'
	//    (BEGIN
	//        'name' name=EString
	//        'branch' branch=BRANCH_TYPE
	//    END);
	public BranchElements getBranchAccess() {
		return pBranch;
	}
	
	public ParserRule getBranchRule() {
		return getBranchAccess().getRule();
	}
	
	//JobWorkflow returns JobWorkflow:
	//    {JobWorkflow}
	//    'JobWorkflow'
	//    (BEGIN
	//        'name' name=EString
	//        (approvalJob?='approvalJob' )?
	//        ('requires'requires+=EString (',' requires+=EString)* )?
	//        ('context' context+=EString (',' context+=EString)* )?
	//        (branches+=Branch)*
	//        (matrix=Matrix)?
	//    END);
	public JobWorkflowElements getJobWorkflowAccess() {
		return pJobWorkflow;
	}
	
	public ParserRule getJobWorkflowRule() {
		return getJobWorkflowAccess().getRule();
	}
	
	//enum BRANCH_TYPE returns BRANCH_TYPE:
	//                only = 'only' | ignore = 'ignore';
	public BRANCH_TYPEElements getBRANCH_TYPEAccess() {
		return eBRANCH_TYPE;
	}
	
	public EnumRule getBRANCH_TYPERule() {
		return getBRANCH_TYPEAccess().getRule();
	}
	
	//Matrix returns Matrix:
	//    'Matrix'
	//    (BEGIN
	//        ('alias' alias=EString )?
	//        ('matrix_exclude' (BEGIN (matrix_exclude+=MatrixParams)* END) )?
	//        'matrix_params' (BEGIN (matrix_params+=MatrixParams)+ END)
	//    END);
	public MatrixElements getMatrixAccess() {
		return pMatrix;
	}
	
	public ParserRule getMatrixRule() {
		return getMatrixAccess().getRule();
	}
	
	//MatrixParams returns MatrixParams:
	//    'MatrixParams'
	//    (BEGIN
	//        'key' key=EString
	//        'values' values+=EString (',' values+=EString)*
	//    END);
	public MatrixParamsElements getMatrixParamsAccess() {
		return pMatrixParams;
	}
	
	public ParserRule getMatrixParamsRule() {
		return getMatrixParamsAccess().getRule();
	}
	
	//EInt returns ecore::EInt:
	//    '-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//EShort returns ecore::EShort:
	//    '-'? INT;
	public EShortElements getEShortAccess() {
		return pEShort;
	}
	
	public ParserRule getEShortRule() {
		return getEShortAccess().getRule();
	}
	
	//Machine returns Machine:
	//    'Machine'
	//    (BEGIN
	//        ('name' name=EString)?
	//        'image' image=EString
	//        (docker_layer_caching?='docker_layer_caching')?
	//        'resourceClass' resourceClass=MACHINE_RESOURCE_TYPE
	//        ('shell' shell=EString )?
	//        ('working_directory' working_directory=EString )?
	//        (environments+=Environment)*
	//    END);
	public MachineElements getMachineAccess() {
		return pMachine;
	}
	
	public ParserRule getMachineRule() {
		return getMachineAccess().getRule();
	}
	
	//MacOs returns MacOs:
	//    'MacOs'
	//    (BEGIN
	//        ('name' name=EString)?
	//        ('xcode' xcode=EString)
	//        ('resourceClass' resourceClass=MACOS_RESOURCE_TYPE)
	//        ('shell' shell=EString)?
	//        ('working_directory' working_directory=EString)?
	//        (environments+=Environment)*
	//    END);
	public MacOsElements getMacOsAccess() {
		return pMacOs;
	}
	
	public ParserRule getMacOsRule() {
		return getMacOsAccess().getRule();
	}
	
	//Docker returns Docker:
	//    'Docker'
	//    (BEGIN
	//        ('name' name=EString)?
	//        'image' image=EString
	//        'resourceClass' resourceClass=DOCKER_RESOURCE_TYPE
	//        ('shell' shell=EString )?
	//        ('working_directory' working_directory=EString )?
	//        ('entrypoint' entrypoint+=EString (',' entrypoint+=EString)* )?
	//        ('command' command+=EString (',' command+=EString)* )?
	//        ('user' user=EString )?
	//        (environments+=Environment)*
	//        (docker_auth=Docker_Auth)?
	//        (docker_aws_auth=Docker_Aws_Auths)?
	//    END);
	public DockerElements getDockerAccess() {
		return pDocker;
	}
	
	public ParserRule getDockerRule() {
		return getDockerAccess().getRule();
	}
	
	//Docker_Auth returns Docker_Auth:
	//    'Docker_Auth'
	//    (BEGIN
	//        'username' username=EString
	//        'password' password=EString
	//    END);
	public Docker_AuthElements getDocker_AuthAccess() {
		return pDocker_Auth;
	}
	
	public ParserRule getDocker_AuthRule() {
		return getDocker_AuthAccess().getRule();
	}
	
	//Docker_Aws_Auths returns Docker_Aws_Auths:
	//    'Docker_Aws_Auths'
	//    (BEGIN
	//        'aws_access_key_id' aws_access_key_id=EString
	//        'aws_secret_access_key' aws_secret_access_key=EString
	//    END);
	public Docker_Aws_AuthsElements getDocker_Aws_AuthsAccess() {
		return pDocker_Aws_Auths;
	}
	
	public ParserRule getDocker_Aws_AuthsRule() {
		return getDocker_Aws_AuthsAccess().getRule();
	}
	
	//terminal NEWLINE:
	//// New line on DOS or Unix
	//    '\r'? '\n';
	public TerminalRule getNEWLINERule() {
		return tNEWLINE;
	}
	
	//terminal BEGIN: 'synthetic:BEGIN';
	public TerminalRule getBEGINRule() {
		return tBEGIN;
	}
	
	//  // increase indentation
	//terminal END: 'synthetic:END';
	public TerminalRule getENDRule() {
		return tEND;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
